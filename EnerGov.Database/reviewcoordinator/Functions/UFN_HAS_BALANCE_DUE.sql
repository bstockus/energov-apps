CREATE FUNCTION [reviewcoordinator].[UFN_HAS_BALANCE_DUE]
(
	@ENTITYID CHAR(36)
)
RETURNS BIT
AS
BEGIN
DECLARE @statusdeleted INT = 10
DECLARE @statusVoid INT = 5
DECLARE @hasBalanceDue BIT = 0
DECLARE @balanceDue MONEY = 0
	;WITH CTE AS
	(SELECT SUM(CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) BALANCE
	FROM PMPERMITFEE
	INNER JOIN CACOMPUTEDFEE ON CACOMPUTEDFEE.CACOMPUTEDFEEID = PMPERMITFEE.CACOMPUTEDFEEID
	WHERE PMPERMITFEE.PMPERMITID = @ENTITYID AND 
	CACOMPUTEDFEE.CASTATUSID != @STATUSDELETED AND CACOMPUTEDFEE.CASTATUSID != @STATUSVOID
	AND (CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) > 0

	UNION ALL

	SELECT SUM(CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) BALANCE
	FROM PLPLANFEE
	INNER JOIN CACOMPUTEDFEE ON CACOMPUTEDFEE.CACOMPUTEDFEEID = PLPLANFEE.CACOMPUTEDFEEID
	WHERE PLPLANFEE.PLPLANID = @ENTITYID AND
	CACOMPUTEDFEE.CASTATUSID != @STATUSDELETED AND CACOMPUTEDFEE.CASTATUSID != @STATUSVOID)

	SELECT @balanceDue = SUM(BALANCE) FROM CTE
	IF @balanceDue > 0
		BEGIN
			SET @hasBalanceDue = 1
		END
RETURN @hasBalanceDue
END