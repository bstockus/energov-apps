CREATE PROCEDURE [reviewcoordinator].[USP_ENTITY_SUBMITTAL_SEARCH]
	@ASSIGNEDUSERIDS AS RECORDIDS READONLY,
	@TODAY AS DATE = NULL,
	@NEXTBUSINESSDAYBEGIN AS DATE = NULL,
	@NEXTBUSINESSDAYEND AS DATE = NULL,
	@OVERDUEDATE AS DATE = NULL,		
	@CUSTOMBEGIN AS DATE = NULL,
	@CUSTOMEND AS DATE = NULL,	
	@TYPEIDS AS RECORDIDS READONLY,
	@ENTITYIDS AS RECORDIDS READONLY,
	@PROJECTIDS AS RECORDIDS READONLY,
	@SUBMITTALTYPEIDS AS RECORDIDS READONLY,
	@LOCATIONIDS AS RECORDIDS READONLY,
	@ALLOWHOLDOVERRIDE BIT,
	@SORTORDER as INT = 0,
	@PAGE_NUMBER AS INT = 1,
	@PAGE_SIZE AS INT = 10,
	@IS_ASCENDING AS BIT = 1
AS
BEGIN

SET NOCOUNT ON;
WITH RAW_DATA AS 
(
	(SELECT *, 
	CASE @IS_ASCENDING WHEN 1 THEN
			CASE WHEN @SORTORDER = 0 THEN ROW_NUMBER() OVER(ORDER BY DUEDATE) ELSE ROW_NUMBER() OVER(ORDER BY RECEIVEDDATE) END
		ELSE
			CASE WHEN @SORTORDER = 0 THEN ROW_NUMBER() OVER(ORDER BY DUEDATE DESC) ELSE ROW_NUMBER() OVER(ORDER BY RECEIVEDDATE DESC) END
		END AS RowNumber,
		COUNT(1) OVER() AS TotalRows
	FROM (
	SELECT		
		PMPERMIT.PMPERMITID ENTITYID,
		PMPERMIT.PERMITNUMBER ENTITYNUMBER,
		PMPERMIT.PMPERMITTYPEID ENTITYTYPEID,
		PMPERMITTYPE.NAME ENTITYTYPE,
		PMPERMITWORKCLASS.PMPERMITWORKCLASSID ENTITYWORKCLASSID,
		PMPERMITWORKCLASS.NAME ENTITYWORKCLASS,
		PRPROJECT.PRPROJECTID PROJECTID,
		PRPROJECT.NAME PROJECTNAME,	
		PARCEL.PARCELNUMBER MAINPARCEL,
		2 MODULE,
		PLSUBMITTAL.PLSUBMITTALID SUBMITTALID,
		PLSUBMITTALTYPE.PLSUBMITTALTYPEID SUBMITTALTYPEID,
		PLSUBMITTALTYPE.TYPENAME SUBMITTALTYPENAME,
		PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID SUBMITTALSTATUSID,
		PLSUBMITTALSTATUS.NAME SUBMITTALSTATUSNAME,
		PLSUBMITTAL.DUEDATE,		
		PLSUBMITTAL.RECEIVEDDATE,
		0 NUMBERCOMPLETEDREVIEWS,
		0 NUMBERREVIEWS,
		ERENTITYSESSION.ERENTITYSESSIONID SESSIONID,
		ERENTITYSESSION.SESSIONNAME,
		HASACTIVESTOPHOLDS = [reviewcoordinator].UFN_HAS_ACTIVE_STOP_HOLDS(PMPERMIT.PMPERMITID, @ALLOWHOLDOVERRIDE),
		PMPERMIT.ASSIGNEDTO ASSIGNEDTO,
		USERS.FNAME,
		USERS.LNAME,
		PLSUBMITTAL.COMPLETED,
		PLSUBMITTAL.COMPLETEDATE,
		PMPERMITADDRESS.MAILINGADDRESSID LOCATIONID		
	FROM PLSUBMITTAL
	INNER JOIN PLSUBMITTALTYPE ON PLSUBMITTALTYPE.PLSUBMITTALTYPEID = PLSUBMITTAL.PLSUBMITTALTYPEID
	INNER JOIN PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
	INNER JOIN PMPERMIT ON PMPERMIT.PMPERMITID = PLSUBMITTAL.PMPERMITID
	INNER JOIN PMPERMITTYPE ON PMPERMITTYPE.PMPERMITTYPEID = PMPERMIT.PMPERMITTYPEID
	INNER JOIN PMPERMITWORKCLASS ON PMPERMITWORKCLASS.PMPERMITWORKCLASSID = PMPERMIT.PMPERMITWORKCLASSID
	LEFT OUTER JOIN PRPROJECTPERMIT ON PRPROJECTPERMIT.PMPERMITID = PMPERMIT.PMPERMITID
	LEFT OUTER JOIN PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTPERMIT.PRPROJECTID	
	LEFT OUTER JOIN PMPERMITADDRESS ON PMPERMITADDRESS.PMPERMITID = PMPERMIT.PMPERMITID AND PMPERMITADDRESS.MAIN = 1
	LEFT OUTER JOIN PMPERMITPARCEL ON PMPERMITPARCEL.PMPERMITID = PMPERMIT.PMPERMITID AND PMPERMITPARCEL.MAIN = 1
	LEFT OUTER JOIN PARCEL ON PARCEL.PARCELID = PMPERMITPARCEL.PARCELID	
	LEFT OUTER JOIN ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	LEFT OUTER JOIN USERS ON USERS.SUSERGUID = PMPERMIT.ASSIGNEDTO
	UNION ALL
	SELECT		
		PLPLAN.PLPLANID ENTITYID,
		PLPLAN.PLANNUMBER ENTITYNUMBER,
		PLPLAN.PLPLANTYPEID ENTITYTYPEID,
		PLPLANTYPE.PLANNAME ENTITYTYPE,
		PLPLANWORKCLASS.PLPLANWORKCLASSID ENTITYWORKCLASSID,
		PLPLANWORKCLASS.NAME ENTITYWORKCLASS,
		PRPROJECT.PRPROJECTID PROJECTID,
		PRPROJECT.NAME PROJECTNAME,	
		PARCEL.PARCELNUMBER MAINPARCEL,
		2 MODULE,
		PLSUBMITTAL.PLSUBMITTALID SUBMITTALID,
		PLSUBMITTALTYPE.PLSUBMITTALTYPEID SUBMITTALTYPEID,
		PLSUBMITTALTYPE.TYPENAME SUBMITTALTYPENAME,
		PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID SUBMITTALSTATUSID,
		PLSUBMITTALSTATUS.NAME SUBMITTALSTATUSNAME,
		PLSUBMITTAL.DUEDATE,		
		PLSUBMITTAL.RECEIVEDDATE,
		0 NUMBERCOMPLETEDREVIEWS,
		0 NUMBERREVIEWS,
		ERENTITYSESSION.ERENTITYSESSIONID SESSIONID,
		ERENTITYSESSION.SESSIONNAME,
		HASACTIVESTOPHOLDS = [reviewcoordinator].UFN_HAS_ACTIVE_STOP_HOLDS(PLPLAN.PLPLANID, @ALLOWHOLDOVERRIDE),
		PLPLAN.ASSIGNEDTO ASSIGNEDTO,
		USERS.FNAME,
		USERS.LNAME,
		PLSUBMITTAL.COMPLETED,
		PLSUBMITTAL.COMPLETEDATE,
		PLPLANADDRESS.MAILINGADDRESSID LOCATIONID		
	FROM PLSUBMITTAL
	INNER JOIN PLSUBMITTALTYPE ON PLSUBMITTALTYPE.PLSUBMITTALTYPEID = PLSUBMITTAL.PLSUBMITTALTYPEID
	INNER JOIN PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
	INNER JOIN PLPLAN ON PLPLAN.PLPLANID = PLSUBMITTAL.PLPLANID
	INNER JOIN PLPLANTYPE ON PLPLANTYPE.PLPLANTYPEID = PLPLAN.PLPLANTYPEID
	INNER JOIN PLPLANWORKCLASS ON PLPLANWORKCLASS.PLPLANWORKCLASSID = PLPLAN.PLPLANWORKCLASSID
	LEFT OUTER JOIN PRPROJECTPLAN ON PRPROJECTPLAN.PLPLANID = PLPLAN.PLPLANID
	LEFT OUTER JOIN PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTPLAN.PRPROJECTID	
	LEFT OUTER JOIN PLPLANADDRESS ON PLPLANADDRESS.PLPLANID = PLPLAN.PLPLANID AND PLPLANADDRESS.MAIN = 1
	LEFT OUTER JOIN PLPLANPARCEL ON PLPLANPARCEL.PLPLANID = PLPLAN.PLPLANID AND PLPLANPARCEL.MAIN = 1	
	LEFT OUTER JOIN PARCEL ON PARCEL.PARCELID = PLPLANPARCEL.PARCELID	
	LEFT OUTER JOIN ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	LEFT OUTER JOIN USERS ON USERS.SUSERGUID = PLPLAN.ASSIGNEDTO
) AS QUERY_DATA
	WHERE
	(ASSIGNEDTO IN (SELECT RECORDID FROM @ASSIGNEDUSERIDS)) AND
	COMPLETED = 0 AND COMPLETEDATE IS NULL AND
	(
	@TODAY IS NULL AND @NEXTBUSINESSDAYBEGIN IS NULL AND @NEXTBUSINESSDAYEND IS NULL AND @OVERDUEDATE IS NULL AND @CUSTOMBEGIN IS NULL AND @CUSTOMEND IS NULL
	OR
	(	
	(DUEDATE >= @TODAY AND DUEDATE < DATEADD(D, 1, @TODAY)) OR
	(DUEDATE < @OVERDUEDATE) OR
	(DUEDATE >= @NEXTBUSINESSDAYBEGIN AND DUEDATE < DATEADD(D, 1, @NEXTBUSINESSDAYEND)) OR
	(DUEDATE >= @CUSTOMBEGIN AND DUEDATE < DATEADD(D, 1, @CUSTOMEND)))
	) AND
	(NOT EXISTS(SELECT * FROM @TYPEIDS) OR ENTITYTYPEID IN (SELECT RECORDID FROM @TYPEIDS)) AND
	(NOT EXISTS(SELECT * FROM @ENTITYIDS) OR ENTITYID IN (SELECT RECORDID FROM @ENTITYIDS)) AND
	(NOT EXISTS(SELECT * FROM @PROJECTIDS) OR ISNULL(PROJECTID,'') IN (SELECT ISNULL(RECORDID,'') FROM @PROJECTIDS)) AND
	(NOT EXISTS(SELECT * FROM @SUBMITTALTYPEIDS) OR SUBMITTALTYPEID IN (SELECT RECORDID FROM @SUBMITTALTYPEIDS)) AND
	(NOT EXISTS(SELECT * FROM @LOCATIONIDS) OR ISNULL(LOCATIONID,'') IN (SELECT ISNULL(RECORDID,'') FROM @LOCATIONIDS))
))
SELECT * 
INTO #RESULT_DATA
FROM RAW_DATA 
WHERE
	RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND 
	RowNumber <= @PAGE_SIZE * @PAGE_NUMBER

SELECT * FROM #RESULT_DATA ORDER BY RowNumber

DECLARE @RESULT_ENTITYIDS RECORDIDS
INSERT INTO @RESULT_ENTITYIDS SELECT DISTINCT ENTITYID FROM #RESULT_DATA

DECLARE @RESULT_SUBMITTALIDS RECORDIDS
INSERT INTO @RESULT_SUBMITTALIDS SELECT DISTINCT SUBMITTALID FROM #RESULT_DATA

exec reviewcoordinator.USP_ADDRESS_GETBYENTITYIDS @ENTITYIDS = @RESULT_ENTITYIDS
exec reviewcoordinator.USP_HOLD_GETBYENTITYIDS @ENTITYIDS = @RESULT_ENTITYIDS
exec reviewcoordinator.USP_ITEM_REVIEWS_GETBYPLSUBMITTALIDS @SUBMITTALIDS = @RESULT_SUBMITTALIDS

END