CREATE PROCEDURE [reviewcoordinator].[USP_DASHBOARD_STATS_GET]
	@ASSIGNEDUSERID char(36),
	@TEAMMEMBERIDS RECORDIDS READONLY,
	@TODAY Date,
	@UPCOMINGDUEDATEBEGIN Date,
	@UPCOMINGDUEDATEEND Date
AS
BEGIN

SET NOCOUNT ON;

declare @WorkflowStatusStarted int
set @WorkflowStatusStarted = 5

;WITH CTE_ITEMREVIEWLIST AS (
	SELECT PLITEMREVIEWID FROM PLITEMREVIEW
	JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	WHERE NOTREQUIRED = 0 AND ASSIGNEDUSERID = @ASSIGNEDUSERID
	AND	PLITEMREVIEW.COMPLETED = 0 AND	PLSUBMITTAL.COMPLETED = 0
) 
, CTE_PRIORITY AS (
	SELECT	PLSUBMITTALID, MIN(PRIORITYORDER) AS MINPRIORITY
	FROM	PLITEMREVIEW
	WHERE	PLSUBMITTALID IN (SELECT PLSUBMITTALID FROM PLITEMREVIEW WHERE PLITEMREVIEWID IN (SELECT PLITEMREVIEWID FROM CTE_ITEMREVIEWLIST))
	AND		COMPLETED = 0
	GROUP BY PLSUBMITTALID
) 
SELECT 
NumberOfCases = 
	-- permit
	(
	SELECT DISTINCT COUNT(PMPERMITID) FROM PMPERMIT
	WHERE 
	(
	PMPERMIT.ASSIGNEDTO = @ASSIGNEDUSERID OR 
	PMPERMIT.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PMPERMIT.FINALIZEDATE IS NULL
	) +
	-- plan
	(
	SELECT COUNT(*) FROM PLPLAN
	WHERE 
	(
	PLPLAN.ASSIGNEDTO = @ASSIGNEDUSERID OR 
	PLPLAN.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLPLAN.COMPLETEDATE IS NULL
	),
NumberInReview = 
	-- permit
	(
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PMPERMIT ON PMPERMIT.PMPERMITID = PLSUBMITTAL.PMPERMITID
	WHERE 
	(
	PMPERMIT.ASSIGNEDTO = @ASSIGNEDUSERID OR 
	PMPERMIT.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	) + 
	-- plan
	(
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PLPLAN ON PLPLAN.PLPLANID = PLSUBMITTAL.PLPLANID
	WHERE 
	(
	PLPLAN.ASSIGNEDTO = @ASSIGNEDUSERID OR 
	PLPLAN.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	),
NumberUpComingDue = 
	-- permit
	(
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PMPERMIT ON PMPERMIT.PMPERMITID = PLSUBMITTAL.PMPERMITID
	WHERE 
	(
	PMPERMIT.ASSIGNEDTO = @ASSIGNEDUSERID OR 
	PMPERMIT.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND PLSUBMITTAL.DUEDATE >= @UPCOMINGDUEDATEBEGIN AND PLSUBMITTAL.DUEDATE < DATEADD(d, 1, @UPCOMINGDUEDATEEND)
	) + 
	-- plan
	(
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PLPLAN ON PLPLAN.PLPLANID = PLSUBMITTAL.PLPLANID
	WHERE 
	(
	PLPLAN.ASSIGNEDTO = @ASSIGNEDUSERID OR
	PLPLAN.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND PLSUBMITTAL.DUEDATE >= @UPCOMINGDUEDATEBEGIN AND PLSUBMITTAL.DUEDATE < DATEADD(d, 1, @UPCOMINGDUEDATEEND)
	),
NumberOverDue =
	--- permit
	(
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PMPERMIT ON PMPERMIT.PMPERMITID = PLSUBMITTAL.PMPERMITID
	WHERE
	(
	PMPERMIT.ASSIGNEDTO = @ASSIGNEDUSERID OR
	PMPERMIT.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND PLSUBMITTAL.DUEDATE < @TODAY
	) + 
	-- plan
	(	
	SELECT COUNT(*) 
	FROM PLSUBMITTAL
	INNER JOIN PLPLAN ON PLPLAN.PLPLANID = PLSUBMITTAL.PLPLANID
	WHERE 
	(
	PLPLAN.ASSIGNEDTO = @ASSIGNEDUSERID OR
	PLPLAN.ASSIGNEDTO IN (SELECT RECORDID FROM @TEAMMEMBERIDS)
	)
	AND PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND PLSUBMITTAL.DUEDATE < @TODAY
	),
NumberMyReviews = 
	-- permit
	(	
	SELECT COUNT(*) 
	FROM PLITEMREVIEW
	INNER JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	INNER JOIN PMPERMITWFACTIONSTEP ON PMPERMITWFACTIONSTEP.PMPERMITWFACTIONSTEPID = PLSUBMITTAL.PMPERMITWFACTIONSTEPID
	WHERE PLITEMREVIEW.ASSIGNEDUSERID = @ASSIGNEDUSERID AND 
	PLITEMREVIEW.NOTREQUIRED = 0 AND 
	PLITEMREVIEW.COMPLETED = 0 AND 
	PMPERMITWFACTIONSTEP.WORKFLOWSTATUSID = @WorkflowStatusStarted AND
	PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND	PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	) +
	-- plan
	(
	SELECT COUNT(*) 
	FROM PLITEMREVIEW
	INNER JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	INNER JOIN PLPLANWFACTIONSTEP ON PLPLANWFACTIONSTEP.PLPLANWFACTIONSTEPID = PLSUBMITTAL.PLPLANWFACTIONSTEPID
	WHERE PLITEMREVIEW.ASSIGNEDUSERID = @ASSIGNEDUSERID AND 
	PLITEMREVIEW.NOTREQUIRED = 0 AND 
	PLITEMREVIEW.COMPLETED = 0 AND 
	PLPLANWFACTIONSTEP.WORKFLOWSTATUSID = @WorkflowStatusStarted AND
	PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND	PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	) +
	-- business license
	(	
	SELECT COUNT(*) 
	FROM PLITEMREVIEW
	INNER JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	INNER JOIN BLLICENSEWFACTIONSTEP ON BLLICENSEWFACTIONSTEP.BLLICENSEWFACTIONSTEPID = PLSUBMITTAL.BLLICENSEWFACTIONSTEPID
	WHERE PLITEMREVIEW.ASSIGNEDUSERID = @ASSIGNEDUSERID AND 
	PLITEMREVIEW.NOTREQUIRED = 0 AND 
	PLITEMREVIEW.COMPLETED = 0 AND 
	BLLICENSEWFACTIONSTEP.WORKFLOWSTATUSID = @WorkflowStatusStarted AND
	PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE is null
	AND	PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	) +
	-- professional license
	( 	
	SELECT COUNT(*) 
	FROM PLITEMREVIEW
	INNER JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	INNER JOIN ILLICENSEWFACTIONSTEP ON ILLICENSEWFACTIONSTEP.ILLICENSEWFACTIONSTEPID = PLSUBMITTAL.ILLICENSEWFACTIONSTEPID
	WHERE PLITEMREVIEW.ASSIGNEDUSERID = @ASSIGNEDUSERID AND 
	PLITEMREVIEW.NOTREQUIRED = 0 AND 
	PLITEMREVIEW.COMPLETED = 0 AND 
	ILLICENSEWFACTIONSTEP.WORKFLOWSTATUSID = @WorkflowStatusStarted AND
	PLSUBMITTAL.COMPLETED = 0 AND PLSUBMITTAL.COMPLETEDATE IS NULL
	AND	PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	)

END