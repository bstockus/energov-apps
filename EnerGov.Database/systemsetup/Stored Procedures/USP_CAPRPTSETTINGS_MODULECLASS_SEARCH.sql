CREATE PROCEDURE [systemsetup].[USP_CAPRPTSETTINGS_MODULECLASS_SEARCH]
(
	@SEARCH			AS NVARCHAR(MAX)	=	'',
	@PAGE_NUMBER	AS INT				=	1,
	@PAGE_SIZE		AS INT				=	10,
	@IS_ASCENDING	AS BIT				=	1,
	@CAPMODULESID	AS INT				=	0,
	@MODULETYPEID	AS CHAR(36)			=	NULL
)
AS

DECLARE @MODULENAME NVARCHAR(100) = (SELECT [CAPMODULES].[NAME] FROM [CAPMODULES] WITH (NOLOCK) WHERE [CAPMODULES].[CAPMODULESID] = @CAPMODULESID)

IF (@MODULENAME = 'License')
BEGIN
	WITH RAW_DATA AS (
		SELECT	[dbo].[BLLICENSECLASS].[BLLICENSECLASSID] AS MODULECLASSID,
				[dbo].[BLLICENSECLASS].[NAME] AS MODULECLASSNAME,
				CASE @IS_ASCENDING WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY [dbo].[BLLICENSECLASS].[NAME])
									ELSE ROW_NUMBER() OVER (ORDER BY [dbo].[BLLICENSECLASS].[NAME] DESC)
				END AS RowNumber,
				COUNT(1) OVER() AS TotalRows
		FROM	[dbo].[BLLICENSECLASS]
				JOIN [dbo].[BLLICENSETYPECLASS] ON [dbo].[BLLICENSETYPECLASS].[BLLICENSECLASSID] = [dbo].[BLLICENSECLASS].[BLLICENSECLASSID]
		WHERE	[dbo].[BLLICENSECLASS].[NAME] LIKE '%'+ @SEARCH +'%' AND [dbo].[BLLICENSETYPECLASS].[BLLICENSETYPEID] = @MODULETYPEID
	)
	SELECT		* 
	FROM		RAW_DATA
	WHERE		RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND RowNumber <= @PAGE_SIZE * @PAGE_NUMBER
	ORDER BY	RowNumber
END
ELSE IF (@MODULENAME = 'Permit')
BEGIN
	WITH RAW_DATA AS (
		SELECT	[dbo].[PMPERMITWORKCLASS].[PMPERMITWORKCLASSID] AS MODULECLASSID,
				[dbo].[PMPERMITWORKCLASS].[NAME] AS MODULECLASSNAME,
				CASE @IS_ASCENDING WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY [dbo].[PMPERMITWORKCLASS].[NAME])
									ELSE ROW_NUMBER() OVER (ORDER BY [dbo].[PMPERMITWORKCLASS].[NAME] DESC)
				END AS RowNumber,
				COUNT(1) OVER() AS TotalRows
		FROM	[dbo].[PMPERMITWORKCLASS]
				JOIN [dbo].[PMPERMITTYPEWORKCLASS] ON [dbo].[PMPERMITTYPEWORKCLASS].[PMPERMITWORKCLASSID] = [dbo].[PMPERMITWORKCLASS].[PMPERMITWORKCLASSID]
		WHERE	[dbo].[PMPERMITWORKCLASS].[NAME] LIKE '%'+ @SEARCH +'%' AND [dbo].[PMPERMITTYPEWORKCLASS].[PMPERMITTYPEID] = @MODULETYPEID
	)
	SELECT		* 
	FROM		RAW_DATA
	WHERE		RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND RowNumber <= @PAGE_SIZE * @PAGE_NUMBER
	ORDER BY	RowNumber
END
ELSE IF (@MODULENAME = 'Plan')
BEGIN
	WITH RAW_DATA AS (
		SELECT	[dbo].[PLPLANWORKCLASS].[PLPLANWORKCLASSID] AS MODULECLASSID,
				[dbo].[PLPLANWORKCLASS].[NAME] AS MODULECLASSNAME,
				CASE @IS_ASCENDING WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY [dbo].[PLPLANWORKCLASS].[NAME])
									ELSE ROW_NUMBER() OVER (ORDER BY [dbo].[PLPLANWORKCLASS].[NAME] DESC)
				END AS RowNumber,
				COUNT(1) OVER() AS TotalRows
		FROM	[dbo].[PLPLANWORKCLASS]
				JOIN [dbo].[PLPLANTYPEWORKCLASS] ON [dbo].[PLPLANTYPEWORKCLASS].[PLPLANWORKCLASSID] = [dbo].[PLPLANWORKCLASS].[PLPLANWORKCLASSID]
		WHERE	[dbo].[PLPLANWORKCLASS].[NAME] LIKE '%'+ @SEARCH +'%' AND [dbo].[PLPLANTYPEWORKCLASS].[PLPLANTYPEID] = @MODULETYPEID
	)
	SELECT		* 
	FROM		RAW_DATA
	WHERE		RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND RowNumber <= @PAGE_SIZE * @PAGE_NUMBER
	ORDER BY	RowNumber
END
ELSE IF (@MODULENAME = 'Prof License')
BEGIN
	WITH RAW_DATA AS (
		SELECT	[dbo].[ILLICENSECLASSIFICATION].[ILLICENSECLASSIFICATIONID] AS MODULECLASSID,
				[dbo].[ILLICENSECLASSIFICATION].[NAME] AS MODULECLASSNAME,
				CASE @IS_ASCENDING WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY [dbo].[ILLICENSECLASSIFICATION].[NAME])
									ELSE ROW_NUMBER() OVER (ORDER BY [dbo].[ILLICENSECLASSIFICATION].[NAME] DESC)
				END AS RowNumber,
				COUNT(1) OVER() AS TotalRows
		FROM	[dbo].[ILLICENSECLASSIFICATION]
				JOIN [dbo].[ILLICENSETYPELICENSECLASS] ON [dbo].[ILLICENSETYPELICENSECLASS].[ILLICENSECLASSIFICATIONID] = [dbo].[ILLICENSECLASSIFICATION].[ILLICENSECLASSIFICATIONID]
		WHERE	[dbo].[ILLICENSECLASSIFICATION].[NAME] LIKE '%'+ @SEARCH +'%' AND [dbo].[ILLICENSETYPELICENSECLASS].[ILLICENSETYPEID] = @MODULETYPEID
	)
	SELECT		* 
	FROM		RAW_DATA
	WHERE		RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND RowNumber <= @PAGE_SIZE * @PAGE_NUMBER
	ORDER BY	RowNumber
END