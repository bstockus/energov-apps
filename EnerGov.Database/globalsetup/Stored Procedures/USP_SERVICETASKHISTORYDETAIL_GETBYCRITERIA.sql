CREATE PROCEDURE [globalsetup].[USP_SERVICETASKHISTORYDETAIL_GETBYCRITERIA]
(
	@SERVICETASKHISTORYID	CHAR(36),
	@SEARCH AS NVARCHAR(MAX) = '',
	@PAGE_NUMBER AS INT = 1,
	@PAGE_SIZE AS INT = 10,
	@IS_ASCENDING AS BIT = 1,
	@CASENUMBERS AS [dbo].[RecordNames] READONLY,
	@RESULTFILTER AS [dbo].[RecordNames] READONLY
)
AS
BEGIN
	SET NOCOUNT ON;
	
		WITH RAW_DATA AS (

SELECT [dbo].[SERVICETASKHISTORYDETAIL].[SERVICETASKHISTORYDETAILID],
		[dbo].[SERVICETASKHISTORYDETAIL].[SERVICETASKHISTORYID],		
		[dbo].[SERVICETASKHISTORYDETAIL].[STARTTIME],
		[dbo].[SERVICETASKHISTORYDETAIL].[ENDTIME],
		[dbo].[SERVICETASKHISTORYDETAIL].[ENTITYTYPE],
		[dbo].[SERVICETASKHISTORYDETAIL].[ENTITYNUMBER],
		[dbo].[SERVICETASKHISTORYDETAIL].[RESULT],
		[dbo].[SERVICETASKHISTORYDETAIL].[ERROR],
	   CASE @IS_ASCENDING WHEN 1 THEN	
		ROW_NUMBER() OVER(ORDER BY [dbo].[SERVICETASKHISTORYDETAIL].[ENDTIME])
	   ELSE 
	    ROW_NUMBER() OVER(ORDER BY [dbo].[SERVICETASKHISTORYDETAIL].[ENDTIME] DESC)
	   END AS RowNumber,
	   COUNT(1) OVER() AS TotalRows
	FROM [dbo].[SERVICETASKHISTORYDETAIL]
	WHERE 
		[dbo].[SERVICETASKHISTORYDETAIL].[SERVICETASKHISTORYID] = @SERVICETASKHISTORYID
	AND
		((SELECT COUNT(1) FROM @CASENUMBERS) = 0 OR COALESCE([dbo].[SERVICETASKHISTORYDETAIL].[ENTITYNUMBER],'') IN (SELECT Name FROM @CASENUMBERS))
	AND
		((SELECT COUNT(1) FROM @RESULTFILTER) = 0 OR COALESCE([dbo].[SERVICETASKHISTORYDETAIL].[RESULT],'') IN (SELECT Name FROM @RESULTFILTER))
)

SELECT * 
	FROM RAW_DATA
	WHERE
		RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND 
		RowNumber <= @PAGE_SIZE * @PAGE_NUMBER
	ORDER BY 
		RowNumber
END