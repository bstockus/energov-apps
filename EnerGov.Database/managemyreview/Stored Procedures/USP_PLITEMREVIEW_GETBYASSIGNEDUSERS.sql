CREATE PROCEDURE [managemyreview].[USP_PLITEMREVIEW_GETBYASSIGNEDUSERS]
(
	@ASSIGNEDUSERLIST RecordIDs READONLY,
	@INCLUDECOMPLETED BIT = 0,
	@CUSTOMCOMPLETEDBEGINDATE DATE = NULL,
	@CUSTOMCOMPLETEDENDDATE DATE = NULL,
	@CUSTOMDUEBEGINDATE DATE = NULL,
	@CUSTOMDUEENDDATE DATE = NULL,
	@LAST30DAYS DATE = NULL,
	@LASTWEEKFIRSTDAY DATE = NULL,
	@LASTWEEKLASTDAY DATE = NULL,
	@OVERDUEDATE DATE = NULL,
	@THISWEEKFIRSTDAY DATE = NULL,
	@THISWEEKLASTDAY DATE = NULL,
	@TODAYDUEBEGINDATE DATE = NULL,
	@TODAYDUEENDDATE DATE = NULL,
	@UPCOMINGDUEBEGINDATE DATE = NULL,
	@UPCOMINGDUEENDDATE DATE = NULL,
	@ENTITYIDS RecordIDs READONLY,
	@ITEMREVIEWSTATUSIDS RecordIDs READONLY,
	@ITEMREVIEWTYPEIDS RecordIDs READONLY,
	@LOCATIONIDS RecordIDs READONLY,
	@PARENTCLASSIDS RecordIDs READONLY,
	@PARENTTYPEIDS RecordIDs READONLY,
	@PROJECTIDS RecordIDs READONLY,
	@SUBMITTALTYPEIDS RecordIDs READONLY,
	@VERSIONNUMBERS RecordIDs READONLY,
	@ASSIGNEDTEAMIDS AS RECORDIDS READONLY,
	@PAGE_NUMBER AS INT = 1,
	@PAGE_SIZE AS INT = 10,
	@IS_ASCENDING AS BIT = 1,
	@SORTFIELD VARCHAR(50) = NULL,
	@ISTEAMSELECTED AS BIT = 0 
)
AS
BEGIN
SET NOCOUNT ON; 

IF OBJECT_ID('tempdb..#ITEMREVIEWLIST') IS NOT NULL
    DROP TABLE #ITEMREVIEWLIST

CREATE TABLE #ITEMREVIEWLIST (
	PLITEMREVIEWID CHAR(36),
	VERSIONNUMBER INT,
	WORKFLOWSTATUSID INT
)


IF @INCLUDECOMPLETED = 0
BEGIN
WITH CTE_ITEMREVIEWLIST AS (
	SELECT PLITEMREVIEWID FROM PLITEMREVIEW
	JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	WHERE NOTREQUIRED = 0 AND ASSIGNEDUSERID IS NOT NULL AND 
	(
	(NOT EXISTS(SELECT * FROM @ASSIGNEDUSERLIST) AND (NOT EXISTS(SELECT * FROM @ASSIGNEDTEAMIDS) OR @ISTEAMSELECTED = 0)) 
	OR
	(ASSIGNEDUSERID IN (SELECT RECORDID FROM @ASSIGNEDUSERLIST))
	)
				AND				PLITEMREVIEW.COMPLETED = 0
				AND				PLSUBMITTAL.COMPLETED = 0
		
	UNION ALL
	SELECT PLITEMREVIEWID FROM PLITEMREVIEW
	JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	WHERE NOTREQUIRED = 0 AND 
	ASSIGNEDUSERID IS NULL AND TEAMASSIGNEDTO IN (SELECT RECORDID FROM @ASSIGNEDTEAMIDS)
				AND				PLITEMREVIEW.COMPLETED = 0
				AND				PLSUBMITTAL.COMPLETED = 0
),
CTE_PRIORITY AS (
	SELECT	PLSUBMITTALID
			, MIN(PRIORITYORDER) AS MINPRIORITY
	FROM	PLITEMREVIEW
	WHERE	PLSUBMITTALID IN (SELECT PLSUBMITTALID FROM PLITEMREVIEW WHERE PLITEMREVIEWID IN (SELECT PLITEMREVIEWID FROM CTE_ITEMREVIEWLIST))
	AND		COMPLETED = 0
	GROUP BY PLSUBMITTALID
)
INSERT INTO #ITEMREVIEWLIST
	SELECT			PLITEMREVIEW.PLITEMREVIEWID		
					, BLLICENSEWFACTIONSTEP.VERSIONNUMBER
					, BLLICENSEWFACTIONSTEP.WORKFLOWSTATUSID	
	FROM			PLITEMREVIEW 
	INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
	INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	INNER JOIN		BLLICENSEWFACTIONSTEP ON BLLICENSEWFACTIONSTEP.BLLICENSEWFACTIONSTEPID = PLSUBMITTAL.BLLICENSEWFACTIONSTEPID
	WHERE			PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	AND				BLLICENSEWFACTIONSTEP.WORKFLOWSTATUSID = 5		
	UNION ALL
	SELECT			PLITEMREVIEW.PLITEMREVIEWID		
					, ILLICENSEWFACTIONSTEP.VERSIONNUMBER
					, ILLICENSEWFACTIONSTEP.WORKFLOWSTATUSID							
	FROM			PLITEMREVIEW 
	INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
	INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	INNER JOIN		ILLICENSEWFACTIONSTEP ON ILLICENSEWFACTIONSTEP.ILLICENSEWFACTIONSTEPID = PLSUBMITTAL.ILLICENSEWFACTIONSTEPID
	WHERE			PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	AND				ILLICENSEWFACTIONSTEP.WORKFLOWSTATUSID = 5
	UNION ALL
	SELECT			PLITEMREVIEW.PLITEMREVIEWID		
					, PMPERMITWFACTIONSTEP.VERSIONNUMBER
					, PMPERMITWFACTIONSTEP.WORKFLOWSTATUSID			
	FROM			PLITEMREVIEW 
	INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
	INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	INNER JOIN		PMPERMITWFACTIONSTEP ON PMPERMITWFACTIONSTEP.PMPERMITWFACTIONSTEPID = PLSUBMITTAL.PMPERMITWFACTIONSTEPID
	WHERE			PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	AND				PMPERMITWFACTIONSTEP.WORKFLOWSTATUSID = 5
	UNION ALL
	SELECT			PLITEMREVIEW.PLITEMREVIEWID			
					, PLPLANWFACTIONSTEP.VERSIONNUMBER
					, PLPLANWFACTIONSTEP.WORKFLOWSTATUSID		
	FROM			PLITEMREVIEW 
	INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
	INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
	INNER JOIN		PLPLANWFACTIONSTEP ON PLPLANWFACTIONSTEP.PLPLANWFACTIONSTEPID = PLSUBMITTAL.PLPLANWFACTIONSTEPID
	WHERE			PLITEMREVIEW.PRIORITYORDER <= (SELECT MINPRIORITY FROM CTE_PRIORITY WHERE PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID)
	AND				PLPLANWFACTIONSTEP.WORKFLOWSTATUSID = 5;
END
ELSE
BEGIN
	WITH CTE_ITEMREVIEWLIST AS (
	SELECT PLITEMREVIEWID FROM PLITEMREVIEW
	JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	WHERE NOTREQUIRED = 0 AND ASSIGNEDUSERID IS NOT NULL AND 
	((NOT EXISTS(SELECT * FROM @ASSIGNEDUSERLIST) AND (NOT EXISTS(SELECT * FROM @ASSIGNEDTEAMIDS) OR @ISTEAMSELECTED = 0)) OR
	ASSIGNEDUSERID IN (SELECT RECORDID FROM @ASSIGNEDUSERLIST))
	AND PLITEMREVIEW.COMPLETED = 1
		
	UNION ALL
	SELECT PLITEMREVIEWID FROM PLITEMREVIEW
	JOIN PLSUBMITTAL ON PLSUBMITTAL.PLSUBMITTALID = PLITEMREVIEW.PLSUBMITTALID
	WHERE NOTREQUIRED = 0 AND 
	ASSIGNEDUSERID IS NULL AND TEAMASSIGNEDTO IN (SELECT RECORDID FROM @ASSIGNEDTEAMIDS)
			AND PLITEMREVIEW.COMPLETED = 1
	)
	INSERT INTO #ITEMREVIEWLIST
		SELECT			PLITEMREVIEW.PLITEMREVIEWID	
						, BLLICENSEWFACTIONSTEP.VERSIONNUMBER
						, BLLICENSEWFACTIONSTEP.WORKFLOWSTATUSID	
		FROM			PLITEMREVIEW 
		INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		BLLICENSEWFACTIONSTEP ON BLLICENSEWFACTIONSTEP.BLLICENSEWFACTIONSTEPID = PLSUBMITTAL.BLLICENSEWFACTIONSTEPID
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID		
						, ILLICENSEWFACTIONSTEP.VERSIONNUMBER
						, ILLICENSEWFACTIONSTEP.WORKFLOWSTATUSID							
		FROM			PLITEMREVIEW 
		INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		ILLICENSEWFACTIONSTEP ON ILLICENSEWFACTIONSTEP.ILLICENSEWFACTIONSTEPID = PLSUBMITTAL.ILLICENSEWFACTIONSTEPID
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID		
						, PMPERMITWFACTIONSTEP.VERSIONNUMBER
						, PMPERMITWFACTIONSTEP.WORKFLOWSTATUSID			
		FROM			PLITEMREVIEW 
		INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PMPERMITWFACTIONSTEP ON PMPERMITWFACTIONSTEP.PMPERMITWFACTIONSTEPID = PLSUBMITTAL.PMPERMITWFACTIONSTEPID
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID			
						, PLPLANWFACTIONSTEP.VERSIONNUMBER
						, PLPLANWFACTIONSTEP.WORKFLOWSTATUSID		
		FROM			PLITEMREVIEW 
		INNER JOIN		CTE_ITEMREVIEWLIST ON CTE_ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PLPLANWFACTIONSTEP ON PLPLANWFACTIONSTEP.PLPLANWFACTIONSTEPID = PLSUBMITTAL.PLPLANWFACTIONSTEPID;
	
END;

WITH RAW_DATA AS 
( SELECT *, 
	CASE @SORTFIELD
		WHEN 'AppliedDate' THEN
			CASE @IS_ASCENDING WHEN 1 THEN
					ROW_NUMBER() OVER(ORDER BY APPLIEDDATE)
				ELSE
					ROW_NUMBER() OVER(ORDER BY APPLIEDDATE DESC)
			END
		WHEN 'SubmittalVersion' THEN
			CASE @IS_ASCENDING WHEN 1 THEN
					ROW_NUMBER() OVER(ORDER BY VERSIONNUMBER)
				ELSE
					ROW_NUMBER() OVER(ORDER BY VERSIONNUMBER DESC)
			END
		WHEN 'CompletedDate' THEN
			CASE @IS_ASCENDING WHEN 1 THEN
					ROW_NUMBER() OVER(ORDER BY COMPLETEDATE)
				ELSE
					ROW_NUMBER() OVER(ORDER BY COMPLETEDATE DESC)
			END
		ELSE
			CASE @IS_ASCENDING WHEN 1 THEN
					ROW_NUMBER() OVER(ORDER BY DUEDATE)
				ELSE
					ROW_NUMBER() OVER(ORDER BY DUEDATE DESC)
			END
		END AS RowNumber,
		COUNT(1) OVER() AS TotalRows
	FROM (
		SELECT			PLITEMREVIEW.PLITEMREVIEWID				
						, PLITEMREVIEW.PLSUBMITTALID			
						, PLITEMREVIEW.ASSIGNEDUSERID 
						, PLITEMREVIEW.COMPLETEDATE 
						, PLITEMREVIEW.COMPLETED 
						, PLITEMREVIEW.NOTREQUIRED 
						, PLITEMREVIEW.DUEDATE 
						, BLLICENSE.BLLICENSEID AS ENTITYID
						, BLLICENSE.LICENSENUMBER AS ENTITYNUMBER
						, BLLICENSETYPE.BLLICENSETYPEID AS ENTITYTYPEID
						, BLLICENSETYPE.NAME AS ENTITYTYPENAME
						, BLLICENSECLASS.BLLICENSECLASSID AS ENTITYCLASSID
						, BLLICENSECLASS.NAME AS ENTITYCLASSNAME
						, BLLICENSE.DESCRIPTION AS ENTITYDESCRIPTION
						, NULL AS APPLIEDDATE
						, 3 AS MODULEID
						, PLSUBMITTALTYPE.PLSUBMITTALTYPEID AS SUBMITTALTYPEID
						, PLSUBMITTALTYPE.TYPENAME AS SUBMITTALTYPENAME
						, PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID AS ITEMREVIEWSTATUSID
						, PLITEMREVIEWSTATUS.NAME AS ITEMREVIEWSTATUS
						, PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID AS ITEMREVIEWTYPEID
						, PLITEMREVIEWTYPE.NAME AS ITEMREVIEWTYPE
						, #ITEMREVIEWLIST.VERSIONNUMBER AS VERSIONNUMBER
						, BLLICENSEADDRESS.MAILINGADDRESSID AS MAINADDRESSID
						, NULL AS PROJECTID
						, NULL AS PROJECTNAME
						, ERENTITYSESSION.ERENTITYSESSIONID AS SESSIONID
						, 0 AS SQUAREFEET
						, 0 AS VALUATIONVALUE
						, CAST(0 AS BIT) AS ISSUEDFLAG
						, CAST(0 AS BIT) AS COMPLETEDFLAG
						, CASEASSIGNEDTO.EMAIL AS CASEASSIGNEDTOEMAIL
						, CASEASSIGNEDTO.FNAME AS CASEASSIGNEDTOFIRSTNAME
						, CASEASSIGNEDTO.LNAME AS CASEASSIGNEDTOLASTNAME
						, BLGLOBALENTITYEXTENSION.COMPANYNAME AS BUSINESSNAME
						, '' AS LICENSEHOLDERFIRSTNAME
						, '' AS LICENSEHOLDERLASTNAME
						, BLLICENSE.EXPIRATIONDATE
						, BLLICENSE.LASTRENEWALDATE
						, BLLICENSE.TAXYEAR AS LICENSEYEAR
						, BLLICENSETYPE.NAME AS LICENSETYPE
						, BLLICENSESTATUS.NAME AS LICENSESTATUS
						, ZONE.ZONEID
						, ZONE.NAME AS ZONENAME
						, ZONE.ZONECODE
						, ZONE.DESCRIPTION AS ZONEDESCRIPTION
						, ISNULL(BLLICENSEADDRESS.BLLICENSEADDRESSID,'') AS PARENTADDRESSID
						, USERS.FNAME AS ASSIGNEDUSERFIRSTNAME
						, USERS.LNAME AS ASSIGNEDUSERLASTNAME
						, PLITEMREVIEW.ASSIGNEDDATE
						, CAST(CASE WHEN #ITEMREVIEWLIST.WORKFLOWSTATUSID = 5 THEN 1 ELSE 0 END AS BIT) AS ISEDITABLE
						, TEAMASSIGNEDTO
						, TEAM.NAME AS TEAMNAME
						, TEAM.TEAMIMAGE
						, CASE WHEN PLITEMREVIEWTYPE.ASSIGNTOOBJECT = 2 THEN PLITEMREVIEWTYPE.TEAMASSIGNEDTOID ELSE NULL END AS DEFAULTTEAM
		FROM			PLITEMREVIEW 
		INNER JOIN		#ITEMREVIEWLIST ON #ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PLITEMREVIEWSTATUS ON PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID = PLITEMREVIEW.PLITEMREVIEWSTATUSID
		INNER JOIN		PLSUBMITTALTYPE ON PLSUBMITTAL.PLSUBMITTALTYPEID = PLSUBMITTALTYPE.PLSUBMITTALTYPEID
		INNER JOIN		PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
		INNER JOIN		PLITEMREVIEWTYPE ON PLITEMREVIEW.PLITEMREVIEWTYPEID = PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID
		INNER JOIN		BLLICENSE ON BLLICENSE.BLLICENSEID = PLSUBMITTAL.BLLICENSEID
		INNER JOIN		BLGLOBALENTITYEXTENSION ON BLGLOBALENTITYEXTENSION.BLGLOBALENTITYEXTENSIONID = BLLICENSE.BLGLOBALENTITYEXTENSIONID
		INNER JOIN		BLLICENSETYPE ON BLLICENSE.BLLICENSETYPEID = BLLICENSETYPE.BLLICENSETYPEID
		INNER JOIN		BLLICENSESTATUS ON BLLICENSE.BLLICENSESTATUSID = BLLICENSESTATUS.BLLICENSESTATUSID
		INNER JOIN		BLLICENSECLASS ON BLLICENSE.BLLICENSECLASSID = BLLICENSECLASS.BLLICENSECLASSID
		LEFT OUTER JOIN	BLLICENSEADDRESS ON BLLICENSE.BLLICENSEID = BLLICENSEADDRESS.BLLICENSEID AND BLLICENSEADDRESS.MAIN = 1
		LEFT OUTER JOIN USERS AS CASEASSIGNEDTO ON CASEASSIGNEDTO.SUSERGUID = BLLICENSE.ISSUEDBY 
		LEFT OUTER JOIN	ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		LEFT OUTER JOIN	BLLICENSEZONE ON BLLICENSE.BLLICENSEID = BLLICENSEZONE.BLLICENSEID AND BLLICENSEZONE.MAIN = 1
		LEFT OUTER JOIN	ZONE ON ZONE.ZONEID = BLLICENSEZONE.ZONEID
		LEFT OUTER JOIN	USERS ON USERS.SUSERGUID = PLITEMREVIEW.ASSIGNEDUSERID
		LEFT OUTER JOIN	TEAM ON TEAM.TEAMID = PLITEMREVIEW.TEAMASSIGNEDTO
		
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID				
						, PLITEMREVIEW.PLSUBMITTALID			
						, PLITEMREVIEW.ASSIGNEDUSERID 
						, PLITEMREVIEW.COMPLETEDATE 
						, PLITEMREVIEW.COMPLETED 
						, PLITEMREVIEW.NOTREQUIRED 
						, PLITEMREVIEW.DUEDATE 
						, ILLICENSE.ILLICENSEID AS ENTITYID
						, ILLICENSE.LICENSENUMBER AS ENTITYNUMBER
						, ILLICENSETYPE.ILLICENSETYPEID AS ENTITYTYPEID
						, ILLICENSETYPE.NAME AS ENTITYTYPENAME
						, ILLICENSECLASSIFICATION.ILLICENSECLASSIFICATIONID AS ENTITYCLASSID
						, ILLICENSECLASSIFICATION.NAME AS ENTITYCLASSNAME
						, ILLICENSE.DESCRIPTION AS ENTITYDESCRIPTION
						, NULL AS APPLIEDDATE
						, 4 AS MODULEID
						, PLSUBMITTALTYPE.PLSUBMITTALTYPEID AS SUBMITTALTYPEID
						, PLSUBMITTALTYPE.TYPENAME AS SUBMITTALTYPENAME
						, PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID AS ITEMREVIEWSTATUSID
						, PLITEMREVIEWSTATUS.NAME AS ITEMREVIEWSTATUS
						, PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID AS ITEMREVIEWTYPEID
						, PLITEMREVIEWTYPE.NAME AS ITEMREVIEWTYPE
						, #ITEMREVIEWLIST.VERSIONNUMBER AS VERSIONNUMBER
						, ILLICENSEADDRESS.MAILINGADDRESSID AS MAINADDRESSID
						, NULL AS PROJECTID
						, NULL AS PROJECTNAME
						, ERENTITYSESSION.ERENTITYSESSIONID AS SESSIONID
						, 0 AS SQUAREFEET
						, 0 AS VALUATIONVALUE
						, CAST(0 AS BIT) AS ISSUEDFLAG
						, CAST(0 AS BIT) AS COMPLETEDFLAG
						, CASEASSIGNEDTO.EMAIL AS CASEASSIGNEDTOEMAIL
						, CASEASSIGNEDTO.FNAME AS CASEASSIGNEDTOFIRSTNAME
						, CASEASSIGNEDTO.LNAME AS CASEASSIGNEDTOLASTNAME
						, NULL AS BUSINESSNAME
						, GLOBALENTITY.FIRSTNAME AS LICENSEHOLDERFIRSTNAME
						, GLOBALENTITY.LASTNAME AS LICENSEHOLDERLASTNAME
						, ILLICENSE.EXPIRATIONDATE
						, ILLICENSE.LASTRENEWALDATE
						, ILLICENSE.LICENSEYEAR AS LICENSEYEAR
						, ILLICENSETYPE.NAME AS LICENSETYPE
						, ILLICENSESTATUS.NAME AS LICENSESTATUS
						, NULL AS ZONEID
						, NULL AS ZONENAME
						, NULL AS ZONECODE
						, NULL AS ZONEDESCRIPTION
						, ISNULL(ILLICENSEADDRESS.ILLICENSEADDRESSID,'') AS PARENTADDRESSID
						, USERS.FNAME AS ASSIGNEDUSERFIRSTNAME
						, USERS.LNAME AS ASSIGNEDUSERLASTNAME
						, PLITEMREVIEW.ASSIGNEDDATE
						, CAST(CASE WHEN #ITEMREVIEWLIST.WORKFLOWSTATUSID = 5 THEN 1 ELSE 0 END AS BIT) AS ISEDITABLE
						, TEAMASSIGNEDTO
						, TEAM.NAME AS TEAMNAME
						, TEAM.TEAMIMAGE
						, CASE WHEN PLITEMREVIEWTYPE.ASSIGNTOOBJECT = 2 THEN PLITEMREVIEWTYPE.TEAMASSIGNEDTOID ELSE NULL END AS DEFAULTTEAM
		FROM			PLITEMREVIEW 
		INNER JOIN		#ITEMREVIEWLIST ON #ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PLITEMREVIEWSTATUS ON PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID = PLITEMREVIEW.PLITEMREVIEWSTATUSID
		INNER JOIN		PLSUBMITTALTYPE ON PLSUBMITTAL.PLSUBMITTALTYPEID = PLSUBMITTALTYPE.PLSUBMITTALTYPEID
		INNER JOIN		PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
		INNER JOIN		PLITEMREVIEWTYPE ON PLITEMREVIEW.PLITEMREVIEWTYPEID = PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID
		INNER JOIN		ILLICENSE ON ILLICENSE.ILLICENSEID = PLSUBMITTAL.ILLICENSEID
		INNER JOIN		ILLICENSETYPE ON ILLICENSE.ILLICENSETYPEID = ILLICENSETYPE.ILLICENSETYPEID
		INNER JOIN		ILLICENSESTATUS ON ILLICENSE.ILLICENSESTATUSID = ILLICENSESTATUS.ILLICENSESTATUSID
		INNER JOIN		ILLICENSECLASSIFICATION ON ILLICENSE.ILLICENSECLASSIFICATIONID = ILLICENSECLASSIFICATION.ILLICENSECLASSIFICATIONID
		INNER JOIN		GLOBALENTITY ON GLOBALENTITY.GLOBALENTITYID = ILLICENSE.GLOBALENTITYID
		LEFT OUTER JOIN	ILLICENSEADDRESS ON ILLICENSE.ILLICENSEID = ILLICENSEADDRESS.ILLICENSEID AND ILLICENSEADDRESS.MAIN = 1
		LEFT OUTER JOIN	USERS AS CASEASSIGNEDTO ON CASEASSIGNEDTO.SUSERGUID = ILLICENSE.ISSUEDBY 
		LEFT OUTER JOIN	ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		LEFT OUTER JOIN	USERS ON USERS.SUSERGUID = PLITEMREVIEW.ASSIGNEDUSERID
		LEFT OUTER JOIN	TEAM ON TEAM.TEAMID = PLITEMREVIEW.TEAMASSIGNEDTO
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID				
						, PLITEMREVIEW.PLSUBMITTALID			
						, PLITEMREVIEW.ASSIGNEDUSERID 
						, PLITEMREVIEW.COMPLETEDATE 
						, PLITEMREVIEW.COMPLETED 
						, PLITEMREVIEW.NOTREQUIRED 
						, PLITEMREVIEW.DUEDATE 
						, PMPERMIT.PMPERMITID AS ENTITYID
						, PMPERMIT.PERMITNUMBER AS ENTITYNUMBER
						, PMPERMITTYPE.PMPERMITTYPEID AS ENTITYTYPEID
						, PMPERMITTYPE.NAME AS ENTITYTYPENAME
						, PMPERMITWORKCLASS.PMPERMITWORKCLASSID AS ENTITYCLASSID
						, PMPERMITWORKCLASS.NAME AS ENTITYCLASSNAME
						, PMPERMIT.DESCRIPTION AS ENTITYDESCRIPTION
						, PMPERMIT.APPLYDATE AS APPLIEDDATE
						, 2 AS MODULEID
						, PLSUBMITTALTYPE.PLSUBMITTALTYPEID AS SUBMITTALTYPEID
						, PLSUBMITTALTYPE.TYPENAME AS SUBMITTALTYPENAME
						, PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID AS ITEMREVIEWSTATUSID
						, PLITEMREVIEWSTATUS.NAME AS ITEMREVIEWSTATUS
						, PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID AS ITEMREVIEWTYPEID
						, PLITEMREVIEWTYPE.NAME AS ITEMREVIEWTYPE
						, #ITEMREVIEWLIST.VERSIONNUMBER AS VERSIONNUMBER
						, PMPERMITADDRESS.MAILINGADDRESSID AS MAINADDRESSID
						, COALESCE(PRPROJECT.PRPROJECTID, '') AS PROJECTID
						, COALESCE(PRPROJECT.NAME, '') AS PROJECTNAME
						, ERENTITYSESSION.ERENTITYSESSIONID AS SESSIONID
						, PMPERMIT.SQUAREFEET
						, PMPERMIT.VALUE AS VALUATIONVALUE
						, PMPERMITSTATUS.ISSUEDFLAG
						, PMPERMITSTATUS.COMPLETEDFLAG
						, CASEASSIGNEDTO.EMAIL AS CASEASSIGNEDTOEMAIL
						, CASEASSIGNEDTO.FNAME AS CASEASSIGNEDTOFIRSTNAME
						, CASEASSIGNEDTO.LNAME AS CASEASSIGNEDTOLASTNAME
						, NULL AS BUSINESSNAME
						, NULL AS LICENSEHOLDERFIRSTNAME
						, NULL AS LICENSEHOLDERLASTNAME
						, NULL AS EXPIRATIONDATE
						, NULL AS LASTRENEWALDATE
						, 1900 AS LICENSEYEAR
						, NULL AS LICENSETYPE
						, NULL AS LICENSESTATUS
						, NULL AS ZONEID
						, NULL AS ZONENAME
						, NULL AS ZONECODE
						, NULL AS ZONEDESCRIPTION
						, ISNULL(PMPERMITADDRESS.PMPERMITADDRESSID,'') AS PARENTADDRESSID
						, USERS.FNAME AS ASSIGNEDUSERFIRSTNAME
						, USERS.LNAME AS ASSIGNEDUSERLASTNAME
						, PLITEMREVIEW.ASSIGNEDDATE
						, CAST(CASE WHEN #ITEMREVIEWLIST.WORKFLOWSTATUSID = 5 THEN 1 ELSE 0 END AS BIT) AS ISEDITABLE
						, TEAMASSIGNEDTO
						, TEAM.NAME AS TEAMNAME
						, TEAM.TEAMIMAGE
						, CASE WHEN PLITEMREVIEWTYPE.ASSIGNTOOBJECT = 2 THEN PLITEMREVIEWTYPE.TEAMASSIGNEDTOID ELSE NULL END AS DEFAULTTEAM
		FROM			PLITEMREVIEW 
		INNER JOIN		#ITEMREVIEWLIST ON #ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PLITEMREVIEWSTATUS ON PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID = PLITEMREVIEW.PLITEMREVIEWSTATUSID
		INNER JOIN		PLSUBMITTALTYPE ON PLSUBMITTAL.PLSUBMITTALTYPEID = PLSUBMITTALTYPE.PLSUBMITTALTYPEID
		INNER JOIN		PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
		INNER JOIN		PLITEMREVIEWTYPE ON PLITEMREVIEW.PLITEMREVIEWTYPEID = PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID
		INNER JOIN		PMPERMIT ON PMPERMIT.PMPERMITID = PLSUBMITTAL.PMPERMITID
		INNER JOIN		PMPERMITWORKCLASS ON PMPERMIT.PMPERMITWORKCLASSID = PMPERMITWORKCLASS.PMPERMITWORKCLASSID
		INNER JOIN		PMPERMITTYPE ON PMPERMIT.PMPERMITTYPEID = PMPERMITTYPE.PMPERMITTYPEID
		INNER JOIN		PMPERMITSTATUS ON PMPERMIT.PMPERMITSTATUSID = PMPERMITSTATUS.PMPERMITSTATUSID
		LEFT OUTER JOIN	PMPERMITADDRESS ON PMPERMIT.PMPERMITID = PMPERMITADDRESS.PMPERMITID AND PMPERMITADDRESS.MAIN = 1
		LEFT OUTER JOIN	USERS AS CASEASSIGNEDTO ON CASEASSIGNEDTO.SUSERGUID = PMPERMIT.ASSIGNEDTO 
		LEFT OUTER JOIN	PRPROJECTPERMIT ON PRPROJECTPERMIT.PMPERMITID = PMPERMIT.PMPERMITID
		LEFT OUTER JOIN	PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTPERMIT.PRPROJECTID
		LEFT OUTER JOIN	ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		LEFT OUTER JOIN	USERS ON USERS.SUSERGUID = PLITEMREVIEW.ASSIGNEDUSERID
		LEFT OUTER JOIN	TEAM ON TEAM.TEAMID = PLITEMREVIEW.TEAMASSIGNEDTO
		UNION ALL
		SELECT			PLITEMREVIEW.PLITEMREVIEWID				
						, PLITEMREVIEW.PLSUBMITTALID			
						, PLITEMREVIEW.ASSIGNEDUSERID 
						, PLITEMREVIEW.COMPLETEDATE 
						, PLITEMREVIEW.COMPLETED 
						, PLITEMREVIEW.NOTREQUIRED 
						, PLITEMREVIEW.DUEDATE 
						, PLPLAN.PLPLANID AS ENTITYID
						, PLPLAN.PLANNUMBER AS ENTITYNUMBER
						, PLPLANTYPE.PLPLANTYPEID AS ENTITYTYPEID
						, PLPLANTYPE.PLANNAME AS ENTITYTYPENAME
						, PLPLANWORKCLASS.PLPLANWORKCLASSID AS ENTITYCLASSID
						, PLPLANWORKCLASS.NAME AS ENTITYCLASSNAME
						, PLPLAN.DESCRIPTION AS ENTITYDESCRIPTION
						, PLPLAN.APPLICATIONDATE AS APPLIEDDATE
						, 1 AS MODULEID
						, PLSUBMITTALTYPE.PLSUBMITTALTYPEID AS SUBMITTALTYPEID
						, PLSUBMITTALTYPE.TYPENAME AS SUBMITTALTYPENAME
						, PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID AS ITEMREVIEWSTATUSID
						, PLITEMREVIEWSTATUS.NAME AS ITEMREVIEWSTATUS
						, PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID AS ITEMREVIEWTYPEID
						, PLITEMREVIEWTYPE.NAME AS ITEMREVIEWTYPE
						, #ITEMREVIEWLIST.VERSIONNUMBER AS VERSIONNUMBER
						, PLPLANADDRESS.MAILINGADDRESSID AS MAINADDRESSID
						, COALESCE(PRPROJECT.PRPROJECTID, '') AS PROJECTID
						, COALESCE(PRPROJECT.NAME, '') AS PROJECTNAME
						, ERENTITYSESSION.ERENTITYSESSIONID AS SESSIONID
						, PLPLAN.SQUAREFEET
						, PLPLAN.VALUE AS VALUATIONVALUE
						, CAST(0 AS BIT) AS ISSUEDFLAG
						, PLPLAN.COMPLETED AS COMPLETEDFLAG
						, CASEASSIGNEDTO.EMAIL AS CASEASSIGNEDTOEMAIL
						, CASEASSIGNEDTO.FNAME AS CASEASSIGNEDTOFIRSTNAME
						, CASEASSIGNEDTO.LNAME AS CASEASSIGNEDTOLASTNAME
						, NULL AS BUSINESSNAME
						, NULL AS LICENSEHOLDERFIRSTNAME
						, NULL AS LICENSEHOLDERLASTNAME
						, NULL AS EXPIRATIONDATE
						, NULL AS LASTRENEWALDATE
						, 1900 AS LICENSEYEAR
						, NULL AS LICENSETYPE
						, NULL AS LICENSESTATUS
						, NULL AS ZONEID
						, NULL AS ZONENAME
						, NULL AS ZONECODE
						, NULL AS ZONEDESCRIPTION
						, ISNULL(PLPLANADDRESS.PLPLANADDRESSID,'') AS PARENTADDRESSID
						, USERS.FNAME AS ASSIGNEDUSERFIRSTNAME
						, USERS.LNAME AS ASSIGNEDUSERLASTNAME
						, PLITEMREVIEW.ASSIGNEDDATE
						, CAST(CASE WHEN #ITEMREVIEWLIST.WORKFLOWSTATUSID = 5 THEN 1 ELSE 0 END AS BIT) AS ISEDITABLE
						, TEAMASSIGNEDTO
						, TEAM.NAME AS TEAMNAME
						, TEAM.TEAMIMAGE
						, CASE WHEN PLITEMREVIEWTYPE.ASSIGNTOOBJECT = 2 THEN PLITEMREVIEWTYPE.TEAMASSIGNEDTOID ELSE NULL END AS DEFAULTTEAM
		FROM			PLITEMREVIEW 
		INNER JOIN		#ITEMREVIEWLIST ON #ITEMREVIEWLIST.PLITEMREVIEWID = PLITEMREVIEW.PLITEMREVIEWID
		INNER JOIN		PLSUBMITTAL ON PLITEMREVIEW.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		INNER JOIN		PLITEMREVIEWSTATUS ON PLITEMREVIEWSTATUS.PLITEMREVIEWSTATUSID = PLITEMREVIEW.PLITEMREVIEWSTATUSID
		INNER JOIN		PLSUBMITTALTYPE ON PLSUBMITTAL.PLSUBMITTALTYPEID = PLSUBMITTALTYPE.PLSUBMITTALTYPEID
		INNER JOIN		PLSUBMITTALSTATUS ON PLSUBMITTALSTATUS.PLSUBMITTALSTATUSID = PLSUBMITTAL.PLSUBMITTALSTATUSID
		INNER JOIN		PLITEMREVIEWTYPE ON PLITEMREVIEW.PLITEMREVIEWTYPEID = PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID
		INNER JOIN		PLPLAN ON PLPLAN.PLPLANID = PLSUBMITTAL.PLPLANID
		INNER JOIN		PLPLANTYPE ON PLPLAN.PLPLANTYPEID = PLPLANTYPE.PLPLANTYPEID
		INNER JOIN		PLPLANSTATUS ON PLPLAN.PLPLANSTATUSID = PLPLANSTATUS.PLPLANSTATUSID
		INNER JOIN		PLPLANWORKCLASS ON PLPLAN.PLPLANWORKCLASSID = PLPLANWORKCLASS.PLPLANWORKCLASSID
		LEFT OUTER JOIN	PLPLANADDRESS ON PLPLAN.PLPLANID = PLPLANADDRESS.PLPLANID AND PLPLANADDRESS.MAIN = 1
		LEFT OUTER JOIN	USERS AS CASEASSIGNEDTO ON CASEASSIGNEDTO.SUSERGUID = PLPLAN.ASSIGNEDTO 
		LEFT OUTER JOIN	PRPROJECTPLAN ON PRPROJECTPLAN.PLPLANID = PLPLAN.PLPLANID
		LEFT OUTER JOIN	PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTPLAN.PRPROJECTID
		LEFT OUTER JOIN	ERENTITYSESSION ON ERENTITYSESSION.PLSUBMITTALID = PLSUBMITTAL.PLSUBMITTALID
		LEFT OUTER JOIN	USERS ON USERS.SUSERGUID = PLITEMREVIEW.ASSIGNEDUSERID
		LEFT OUTER JOIN	TEAM ON TEAM.TEAMID = PLITEMREVIEW.TEAMASSIGNEDTO
		)
		AS QUERY_DATA
		WHERE	(
					(
						@INCLUDECOMPLETED = 0 
						AND 
						(
							(
								@TODAYDUEBEGINDATE IS NULL AND @TODAYDUEENDDATE IS NULL AND @UPCOMINGDUEBEGINDATE IS NULL AND @UPCOMINGDUEENDDATE IS NULL AND @OVERDUEDATE IS NULL AND @CUSTOMDUEBEGINDATE IS NULL AND @CUSTOMDUEENDDATE IS NULL
							) 
							OR
							(
								CONVERT(DATE, DUEDATE) >= @TODAYDUEBEGINDATE AND CONVERT(DATE, DUEDATE) < @TODAYDUEENDDATE
							)
							OR 
							( 
								CONVERT(DATE, DUEDATE) >= @UPCOMINGDUEBEGINDATE AND CONVERT(DATE, DUEDATE) < DATEADD(D, 1, @UPCOMINGDUEENDDATE)
							)
							OR 
							(
								CONVERT(DATE, DUEDATE) < @OVERDUEDATE
							)
							OR 
							(
								CONVERT(DATE, DUEDATE) >= @CUSTOMDUEBEGINDATE AND CONVERT(DATE, DUEDATE) < @CUSTOMDUEENDDATE
							)
						)
					)
				OR		
					(
						@INCLUDECOMPLETED = 1 
						AND 
						(
							(
								@THISWEEKFIRSTDAY IS NULL AND @THISWEEKLASTDAY IS NULL AND @LASTWEEKFIRSTDAY IS NULL AND @LASTWEEKLASTDAY IS NULL AND @LAST30DAYS IS NULL AND @CUSTOMCOMPLETEDBEGINDATE IS NULL AND @CUSTOMCOMPLETEDENDDATE IS NULL
							) 
							OR
							(
								CONVERT(DATE, COMPLETEDATE) >= @THISWEEKFIRSTDAY AND CONVERT(DATE, COMPLETEDATE) < @THISWEEKLASTDAY 
							)
							OR 
							(
								CONVERT(DATE, COMPLETEDATE) >= @LASTWEEKFIRSTDAY AND CONVERT(DATE, COMPLETEDATE) < @LASTWEEKLASTDAY 
							)
							OR 
							( 
								CONVERT(DATE, COMPLETEDATE) >= @LAST30DAYS
							)
							OR 
							(
								CONVERT(DATE, COMPLETEDATE) >= @CUSTOMCOMPLETEDBEGINDATE AND CONVERT(DATE, COMPLETEDATE) < @CUSTOMCOMPLETEDENDDATE 
							)
						)
					)
				)
		AND		(NOT EXISTS (SELECT 1 FROM @PARENTTYPEIDS) OR ENTITYTYPEID IN (SELECT RECORDID FROM @PARENTTYPEIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @PARENTCLASSIDS) OR ENTITYCLASSID IN (SELECT RECORDID FROM @PARENTCLASSIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @ENTITYIDS) OR ENTITYID IN (SELECT RECORDID FROM @ENTITYIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @PROJECTIDS) OR PROJECTID IN (SELECT RECORDID FROM @PROJECTIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @SUBMITTALTYPEIDS) OR SUBMITTALTYPEID IN (SELECT RECORDID FROM @SUBMITTALTYPEIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @ITEMREVIEWTYPEIDS) OR ITEMREVIEWTYPEID IN (SELECT RECORDID FROM @ITEMREVIEWTYPEIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @LOCATIONIDS) OR PARENTADDRESSID IN (SELECT RECORDID FROM @LOCATIONIDS))
		AND		(NOT EXISTS (SELECT 1 FROM @VERSIONNUMBERS) OR VERSIONNUMBER IN (SELECT RECORDID FROM @VERSIONNUMBERS))
		AND		(NOT EXISTS (SELECT 1 FROM @ITEMREVIEWSTATUSIDS) OR ITEMREVIEWSTATUSID IN (SELECT RECORDID FROM @ITEMREVIEWSTATUSIDS))   
		)

SELECT *
INTO #RESULT
FROM RAW_DATA
WHERE
	RowNumber > @PAGE_SIZE * (@PAGE_NUMBER - 1) AND 
	RowNumber <= @PAGE_SIZE * @PAGE_NUMBER

SELECT * FROM #RESULT ORDER BY RowNumber

SELECT 
		#RESULT.PLITEMREVIEWID AS PARENTID,
		#RESULT.PARENTADDRESSID AS ENTITYID,
		MAILINGADDRESS.ADDRESSLINE1,
		MAILINGADDRESS.ADDRESSLINE2,
		MAILINGADDRESS.ADDRESSLINE3,
		MAILINGADDRESS.ADDRESSTYPE,
		MAILINGADDRESS.ATTN,
		MAILINGADDRESS.CITY,
		MAILINGADDRESS.COMPSITE,
		MAILINGADDRESS.COUNTRY,
		MAILINGADDRESSCOUNTRYTYPE.MAILINGADDRESSCOUNTRYTYPEID,
		MAILINGADDRESSCOUNTRYTYPE.MAILINGADDRESSCOUNTRYTYPENAME,
		CAST(1 AS BIT) AS ISMAIN,
		MAILINGADDRESS.POBOX,
		MAILINGADDRESS.POSTALCODE,
		MAILINGADDRESS.POSTDIRECTION,
		MAILINGADDRESS.PREDIRECTION,
		MAILINGADDRESS.PROVINCE,
		MAILINGADDRESS.RURALROUTE,
		MAILINGADDRESS.STATE,
		MAILINGADDRESS.STATION,
		MAILINGADDRESS.STREETTYPE,
		MAILINGADDRESS.UNITORSUITE,
		MAILINGADDRESS.ADDRESSID
	FROM #RESULT 
	INNER JOIN MAILINGADDRESS ON #RESULT.MAINADDRESSID = MAILINGADDRESS.MAILINGADDRESSID
	INNER JOIN MAILINGADDRESSCOUNTRYTYPE ON MAILINGADDRESS.COUNTRYTYPE = MAILINGADDRESSCOUNTRYTYPE.MAILINGADDRESSCOUNTRYTYPEID


DECLARE @PLITEMREVIEWIDS RecordIDs

INSERT INTO @PLITEMREVIEWIDS
SELECT PLITEMREVIEWID FROM #RESULT

EXEC [managemyreview].[USP_PLITEMREVIEW_GETCONTACTS] @PLITEMREVIEWIDS

EXEC [managemyreview].[USP_PLITEMREVIEW_GETHOLDS] @PLITEMREVIEWIDS

IF OBJECT_ID('tempdb..#ITEMREVIEWLIST') IS NOT NULL
    DROP TABLE #ITEMREVIEWLIST

END