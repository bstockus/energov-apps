CREATE PROCEDURE [cashieringsetup].[USP_DYNAMIC_ACCOUNT_NUMBER_TRANSLATE]
(
	--Criteria will be a table containing posting records (unique line item id and its type of posting) 
	@dynamicAccountCriteria AS [cashieringsetup].[DYNAMIC_ACCOUNT_POSTING_CRITERIA] READONLY
)
AS
BEGIN
	SET NOCOUNT ON;

	--Table to retrieve GL/AR posting record info and other critical values needed for dynamic account number assignment.
	--A custom UDF will be needed to successfully assign a new account number to any found posting rows.
	CREATE TABLE #translatedAccountPosting
	(
		[ID] INT IDENTITY,
		[DYNAMIC_POSTING_TYPE_ID] INT NOT NULL,
		[POSTING_ID] CHAR(36) NOT NULL,
		[SQL_FUNCTION_NAME] NVARCHAR(500),
		[IS_CREDIT] BIT NOT NULL,
		[IS_AR_POSTING] BIT NOT NULL,
		[NEW_ACCOUNT_NUMBER] NVARCHAR(500),
		[ERROR_MESSAGE] NVARCHAR(MAX)
	);


	--First, get credit and/or debit posting record info from whatever DB tables hold the posting info.
	--The tables to use in the joins vary based on the type of posting (entity fees vs misc fees, AR invoicing vs payment, fees vs deposits, etc.) 
	WITH POSTING_INFO AS
	(	
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONFEEPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONFEEPOSTING.CATRANSACTIONFEEID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONFEEPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 1	--Entity Fee Payment (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONFEEPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONFEEPOSTING.CATRANSACTIONFEEID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONFEEPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 1 --Entity Fee Payment (Debit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONMISCFEEPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONMISCFEEPOSTING.CATRANSACTIONMISCFEEID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONMISCFEEPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 2 --Miscellaneous Fee Payment (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONMISCFEEPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONMISCFEEPOSTING.CATRANSACTIONMISCFEEID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONMISCFEEPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 2	--Miscellaneous Fee Payment (Debit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONACCOUNTPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONACCOUNTPOSTING.CATRANSACTIONACCOUNTID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONACCOUNTPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID IN (3, 4)	--Bond/Account Payment/Deposit (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID POSTINGID, CATRANSACTIONGLPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(0 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONACCOUNTPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONACCOUNTPOSTING.CATRANSACTIONACCOUNTID
	join CATRANSACTIONGLPOSTING WITH (NOLOCK) on CATRANSACTIONACCOUNTPOSTING.CATRANSACTIONGLPOSTINGID = CATRANSACTIONGLPOSTING.CATRANSACTIONGLPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID IN (3, 4)	--Bond/Account Payment/Deposit (Debit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CAINVOICEFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CAINVOICEFEEARPOSTING.CAINVOICEFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CAINVOICEFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where (criteria.DYNAMIC_POSTING_TYPE_ID = 5 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 2)	--Entity Fee AR Invoice (Credit)
	or (criteria.DYNAMIC_POSTING_TYPE_ID = 9 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 3)		--Entity Fee AR Void Invoice (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CAINVOICEFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CAINVOICEFEEARPOSTING.CAINVOICEFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CAINVOICEFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where (criteria.DYNAMIC_POSTING_TYPE_ID = 5 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 2)	--Entity Fee AR Invoice (Debit)
	or (criteria.DYNAMIC_POSTING_TYPE_ID = 9 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 3)		--Entity Fee AR Void Invoice (Debit) 
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CAINVMISCFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CAINVMISCFEEARPOSTING.CAINVOICEMISCFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CAINVMISCFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where (criteria.DYNAMIC_POSTING_TYPE_ID = 6 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 2)	--Miscellaneous Fee AR Invoice (Credit)
	or (criteria.DYNAMIC_POSTING_TYPE_ID = 10 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 3)		--Miscellaneous Fee AR Void Invoice (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CAINVMISCFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CAINVMISCFEEARPOSTING.CAINVOICEMISCFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CAINVMISCFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where (criteria.DYNAMIC_POSTING_TYPE_ID = 6 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 2)	--Miscellaneous Fee AR Invoice (Debit)
	or (criteria.DYNAMIC_POSTING_TYPE_ID = 10 AND CATRANSACTIONARPOSTING.CATRANSACTIONARTYPEID = 3)		--Miscellaneous Fee AR Void Invoice (Debit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONFEEARPOSTING.CATRANSACTIONFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CATRANSACTIONFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 7	--Entity Fee AR Payment (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANSACTIONFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANSACTIONFEEARPOSTING.CATRANSACTIONFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CATRANSACTIONFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 7	--Entity Fee AR Payment (Debit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.CREDITACCOUNTID GLACCOUNTID, CAST(1 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING] 
	from @dynamicAccountCriteria criteria
	join CATRANMISCFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANMISCFEEARPOSTING.CATRANSACTIONMISCFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CATRANMISCFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 8	--Miscellaneous Fee AR Payment (Credit)
	UNION ALL
	select 
		criteria.DYNAMIC_POSTING_TYPE_ID, CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID POSTINGID, CATRANSACTIONARPOSTING.DEBITACCOUNTID GLACCOUNTID, CAST(0 as BIT) [IS_CREDIT], CAST(1 as BIT) [IS_AR_POSTING]
	from @dynamicAccountCriteria criteria
	join CATRANMISCFEEARPOSTING WITH (NOLOCK) on criteria.RECORD_UNIQUE_ID = CATRANMISCFEEARPOSTING.CATRANSACTIONMISCFEEID
	join CATRANSACTIONARPOSTING WITH (NOLOCK) on CATRANMISCFEEARPOSTING.CATRANSACTIONARPOSTINGID = CATRANSACTIONARPOSTING.CATRANSACTIONARPOSTINGID
	where criteria.DYNAMIC_POSTING_TYPE_ID = 8	--Miscellaneous Fee AR Payment (Debit)
	)
	INSERT INTO #translatedAccountPosting ( [DYNAMIC_POSTING_TYPE_ID], [POSTING_ID], [SQL_FUNCTION_NAME], [IS_CREDIT], [IS_AR_POSTING] )
	SELECT DYNAMIC_POSTING_TYPE_ID, POSTINGID, GLACCOUNT.DYNAMICACCOUNTSQLFUNCTIONNAME, IS_CREDIT, IS_AR_POSTING
	FROM POSTING_INFO
	JOIN GLACCOUNT ON POSTING_INFO.GLACCOUNTID = GLACCOUNT.GLACCOUNTID
	WHERE GLACCOUNT.DYNAMICACCOUNT = 'True' AND GLACCOUNT.DYNAMICACCOUNTSQLFUNCTIONNAME IS NOT NULL


	--Loop through all posting info found, and use the configured custom SQL functions to assign new account numbers. 
	DECLARE 
	@sqlFunctionCallText NVARCHAR(500),
	@id INT,
	@postingRecordId CHAR(36),
	@creditFlag BIT,
	@postingTypeId INT,
	@updateNewAccountNumberSql NVARCHAR(500),
	@functionParamList NVARCHAR(100) = '(@dynamicPostingTypeId, @postingId, @isCredit)',
	@paramsDefinition NVARCHAR(100) = N'@dynamicPostingTypeId int, @postingId char(36), @isCredit bit, @rowIdentity int';

	DECLARE accountTranslationCursor CURSOR FOR
	SELECT 
		[SQL_FUNCTION_NAME] + @functionParamList, 
		[ID], 
		[POSTING_ID], 
		[IS_CREDIT], 
		[DYNAMIC_POSTING_TYPE_ID] 
	FROM #translatedAccountPosting;
	OPEN accountTranslationCursor
	FETCH NEXT FROM accountTranslationCursor INTO @sqlFunctionCallText, @id, @postingRecordId, @creditFlag, @postingTypeId
	WHILE @@FETCH_STATUS = 0
	BEGIN
		BEGIN TRY

		--Dynamic SQL statement to update temp table with new dynamic account number, based on result of UDF scalar result value.
		SET @updateNewAccountNumberSql = 'update #translatedAccountPosting set [NEW_ACCOUNT_NUMBER] = ' + @sqlFunctionCallText + ' WHERE [ID] = @rowIdentity'; 
		
		--Execute the dynamic SQL with parameterized option.
		execute sp_executesql 
			@updateNewAccountNumberSql, 
			@paramsDefinition, 
			@dynamicPostingTypeId = @postingTypeId, 
			@postingId = @postingRecordId, 
			@isCredit = @creditFlag,
			@rowIdentity = @id

		END TRY
		BEGIN CATCH
			BEGIN
				DECLARE @message VARCHAR(MAX) = 'FAILED IN PROCEDURE :  [cashieringsetup].[USP_DYNAMIC_ACCOUNT_NUMBER_TRANSLATE].  ERROR:  ' + ERROR_MESSAGE();
				--Include error message in results being sent back.
				UPDATE #translatedAccountPosting SET [ERROR_MESSAGE] = @message WHERE [ID] = @id

				--Log error in DB for history of any failed dynamic account number assignment
				INSERT  INTO [GLOBALERROR]
				( [GGLOBALERROR], [USERNAME], [LOGDATE], [EXCEPTION], [SENTTOENERGOV], [GLOBALERRORNUMBER] )
				VALUES  
				( LOWER(NEWID()), 'EnerGov Service', GETDATE(), @message, NULL, NULL )
			END; 						
		END CATCH; 

		FETCH NEXT FROM accountTranslationCursor INTO @sqlFunctionCallText, @id, @postingRecordId, @creditFlag, @postingTypeId

	
	END
	CLOSE accountTranslationCursor
	DEALLOCATE accountTranslationCursor
	
	--Return info needed for EnerGov business object to save dynamic account numbers to their GL/AR posting rows.
	--Business object code will loop through these results, assign the dynamic account number properties, and commit all changes together.  
	select [POSTING_ID], [IS_CREDIT], [IS_AR_POSTING], [NEW_ACCOUNT_NUMBER], [ERROR_MESSAGE]
	from #translatedAccountPosting

END