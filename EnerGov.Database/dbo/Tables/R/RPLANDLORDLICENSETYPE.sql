CREATE TABLE [dbo].[RPLANDLORDLICENSETYPE] (
    [RPLANDLORDLICENSETYPEID] CHAR (36)      NOT NULL,
    [NAME]                    NVARCHAR (50)  NOT NULL,
    [DESCRIPTION]             NVARCHAR (MAX) NULL,
    [FRIENDLYNAME]            NVARCHAR (100) NOT NULL,
    [PREFIX]                  NVARCHAR (10)  NULL,
    [DEFAULTSTATUSID]         CHAR (36)      NULL,
    [CUSTOMFIELDLAYOUTID]     CHAR (36)      NULL,
    [CAFEETEMPLATEID]         CHAR (36)      NULL,
    [ACTIVE]                  BIT            NOT NULL,
    [BLEINFORMATID]           INT            NULL,
    [LASTCHANGEDBY]           CHAR (36)      NULL,
    [LASTCHANGEDON]           DATETIME       CONSTRAINT [DF_RPLANDLORDLICENSETYPE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]              INT            CONSTRAINT [DF_RPLANDLORDLICENSETYPE_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_RPLANDLORDLICENSETYPE] PRIMARY KEY NONCLUSTERED ([RPLANDLORDLICENSETYPEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_RPLLLICTYPE_CUSTOM] FOREIGN KEY ([CUSTOMFIELDLAYOUTID]) REFERENCES [dbo].[CUSTOMFIELDLAYOUT] ([GCUSTOMFIELDLAYOUTS]),
    CONSTRAINT [FK_RPLLLICTYPE_FORMAT] FOREIGN KEY ([BLEINFORMATID]) REFERENCES [dbo].[BLEINFORMAT] ([BLEINFORMATID]),
    CONSTRAINT [FK_RPLLLICTYPE_STATUS] FOREIGN KEY ([DEFAULTSTATUSID]) REFERENCES [dbo].[RPLANDLORDLICENSESTATUS] ([RPLANDLORDLICENSESTATUSID]),
    CONSTRAINT [FK_RPLLLICTYPE_TEMPLATE] FOREIGN KEY ([CAFEETEMPLATEID]) REFERENCES [dbo].[CAFEETEMPLATE] ([CAFEETEMPLATEID])
);


GO
CREATE NONCLUSTERED INDEX [RPLANDLORDLICENSETYPE_IX_QUERY]
    ON [dbo].[RPLANDLORDLICENSETYPE]([RPLANDLORDLICENSETYPEID] ASC, [NAME] ASC);


GO

CREATE TRIGGER [dbo].[TG_RPLANDLORDLICENSETYPE_DELETE] ON [dbo].[RPLANDLORDLICENSETYPE]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[deleted].[RPLANDLORDLICENSETYPEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Landlord License Type Deleted',
			'',
			'',
			'Landlord License Type (' + [deleted].[NAME] + ')'
	FROM	[deleted]
END
GO

CREATE TRIGGER [dbo].[TG_RPLANDLORDLICENSETYPE_INSERT] ON [dbo].[RPLANDLORDLICENSETYPE]
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of RPLANDLORDLICENSETYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )
	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Added',
			'',
			'',
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[inserted]	
END
GO

CREATE TRIGGER [dbo].[TG_RPLANDLORDLICENSETYPE_UPDATE] ON [dbo].[RPLANDLORDLICENSETYPE] 
	AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of RPLANDLORDLICENSETYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END	

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )
	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	UNION ALL

	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Description',
			ISNULL([deleted].[DESCRIPTION],'[none]'),
			ISNULL([inserted].[DESCRIPTION],'[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')	
	UNION ALL

	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Friendly Name',
			[deleted].[FRIENDLYNAME],
			[inserted].[FRIENDLYNAME],
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
	WHERE	[deleted].[FRIENDLYNAME] <> [inserted].[FRIENDLYNAME]	
	UNION ALL

	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Prefix',
			ISNULL([deleted].[PREFIX],'[none]'),
			ISNULL([inserted].[PREFIX],'[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
	WHERE	ISNULL([deleted].[PREFIX], '') <> ISNULL([inserted].[PREFIX], '')	
	UNION ALL

	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Active Flag',
			CASE [deleted].[ACTIVE] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[ACTIVE] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
	 WHERE	[deleted].[ACTIVE] <> [inserted].[ACTIVE]
	 UNION ALL

	 SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Custom Field',
			ISNULL([CUSTOMFIELDLAYOUT_DELETED].[SNAME], '[none]'),
			ISNULL([CUSTOMFIELDLAYOUT_INSERTED].[SNAME], '[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_DELETED WITH (NOLOCK) ON [deleted].[CUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_DELETED].[GCUSTOMFIELDLAYOUTS]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_INSERTED WITH (NOLOCK) ON [inserted].[CUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_INSERTED].[GCUSTOMFIELDLAYOUTS]
	WHERE	ISNULL([deleted].[CUSTOMFIELDLAYOUTID], '') <> ISNULL([inserted].[CUSTOMFIELDLAYOUTID], '')	
	UNION ALL


	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type TIN Format',
			ISNULL([BLEINFORMAT_DELETED].[NAME],'[none]'),
			ISNULL([BLEINFORMAT_INSERTED].[NAME],'[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
			LEFT JOIN [BLEINFORMAT] BLEINFORMAT_INSERTED WITH (NOLOCK) ON [BLEINFORMAT_INSERTED].[BLEINFORMATID] = [inserted].[BLEINFORMATID]
			LEFT JOIN [BLEINFORMAT] BLEINFORMAT_DELETED WITH (NOLOCK) ON [BLEINFORMAT_DELETED].[BLEINFORMATID] = [deleted].[BLEINFORMATID]
	WHERE	ISNULL([deleted].[BLEINFORMATID], '') <> ISNULL([inserted].[BLEINFORMATID], '')	
	UNION ALL
	
	 SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Default Status',
			ISNULL([RPLANDLORDLICENSESTATUS_DELETED].[NAME],'[none]'),
			ISNULL([RPLANDLORDLICENSESTATUS_INSERTED].[NAME],'[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
			LEFT JOIN [RPLANDLORDLICENSESTATUS] RPLANDLORDLICENSESTATUS_INSERTED WITH (NOLOCK) ON [RPLANDLORDLICENSESTATUS_INSERTED].[RPLANDLORDLICENSESTATUSID] = [inserted].[DEFAULTSTATUSID]
			LEFT JOIN [RPLANDLORDLICENSESTATUS] RPLANDLORDLICENSESTATUS_DELETED WITH (NOLOCK) ON [RPLANDLORDLICENSESTATUS_DELETED].[RPLANDLORDLICENSESTATUSID] = [deleted].[DEFAULTSTATUSID]
	WHERE	ISNULL([deleted].[DEFAULTSTATUSID], '') <> ISNULL([inserted].[DEFAULTSTATUSID], '')	
	UNION ALL

	SELECT
			[inserted].[RPLANDLORDLICENSETYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Landlord License Type Fee Template',
			ISNULL([CAFEETEMPLATE_DELETED].[CAFEETEMPLATENAME], '[none]'),
			ISNULL([CAFEETEMPLATE_INSERTED].[CAFEETEMPLATENAME], '[none]'),
			'Landlord License Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDLICENSETYPEID] = [inserted].[RPLANDLORDLICENSETYPEID]
			LEFT JOIN CAFEETEMPLATE CAFEETEMPLATE_DELETED WITH (NOLOCK) ON [deleted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_DELETED].[CAFEETEMPLATEID]
			LEFT JOIN CAFEETEMPLATE CAFEETEMPLATE_INSERTED WITH (NOLOCK) ON [inserted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_INSERTED].[CAFEETEMPLATEID]
	WHERE	ISNULL([deleted].[CAFEETEMPLATEID], '') <> ISNULL([inserted].[CAFEETEMPLATEID], '')	
	
END