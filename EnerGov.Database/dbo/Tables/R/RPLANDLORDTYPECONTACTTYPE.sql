CREATE TABLE [dbo].[RPLANDLORDTYPECONTACTTYPE] (
    [RPLANDLORDTYPECONTACTTYPEID] CHAR (36) NOT NULL,
    [RPCONTACTTYPEID]             CHAR (36) NOT NULL,
    [RPLANDLORDLICENSETYPEID]     CHAR (36) NOT NULL,
    [ISREQUIRED]                  BIT       NOT NULL,
    [CONTACTTYPEGROUP]            INT       NULL,
    CONSTRAINT [PK_RPLANDLORDTYPECONTACTTYPE] PRIMARY KEY NONCLUSTERED ([RPLANDLORDTYPECONTACTTYPEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_RPLLTYPE_RPCONTACTTYPE] FOREIGN KEY ([RPCONTACTTYPEID]) REFERENCES [dbo].[RPCONTACTTYPE] ([RPCONTACTTYPEID]),
    CONSTRAINT [FK_RPLLTYPECONTACTTYPE_TYPE] FOREIGN KEY ([RPLANDLORDLICENSETYPEID]) REFERENCES [dbo].[RPLANDLORDLICENSETYPE] ([RPLANDLORDLICENSETYPEID])
);


GO
CREATE NONCLUSTERED INDEX [RPLANDLORDTYPECONTACTTYPE_IX_RPLANDLORDLICENSETYPEID]
    ON [dbo].[RPLANDLORDTYPECONTACTTYPE]([RPLANDLORDLICENSETYPEID] ASC);


GO

CREATE TRIGGER [dbo].[TG_RPLANDLORDTYPECONTACTTYPE_DELETE] ON [dbo].[RPLANDLORDTYPECONTACTTYPE]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID],
			[RPLANDLORDLICENSETYPE].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Landlord License Type Contact Type Deleted',
			'',
			'',
			'Landlord License Type (' + [RPLANDLORDLICENSETYPE].[NAME] + '),  Contact Type (' + [RPCONTACTTYPE].[NAME] + ')'
	FROM	[deleted]
			JOIN [RPCONTACTTYPE] WITH (NOLOCK) ON [RPCONTACTTYPE].[RPCONTACTTYPEID] = [deleted].[RPCONTACTTYPEID]
			JOIN [RPLANDLORDLICENSETYPE] ON [RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID] = [deleted].[RPLANDLORDLICENSETYPEID]
END
GO

CREATE TRIGGER [dbo].[TG_RPLANDLORDTYPECONTACTTYPE_UPDATE] ON [dbo].[RPLANDLORDTYPECONTACTTYPE]
	AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )
	SELECT
			[RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID],
			[RPLANDLORDLICENSETYPE].[ROWVERSION],
			GETUTCDATE(),
			[RPLANDLORDLICENSETYPE].[LASTCHANGEDBY],
			'Landlord License Type Contact Type Required Flag',
			CASE [deleted].[ISREQUIRED] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[ISREQUIRED] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Landlord License Type (' + [RPLANDLORDLICENSETYPE].[NAME] + '),  Contact Type (' + [RPCONTACTTYPE].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDTYPECONTACTTYPEID] = [inserted].[RPLANDLORDTYPECONTACTTYPEID]
			JOIN [RPCONTACTTYPE] WITH (NOLOCK) ON [RPCONTACTTYPE].[RPCONTACTTYPEID] = [deleted].[RPCONTACTTYPEID]
			JOIN [RPLANDLORDLICENSETYPE] ON [RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID] = [deleted].[RPLANDLORDLICENSETYPEID]
	WHERE	[deleted].[ISREQUIRED] <> [inserted].[ISREQUIRED]
	UNION ALL	

	SELECT
			[RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID],
			[RPLANDLORDLICENSETYPE].[ROWVERSION],
			GETUTCDATE(),
			[RPLANDLORDLICENSETYPE].[LASTCHANGEDBY],
			'Landlord License Type Contact Type Set',
			CASE WHEN [deleted].[CONTACTTYPEGROUP] IS NULL THEN '[none]' ELSE CONVERT(NVARCHAR(MAX), [deleted].[CONTACTTYPEGROUP]) END,
			CASE WHEN [inserted].[CONTACTTYPEGROUP] IS NULL THEN '[none]' ELSE CONVERT(NVARCHAR(MAX), [inserted].[CONTACTTYPEGROUP]) END,			
			'Landlord License Type (' + [RPLANDLORDLICENSETYPE].[NAME] + '),  Contact Type (' + [RPCONTACTTYPE].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[RPLANDLORDTYPECONTACTTYPEID] = [inserted].[RPLANDLORDTYPECONTACTTYPEID]
			JOIN [RPCONTACTTYPE] ON [RPCONTACTTYPE].[RPCONTACTTYPEID] = [deleted].[RPCONTACTTYPEID]
			JOIN [RPLANDLORDLICENSETYPE] ON [RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID] = [deleted].[RPLANDLORDLICENSETYPEID]
	WHERE	ISNULL([deleted].[CONTACTTYPEGROUP],'') <> ISNULL([inserted].[CONTACTTYPEGROUP],'')
	
END
GO

CREATE TRIGGER [TG_RPLANDLORDTYPECONTACTTYPE_INSERT] ON RPLANDLORDTYPECONTACTTYPE
	AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON

	INSERT INTO [HISTORYSYSTEMSETUP]
	(
		[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
	)
	SELECT 
			[RPLANDLORDLICENSETYPE].[RPLANDLORDLICENSETYPEID],
			[RPLANDLORDLICENSETYPE].[ROWVERSION],
			GETUTCDATE(),
			[RPLANDLORDLICENSETYPE].[LASTCHANGEDBY],
			'Landlord License Type Contact Type Added',
			'',
			'',
			'Landlord License Type (' + [RPLANDLORDLICENSETYPE].[NAME] + '),  Contact Type (' + [RPCONTACTTYPE].[NAME] + ')'
	FROM	[inserted]
	JOIN [RPLANDLORDLICENSETYPE] ON [inserted].[RPLANDLORDLICENSETYPEID] = RPLANDLORDLICENSETYPE.RPLANDLORDLICENSETYPEID
	JOIN [RPCONTACTTYPE] WITH (NOLOCK) ON [inserted].RPCONTACTTYPEID = [RPCONTACTTYPE].[RPCONTACTTYPEID]
END