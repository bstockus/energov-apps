CREATE TABLE [dbo].[QUERYACTIONTASKUSER] (
    [QUERYACTIONTASKUSERID] CHAR (36) NOT NULL,
    [QUERYACTIONTASKID]     CHAR (36) NOT NULL,
    [USERID]                CHAR (36) NOT NULL,
    CONSTRAINT [PK_QUERYACTIONTASKUSER] PRIMARY KEY CLUSTERED ([QUERYACTIONTASKUSERID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_QUERYACTIONTASKUSER_Q] FOREIGN KEY ([QUERYACTIONTASKID]) REFERENCES [dbo].[QUERYACTIONTASK] ([QUERYACTIONTASKID]),
    CONSTRAINT [FK_QUERYACTIONTASKUSER_U] FOREIGN KEY ([USERID]) REFERENCES [dbo].[USERS] ([SUSERGUID])
);


GO
CREATE NONCLUSTERED INDEX [QUERYACTIONTASKUSER_QUERYACTIONTASKID]
    ON [dbo].[QUERYACTIONTASKUSER]([QUERYACTIONTASKID] ASC);


GO
CREATE NONCLUSTERED INDEX [QUERYACTIONTASKUSER_USERID]
    ON [dbo].[QUERYACTIONTASKUSER]([USERID] ASC);


GO

CREATE TRIGGER [dbo].[TG_QUERYACTIONTASKUSER_DELETE]
   ON  [dbo].[QUERYACTIONTASKUSER]
   AFTER DELETE
AS 
BEGIN	
	SET NOCOUNT ON;
	INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )	
	SELECT
			[QUERY].[QUERYID], 
			[QUERY].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Intelligent Query Action Task User Deleted',
			'',
			'',
			'Intelligent Query Action (' + [QUERY].[NAME] + '), Action (' + [QUERYACTION].[ACTIONNAME] +'), Action Type (' + [QUERYACTIONTYPE].[NAME]  + '), User (' + [USERS].[LNAME] + COALESCE(', ' + [USERS].[FNAME],'')  + ')',
			'C08776DA-046E-4E9B-9DE4-4CC2005A98CD',
			3,
			0,
			[QUERYACTION].[ACTIONNAME]
	FROM	[deleted]
			INNER JOIN [QUERYACTIONTASK] ON [QUERYACTIONTASK].[QUERYACTIONTASKID] = [deleted].[QUERYACTIONTASKID]
			INNER JOIN [QUERYACTION] ON [QUERYACTION].[QUERYACTIONID] = [QUERYACTIONTASK].[QUERYACTIONID]
			INNER JOIN [QUERY] ON [QUERY].[QUERYID] = [QUERYACTION].[QUERYID]
			INNER JOIN [QUERYACTIONTYPE] WITH (NOLOCK) ON [QUERYACTIONTYPE].[QUERYACTIONTYPEID] = [QUERYACTION].[QUERYACTIONTYPEID]
			INNER JOIN [USERS] WITH (NOLOCK) ON [USERS].[SUSERGUID] = [deleted].[USERID]
END
GO

CREATE TRIGGER [dbo].[TG_QUERYACTIONTASKUSER_INSERT]
   ON  [dbo].[QUERYACTIONTASKUSER]
   AFTER INSERT
AS 
BEGIN	
	SET NOCOUNT ON;
	INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )	
	SELECT
			[QUERY].[QUERYID], 
			[QUERY].[ROWVERSION],
			GETUTCDATE(),
			[QUERY].[LASTCHANGEDBY],
			'Intelligent Query Action Task User Added',
			'',
			'',
			'Intelligent Query Action (' + [QUERY].[NAME] + '), Action (' + [QUERYACTION].[ACTIONNAME] +'), Action Type (' + [QUERYACTIONTYPE].[NAME] + '), User (' + [USERS].[LNAME] + COALESCE(', ' + [USERS].[FNAME],'')  + ')',
			'C08776DA-046E-4E9B-9DE4-4CC2005A98CD',
			1,
			0,
			[QUERYACTION].[ACTIONNAME]
	FROM	[inserted]
			INNER JOIN [QUERYACTIONTASK] ON [QUERYACTIONTASK].[QUERYACTIONTASKID] = [inserted].[QUERYACTIONTASKID]
			INNER JOIN [QUERYACTION] ON [QUERYACTION].[QUERYACTIONID] = [QUERYACTIONTASK].[QUERYACTIONID]
			INNER JOIN [QUERY] ON [QUERY].[QUERYID] = [QUERYACTION].[QUERYID]
			INNER JOIN [QUERYACTIONTYPE] WITH (NOLOCK) ON [QUERYACTIONTYPE].[QUERYACTIONTYPEID] = [QUERYACTION].[QUERYACTIONTYPEID]
			INNER JOIN [USERS] WITH (NOLOCK) ON [USERS].[SUSERGUID] = [inserted].[USERID]
END