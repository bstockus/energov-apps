CREATE TABLE [dbo].[PLSUBMITTAL] (
    [PLSUBMITTALID]           CHAR (36) NOT NULL,
    [PLPLANID]                CHAR (36) NULL,
    [PLSUBMITTALSTATUSID]     CHAR (36) NOT NULL,
    [PLSUBMITTALTYPEID]       CHAR (36) NOT NULL,
    [PLSUBMITTALPARENTID]     CHAR (36) NULL,
    [RECEIVEDDATE]            DATETIME  NOT NULL,
    [NEEDSRESUBMIT]           BIT       NOT NULL,
    [COMPLETED]               BIT       NOT NULL,
    [DUEDATE]                 DATETIME  NULL,
    [PLPLANWFACTIONSTEPID]    CHAR (36) NULL,
    [COMPLETEDATE]            DATETIME  NULL,
    [PMPERMITID]              CHAR (36) NULL,
    [PMPERMITWFACTIONSTEPID]  CHAR (36) NULL,
    [BLLICENSEID]             CHAR (36) NULL,
    [BLLICENSEWFACTIONSTEPID] CHAR (36) NULL,
    [ILLICENSEID]             CHAR (36) NULL,
    [ILLICENSEWFACTIONSTEPID] CHAR (36) NULL,
    CONSTRAINT [PK_PLSubmittal] PRIMARY KEY CLUSTERED ([PLSUBMITTALID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_PLSubmittal_Action] FOREIGN KEY ([PLPLANWFACTIONSTEPID]) REFERENCES [dbo].[PLPLANWFACTIONSTEP] ([PLPLANWFACTIONSTEPID]),
    CONSTRAINT [FK_PLSUBMITTAL_BLLICENSE] FOREIGN KEY ([BLLICENSEID]) REFERENCES [dbo].[BLLICENSE] ([BLLICENSEID]),
    CONSTRAINT [FK_PLSUBMITTAL_BLWACTIONSTEP] FOREIGN KEY ([BLLICENSEWFACTIONSTEPID]) REFERENCES [dbo].[BLLICENSEWFACTIONSTEP] ([BLLICENSEWFACTIONSTEPID]),
    CONSTRAINT [FK_PLSUBMITTAL_ILLICENSE] FOREIGN KEY ([ILLICENSEID]) REFERENCES [dbo].[ILLICENSE] ([ILLICENSEID]),
    CONSTRAINT [FK_PLSUBMITTAL_ILWACTIONSTEP] FOREIGN KEY ([ILLICENSEWFACTIONSTEPID]) REFERENCES [dbo].[ILLICENSEWFACTIONSTEP] ([ILLICENSEWFACTIONSTEPID]),
    CONSTRAINT [FK_PLSubmittal_PLPlan] FOREIGN KEY ([PLPLANID]) REFERENCES [dbo].[PLPLAN] ([PLPLANID]),
    CONSTRAINT [FK_PLSubmittal_PLSubmittal] FOREIGN KEY ([PLSUBMITTALPARENTID]) REFERENCES [dbo].[PLSUBMITTAL] ([PLSUBMITTALID]),
    CONSTRAINT [FK_PLSubmittal_PLSubmittalType] FOREIGN KEY ([PLSUBMITTALTYPEID]) REFERENCES [dbo].[PLSUBMITTALTYPE] ([PLSUBMITTALTYPEID]),
    CONSTRAINT [FK_PLSUBMITTAL_PMPERMIT] FOREIGN KEY ([PMPERMITID]) REFERENCES [dbo].[PMPERMIT] ([PMPERMITID]),
    CONSTRAINT [FK_PLSUBMITTAL_PMWACTIONSTEP] FOREIGN KEY ([PMPERMITWFACTIONSTEPID]) REFERENCES [dbo].[PMPERMITWFACTIONSTEP] ([PMPERMITWFACTIONSTEPID]),
    CONSTRAINT [FK_PLSubmittal_Status] FOREIGN KEY ([PLSUBMITTALSTATUSID]) REFERENCES [dbo].[PLSUBMITTALSTATUS] ([PLSUBMITTALSTATUSID])
);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_PERMIT]
    ON [dbo].[PLSUBMITTAL]([PMPERMITID] ASC, [PLSUBMITTALID] ASC, [PLSUBMITTALSTATUSID] ASC, [PLSUBMITTALTYPEID] ASC, [RECEIVEDDATE] ASC, [NEEDSRESUBMIT] ASC, [COMPLETED] ASC, [DUEDATE] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_PLAN]
    ON [dbo].[PLSUBMITTAL]([PLPLANID] ASC, [PLSUBMITTALID] ASC, [PLSUBMITTALSTATUSID] ASC, [PLSUBMITTALTYPEID] ASC, [RECEIVEDDATE] ASC, [NEEDSRESUBMIT] ASC, [COMPLETED] ASC, [DUEDATE] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [ix_PLSUBMITTAL_PLPLANWFACTIONSTEPID]
    ON [dbo].[PLSUBMITTAL]([PLPLANWFACTIONSTEPID] ASC) WITH (FILLFACTOR = 100);


GO
CREATE NONCLUSTERED INDEX [ix_PLSUBMITTAL_PMPERMITWFACTIONSTEPID]
    ON [dbo].[PLSUBMITTAL]([PMPERMITWFACTIONSTEPID] ASC) WITH (FILLFACTOR = 100);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_COMPLETED]
    ON [dbo].[PLSUBMITTAL]([COMPLETED] ASC, [COMPLETEDATE] ASC, [DUEDATE] ASC)
    INCLUDE([PLSUBMITTALID], [PLSUBMITTALTYPEID], [PLPLANID], [PMPERMITID]);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_BLLICENSE]
    ON [dbo].[PLSUBMITTAL]([BLLICENSEID] ASC, [PLSUBMITTALID] ASC, [PLSUBMITTALSTATUSID] ASC, [PLSUBMITTALTYPEID] ASC, [RECEIVEDDATE] ASC, [NEEDSRESUBMIT] ASC, [COMPLETED] ASC, [DUEDATE] ASC);


GO
CREATE NONCLUSTERED INDEX [ix_PLSUBMITTAL_BLLICENSEWFACTIONSTEPID]
    ON [dbo].[PLSUBMITTAL]([BLLICENSEWFACTIONSTEPID] ASC) WITH (FILLFACTOR = 100);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_ILLICENSE]
    ON [dbo].[PLSUBMITTAL]([ILLICENSEID] ASC, [PLSUBMITTALID] ASC, [PLSUBMITTALSTATUSID] ASC, [PLSUBMITTALTYPEID] ASC, [RECEIVEDDATE] ASC, [NEEDSRESUBMIT] ASC, [COMPLETED] ASC, [DUEDATE] ASC);


GO
CREATE NONCLUSTERED INDEX [ix_PLSUBMITTAL_ILLICENSEWFACTIONSTEPID]
    ON [dbo].[PLSUBMITTAL]([ILLICENSEWFACTIONSTEPID] ASC) WITH (FILLFACTOR = 100);


GO
CREATE NONCLUSTERED INDEX [IX_PLSUBMITTAL_STATUS_COMPLETED]
    ON [dbo].[PLSUBMITTAL]([PLSUBMITTALSTATUSID] ASC, [COMPLETED] ASC, [COMPLETEDATE] ASC)
    INCLUDE([PLSUBMITTALID], [PLPLANID], [PLSUBMITTALTYPEID], [RECEIVEDDATE], [DUEDATE], [PMPERMITID]);


GO


CREATE TRIGGER [TG_PLSUBMITTAL_INSERTUPDATE_ELASTIC_PLAN] ON  [PLSUBMITTAL]
   AFTER INSERT, UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[PLPLANID] ,
        'EnerGovBusiness.PlanManagement.Plan' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted]
	JOIN [PLPLAN] AS [P] WITH (NOLOCK) ON [P].[PLPLANID] = [Inserted].[PLPLANID];

END
GO


CREATE TRIGGER [TG_PLSUBMITTAL_INSERTUPDATE_ELASTIC_PERMIT] ON  [PLSUBMITTAL]
   AFTER INSERT, UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[PMPERMITID] ,
        'EnerGovBusiness.PermitManagement.Permit' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted]
	JOIN [PMPERMIT] AS [P] WITH (NOLOCK) ON [P].[PMPERMITID] = [Inserted].[PMPERMITID];

END
GO


CREATE TRIGGER [TG_PLSUBMITTAL_DELETE_ELASTIC_PERMIT] ON  [PLSUBMITTAL]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[PMPERMITID] ,
        'EnerGovBusiness.PermitManagement.Permit' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Deleted]
	JOIN [PMPERMIT] AS [P] WITH (NOLOCK) ON [P].[PMPERMITID] = [Deleted].[PMPERMITID];

END
GO


CREATE TRIGGER [TG_PLSUBMITTAL_DELETE_ELASTIC_PLAN] ON  [PLSUBMITTAL]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[PLPLANID] ,
        'EnerGovBusiness.PlanManagement.Plan' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Deleted]
	JOIN [PLPLAN] AS [P] WITH (NOLOCK) ON [P].[PLPLANID] = [Deleted].[PLPLANID];

END
GO


CREATE TRIGGER [TG_PLSUBMITTAL_DELETE_ELASTIC_ILLICENSE] ON  [PLSUBMITTAL]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[ILLICENSEID] ,
        'EnerGovBusiness.IndividualLicense.License' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Deleted]
	JOIN [ILLICENSE] AS [P] WITH (NOLOCK) ON [P].[ILLICENSEID] = [Deleted].[ILLICENSEID];

END
GO


CREATE TRIGGER [TG_PLSUBMITTAL_DELETE_ELASTIC_BLLICENSE] ON  [PLSUBMITTAL]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[BLLICENSEID] ,
        'EnerGovBusiness.BusinessLicense.BusinessLicense' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Deleted]
	JOIN [BLLICENSE] AS [P] WITH (NOLOCK) ON [P].[BLLICENSEID] = [Deleted].[BLLICENSEID];

END
GO

CREATE TRIGGER [TG_PLSUBMITTAL_INSERTUPDATE_ELASTIC_ILLICENSE] ON  [PLSUBMITTAL]
   AFTER INSERT, UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[ILLICENSEID] ,
        'EnerGovBusiness.IndividualLicense.License' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted]
	JOIN [ILLICENSE] AS [P] WITH (NOLOCK) ON [P].[ILLICENSEID] = [Inserted].[ILLICENSEID];

END
GO

CREATE TRIGGER [TG_PLSUBMITTAL_INSERTUPDATE_ELASTIC_BLLICENSE] ON  [PLSUBMITTAL]
   AFTER INSERT, UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[P].[BLLICENSEID] ,
        'EnerGovBusiness.BusinessLicense.BusinessLicense' ,
        [P].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted]
	JOIN [BLLICENSE] AS [P] WITH (NOLOCK) ON [P].[BLLICENSEID] = [Inserted].[BLLICENSEID];

END