CREATE TABLE [dbo].[PLPLANCORRECTIONTYPE] (
    [PLPLANCORRECTIONTYPEID]     CHAR (36)      NOT NULL,
    [NAME]                       NVARCHAR (50)  NOT NULL,
    [DESCRIPTION]                NVARCHAR (MAX) NULL,
    [CORRECTIVEACTION]           NVARCHAR (MAX) NULL,
    [PLCORRECTIONTYPECATEGORYID] CHAR (36)      NULL,
    [LASTCHANGEDBY]              CHAR (36)      NULL,
    [LASTCHANGEDON]              DATETIME       CONSTRAINT [DF_PLPLANCORRECTIONTYPE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                 INT            CONSTRAINT [DF_PLPLANCORRECTIONTYPE_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_PLPlanCorrectionType] PRIMARY KEY CLUSTERED ([PLPLANCORRECTIONTYPEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_PLPLANCORRECTIONTYPE_CAT] FOREIGN KEY ([PLCORRECTIONTYPECATEGORYID]) REFERENCES [dbo].[PLCORRECTIONTYPECATEGORY] ([PLCORRECTIONTYPECATEGORYID])
);


GO
CREATE NONCLUSTERED INDEX [PLPLANCORRECTIONTYPE_IX_QUERY]
    ON [dbo].[PLPLANCORRECTIONTYPE]([PLPLANCORRECTIONTYPEID] ASC, [NAME] ASC);


GO

CREATE TRIGGER [TG_PLPLANCORRECTIONTYPE_DELETE] ON PLPLANCORRECTIONTYPE
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[deleted].[PLPLANCORRECTIONTYPEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Review Correction Type Deleted',
			'',
			'',
			'Review Correction Type (' + [deleted].[NAME] + ')'
	FROM	[deleted]
END
GO


CREATE TRIGGER [TG_PLPLANCORRECTIONTYPE_UPDATE] ON PLPLANCORRECTIONTYPE
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of PLPLANCORRECTIONTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END	

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[inserted].[PLPLANCORRECTIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Review Correction Type Category',
			ISNULL([PLCORRECTIONTYPECATEGORY_DELETED].[NAME], '[none]'),
			ISNULL([PLCORRECTIONTYPECATEGORY_INSERTED].[NAME], '[none]'),
			'Review Correction Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[PLPLANCORRECTIONTYPEID] = [inserted].[PLPLANCORRECTIONTYPEID]
			LEFT JOIN PLCORRECTIONTYPECATEGORY PLCORRECTIONTYPECATEGORY_DELETED WITH (NOLOCK) ON [deleted].[PLCORRECTIONTYPECATEGORYID] = PLCORRECTIONTYPECATEGORY_DELETED.[PLCORRECTIONTYPECATEGORYID]
			LEFT JOIN PLCORRECTIONTYPECATEGORY PLCORRECTIONTYPECATEGORY_INSERTED WITH (NOLOCK) ON [inserted].[PLCORRECTIONTYPECATEGORYID] = PLCORRECTIONTYPECATEGORY_INSERTED.[PLCORRECTIONTYPECATEGORYID]
	WHERE	ISNULL([deleted].PLCORRECTIONTYPECATEGORYID, '') <> ISNULL([inserted].PLCORRECTIONTYPECATEGORYID, '')

	UNION ALL
	SELECT
			[inserted].[PLPLANCORRECTIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Review Correction Type Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Review Correction Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[PLPLANCORRECTIONTYPEID] = [inserted].[PLPLANCORRECTIONTYPEID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	
	UNION ALL
	SELECT
			[inserted].[PLPLANCORRECTIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Review Correction Type Description',
			ISNULL([deleted].[DESCRIPTION], '[none]'),
			ISNULL([inserted].[DESCRIPTION], '[none]'),
			'Review Correction Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[PLPLANCORRECTIONTYPEID] = [inserted].[PLPLANCORRECTIONTYPEID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')

	UNION ALL
	SELECT
			[inserted].[PLPLANCORRECTIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Review Correction Type Corrective Action',
			ISNULL([deleted].[CORRECTIVEACTION], '[none]'),
			ISNULL([inserted].[CORRECTIVEACTION], '[none]'),
			'Review Correction Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[PLPLANCORRECTIONTYPEID] = [inserted].[PLPLANCORRECTIONTYPEID]
	WHERE	ISNULL([deleted].[CORRECTIVEACTION], '') <> ISNULL([inserted].[CORRECTIVEACTION], '')
END
GO

CREATE TRIGGER [TG_PLPLANCORRECTIONTYPE_INSERT] ON PLPLANCORRECTIONTYPE
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of PLPLANCORRECTIONTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[inserted].[PLPLANCORRECTIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Review Correction Type Added',
			'',
			'',
			'Review Correction Type (' + [inserted].[NAME] + ')'
	FROM	[inserted]	
END