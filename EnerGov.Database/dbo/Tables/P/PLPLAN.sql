CREATE TABLE [dbo].[PLPLAN] (
    [PLPLANID]                  CHAR (36)       NOT NULL,
    [PLANNUMBER]                NVARCHAR (50)   NOT NULL,
    [PLPLANTYPEID]              CHAR (36)       NOT NULL,
    [PLPLANSTATUSID]            CHAR (36)       NOT NULL,
    [APPLICATIONDATE]           DATETIME        NULL,
    [EXPIREDATE]                DATETIME        NULL,
    [COMPLETEDATE]              DATETIME        NULL,
    [ASSIGNEDTO]                CHAR (36)       NULL,
    [COMPLETED]                 BIT             NOT NULL,
    [DISTRICTID]                CHAR (36)       NOT NULL,
    [EXPEDITED]                 BIT             NULL,
    [PLPLANWORKCLASSID]         CHAR (36)       NULL,
    [ROWVERSION]                INT             NOT NULL,
    [LASTCHANGEDBY]             CHAR (36)       NULL,
    [LASTCHANGEDON]             DATETIME        NULL,
    [ASSETGEOMETRYCOLLECTIONID] CHAR (36)       NULL,
    [DESCRIPTION]               NVARCHAR (MAX)  NULL,
    [APPROVALEXPIREDATE]        DATETIME        NULL,
    [PLPLANSTATUSCHANGEDDATE]   DATETIME        NULL,
    [IMPORTCUSTOMFIELDLAYOUTID] CHAR (36)       NULL,
    [SQUAREFEET]                DECIMAL (15, 2) NULL,
    [VALUE]                     MONEY           NULL,
    [CALENDARDUEDATE]           DATETIME        NULL,
    [ISAPPLIEDONLINE]           BIT             DEFAULT ((0)) NOT NULL,
    [OVERRIDEFEEDATE]           DATETIME        NULL,
    [CPIVESTEDMAPDATE]          DATETIME        NULL,
    [IVRNUMBER]                 INT             NULL,
    CONSTRAINT [PK_PLPlan_1] PRIMARY KEY CLUSTERED ([PLPLANID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_PLPlan_AssetGeometryCollection] FOREIGN KEY ([ASSETGEOMETRYCOLLECTIONID]) REFERENCES [dbo].[ASSETGEOMETRYCOLLECTION] ([ASSETGEOMETRYCOLLECTIONID]),
    CONSTRAINT [FK_PLPlan_CustomField] FOREIGN KEY ([IMPORTCUSTOMFIELDLAYOUTID]) REFERENCES [dbo].[CUSTOMFIELDLAYOUT] ([GCUSTOMFIELDLAYOUTS]),
    CONSTRAINT [FK_PLPlan_District] FOREIGN KEY ([DISTRICTID]) REFERENCES [dbo].[DISTRICT] ([DISTRICTID]),
    CONSTRAINT [FK_PLPlan_PLPlanStatus] FOREIGN KEY ([PLPLANSTATUSID]) REFERENCES [dbo].[PLPLANSTATUS] ([PLPLANSTATUSID]),
    CONSTRAINT [FK_PLPlan_PLPlanType] FOREIGN KEY ([PLPLANTYPEID]) REFERENCES [dbo].[PLPLANTYPE] ([PLPLANTYPEID]),
    CONSTRAINT [FK_PLPlan_PLPlanWorkClass] FOREIGN KEY ([PLPLANWORKCLASSID]) REFERENCES [dbo].[PLPLANWORKCLASS] ([PLPLANWORKCLASSID]),
    CONSTRAINT [FK_PLPlan_Users] FOREIGN KEY ([ASSIGNEDTO]) REFERENCES [dbo].[USERS] ([SUSERGUID]),
    CONSTRAINT [FK_PLPlan_Users1] FOREIGN KEY ([LASTCHANGEDBY]) REFERENCES [dbo].[USERS] ([SUSERGUID])
);


GO
CREATE NONCLUSTERED INDEX [IMPORT1]
    ON [dbo].[PLPLAN]([PLANNUMBER] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [NCIDX_PLPLAN_PLANNUMBER_INCL]
    ON [dbo].[PLPLAN]([PLANNUMBER] ASC)
    INCLUDE([PLPLANID], [PLPLANTYPEID]) WITH (FILLFACTOR = 90, PAD_INDEX = ON);


GO
CREATE NONCLUSTERED INDEX [NCIDX_PLPLAN_PLPLANTYPEID_INCL]
    ON [dbo].[PLPLAN]([PLPLANTYPEID] ASC)
    INCLUDE([PLPLANID], [PLANNUMBER], [PLPLANSTATUSID], [PLPLANWORKCLASSID]) WITH (FILLFACTOR = 90, PAD_INDEX = ON);


GO
CREATE NONCLUSTERED INDEX [IX_PLPLAN_COMPLETEDATE_ASSIGNEDTO]
    ON [dbo].[PLPLAN]([COMPLETEDATE] ASC, [ASSIGNEDTO] ASC)
    INCLUDE([PLPLANID]);


GO
CREATE NONCLUSTERED INDEX [IX_PLPLAN_LASTCHANGEDON]
    ON [dbo].[PLPLAN]([LASTCHANGEDON] DESC)
    INCLUDE([PLPLANID]);


GO
CREATE NONCLUSTERED INDEX [IX_PLPLAN_ASSIGNEDTO]
    ON [dbo].[PLPLAN]([ASSIGNEDTO] ASC)
    INCLUDE([PLPLANTYPEID], [PLANNUMBER]);


GO

CREATE TRIGGER [TG_PLPLAN_INSERT_EVENT_QUEUE_APPROVED] ON [dbo].[PLPLAN]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [dbo].[PLANEVENTQUEUE]
		(
			[PLPLANID],
			[PLANNUMBER],
			[PLANEVENTTYPEID],
			[EVENTSTATUSID],
			[CREATEDDATE],
			[PLANLASTCHANGEDBY]
		)
	SELECT
			[inserted].[PLPLANID],
			[inserted].[PLANNUMBER],
			2, -- Plan Approved Event - SELECT TOP 1* FROM [PLANEVENTTYPE] WHERE [PLANEVENTTYPEID] = 2
			1, -- Event Pending Status - SELECT TOP 1* FROM [EVENTSTATUS] WHERE [EVENTSTATUSID] = 1
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY]
	FROM [inserted]
		INNER JOIN [dbo].[PLPLANSTATUS] WITH(NOLOCK) ON [dbo].[PLPLANSTATUS].[PLPLANSTATUSID] = [inserted].[PLPLANSTATUSID]
	WHERE [dbo].[PLPLANSTATUS].[SUCCESSFLAG] = 1 AND [dbo].[PLPLANSTATUS].[HOLDFLAG] = 0
		AND [dbo].[PLPLANSTATUS].[CANCELLEDFLAG] = 0 AND [dbo].[PLPLANSTATUS].[FAILUREFLAG] = 0
END
GO
DISABLE TRIGGER [dbo].[TG_PLPLAN_INSERT_EVENT_QUEUE_APPROVED]
    ON [dbo].[PLPLAN];


GO

CREATE TRIGGER [TG_PLPLAN_INSERT_EVENT_QUEUE_CREATED] ON PLPLAN
   AFTER INSERT
AS 
BEGIN

	SET NOCOUNT ON;

	BEGIN
		INSERT INTO [PLANEVENTQUEUE]
			( 
				[PLPLANID],
				[PLANNUMBER],
				[PLANEVENTTYPEID],
				[EVENTSTATUSID],
				[CREATEDDATE],
				[PLANLASTCHANGEDBY]
			)
			-- Insert a new record in the Plan Event Queue table anytime a plan is created
			SELECT
				[INSERTED].PLPLANID,
				[INSERTED].PLANNUMBER,
				1, -- ID for 'Plan Created' Plan event Type 
				1, -- ID for 'Pending' Event Status
				GETUTCDATE(),
				[INSERTED].LASTCHANGEDBY
			FROM [INSERTED]		
	END
END
GO
DISABLE TRIGGER [dbo].[TG_PLPLAN_INSERT_EVENT_QUEUE_CREATED]
    ON [dbo].[PLPLAN];


GO

CREATE TRIGGER [TG_PLPLAN_UPDATE_EVENT_QUEUE_APPROVED] ON [dbo].[PLPLAN]
AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [dbo].[PLANEVENTQUEUE]
		(
			[PLPLANID],
			[PLANNUMBER],
			[PLANEVENTTYPEID],
			[EVENTSTATUSID],
			[CREATEDDATE],
			[PLANLASTCHANGEDBY]
		)
	SELECT
		[inserted].[PLPLANID],
		[inserted].[PLANNUMBER],
		2,-- Plan Approved Event - SELECT TOP 1* FROM [PLANEVENTTYPE] WHERE [PLANEVENTTYPEID] = 2
		1, -- Event Pending Status - SELECT TOP 1* FROM [EVENTSTATUS] WHERE [EVENTSTATUSID] = 1
		GETUTCDATE(),
		[inserted].[LASTCHANGEDBY]
	FROM [inserted] 
	INNER JOIN [dbo].[PLPLANSTATUS] WITH(NOLOCK) ON [dbo].[PLPLANSTATUS].[PLPLANSTATUSID] = [inserted].[PLPLANSTATUSID]
	INNER JOIN [deleted] ON [deleted].[PLPLANID] = [inserted].[PLPLANID]
	INNER JOIN [dbo].[PLPLANSTATUS] AS [oldStatus] WITH(NOLOCK) ON [oldStatus].[PLPLANSTATUSID] = [deleted].[PLPLANSTATUSID]
	WHERE [dbo].[PLPLANSTATUS].[SUCCESSFLAG] = 1 
		AND [dbo].[PLPLANSTATUS].[HOLDFLAG] = 0
		AND [dbo].[PLPLANSTATUS].[CANCELLEDFLAG] = 0 
		AND [dbo].[PLPLANSTATUS].[FAILUREFLAG] = 0 
		-- Do not insert into the queue if the exisitng saved copy has satisified the requirement. 
		AND NOT ([oldStatus].[SUCCESSFLAG] = 1 
				AND [oldStatus].[HOLDFLAG] = 0
				AND [oldStatus].[CANCELLEDFLAG] = 0 
				AND [oldStatus].[FAILUREFLAG] = 0)
END
GO
DISABLE TRIGGER [dbo].[TG_PLPLAN_UPDATE_EVENT_QUEUE_APPROVED]
    ON [dbo].[PLPLAN];


GO

CREATE TRIGGER [TG_PLPLAN_INSERT_ELASTIC] ON  PLPLAN
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[Inserted].[PLPLANID] ,
        'EnerGovBusiness.PlanManagement.Plan' ,
        [Inserted].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        1 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted];

END
GO

CREATE TRIGGER [TG_PLPLAN_UPDATE_ELASTIC] ON  PLPLAN
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[Inserted].[PLPLANID] ,
        'EnerGovBusiness.PlanManagement.Plan' ,
        [Inserted].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        2 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Inserted];

END
GO

CREATE TRIGGER [TG_PLPLAN_DELETE_ELASTIC] ON  PLPLAN
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [ELASTICSEARCHOBJECT]
    ( [ELASTICSEARCHOBJECTID] ,
        [OBJECTID] ,
        [OBJECTCLASSNAME] ,
        [ROWVERSION] ,
        [CREATEDATE] ,
        [PROCESSEDDATE] ,
        [OBJECTACTION] ,
        [INDEXNAME]
    )
	SELECT
		NEWID() ,
		[Deleted].[PLPLANID] ,
        'EnerGovBusiness.PlanManagement.Plan' ,
        [Deleted].[ROWVERSION] ,
        GETDATE() ,
        NULL ,
        3 ,
        (SELECT STRINGVALUE FROM SETTINGS WITH (NOLOCK) WHERE NAME = 'ServiceBusTenant')
	FROM [Deleted];

END