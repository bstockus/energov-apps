CREATE TABLE [dbo].[GISZONEREVIEWITEMMAPPING] (
    [GISZONEREVIEWITEMMAPPINGID] CHAR (36)     NOT NULL,
    [SOURCENAME]                 VARCHAR (100) NOT NULL,
    [ARCGISURL]                  VARCHAR (250) NOT NULL,
    [ARCGISLAYERNAME]            VARCHAR (250) NOT NULL,
    [ARCGISFIELDNAME]            VARCHAR (250) NOT NULL,
    [LASTCHANGEDBY]              CHAR (36)     NULL,
    [LASTCHANGEDON]              DATETIME      CONSTRAINT [DF_GISZONEREVIEWITEMMAPPING_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                 INT           CONSTRAINT [DF_GISZONEREVIEWITEMMAPPING_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_GISZONEREVIEWITEMMAPPING] PRIMARY KEY CLUSTERED ([GISZONEREVIEWITEMMAPPINGID] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE NONCLUSTERED INDEX [GISZONEREVIEWITEMMAPPING_IX_QUERY]
    ON [dbo].[GISZONEREVIEWITEMMAPPING]([GISZONEREVIEWITEMMAPPINGID] ASC, [SOURCENAME] ASC);


GO

CREATE TRIGGER [dbo].[TG_GISZONEREVIEWITEMMAPPING_UPDATE] ON [dbo].[GISZONEREVIEWITEMMAPPING]
	AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of GISZONEREVIEWITEMMAPPING table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
			([ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME])
	SELECT			
			[inserted].[GISZONEREVIEWITEMMAPPINGID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Source Name',
			CAST([deleted].[SOURCENAME] AS NVARCHAR(MAX)),
			CAST([inserted].[SOURCENAME] AS NVARCHAR(MAX)),
			'Zone Review Item Mapping (' + [inserted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			2,
			1,
			[inserted].[SOURCENAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[GISZONEREVIEWITEMMAPPINGID] = [inserted].[GISZONEREVIEWITEMMAPPINGID]			
	WHERE	[deleted].[SOURCENAME] <> [inserted].[SOURCENAME]
	UNION ALL

	SELECT			
			[inserted].[GISZONEREVIEWITEMMAPPINGID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'ARC GIS End Point',
			CAST([deleted].[ARCGISURL] AS NVARCHAR(MAX)),
			CAST([inserted].[ARCGISURL] AS NVARCHAR(MAX)),
			'Zone Review Item Mapping (' + [inserted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			2,
			1,
			[inserted].[SOURCENAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[GISZONEREVIEWITEMMAPPINGID] = [inserted].[GISZONEREVIEWITEMMAPPINGID]			
	WHERE	[deleted].[ARCGISURL] <> [inserted].[ARCGISURL]
	UNION ALL

	SELECT			
			[inserted].[GISZONEREVIEWITEMMAPPINGID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'ARC GIS Layer',
			CAST([deleted].[ARCGISLAYERNAME] AS NVARCHAR(MAX)),
			CAST([inserted].[ARCGISLAYERNAME] AS NVARCHAR(MAX)),
			'Zone Review Item Mapping (' + [inserted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			2,
			1,
			[inserted].[SOURCENAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[GISZONEREVIEWITEMMAPPINGID] = [inserted].[GISZONEREVIEWITEMMAPPINGID]			
	WHERE	[deleted].[ARCGISLAYERNAME] <> [inserted].[ARCGISLAYERNAME]
	UNION ALL

	SELECT			
			[inserted].[GISZONEREVIEWITEMMAPPINGID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Field Name',
			CAST([deleted].[ARCGISFIELDNAME] AS NVARCHAR(MAX)),
			CAST([inserted].[ARCGISFIELDNAME] AS NVARCHAR(MAX)),
			'Zone Review Item Mapping (' + [inserted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			2,
			1,
			[inserted].[SOURCENAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[GISZONEREVIEWITEMMAPPINGID] = [inserted].[GISZONEREVIEWITEMMAPPINGID]			
	WHERE	[deleted].[ARCGISFIELDNAME] <> [inserted].[ARCGISFIELDNAME]
END
GO

CREATE TRIGGER [dbo].[TG_GISZONEREVIEWITEMMAPPING_INSERT] ON [dbo].[GISZONEREVIEWITEMMAPPING]
	AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of GISZONEREVIEWITEMMAPPING table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
			([ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME])
	SELECT
			[inserted].[GISZONEREVIEWITEMMAPPINGID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Zone Review Item Mapping Added',
			'',
			'',
			'Zone Review Item Mapping (' + [inserted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			1,
			1,
			[inserted].[SOURCENAME]
	FROM	[inserted]
END
GO

CREATE TRIGGER [dbo].[TG_GISZONEREVIEWITEMMAPPING_DELTE] ON [dbo].[GISZONEREVIEWITEMMAPPING]
	AFTER DELETE
AS
BEGIN
	INSERT INTO [HISTORYSYSTEMSETUP]
			([ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME])
	SELECT
			[deleted].[GISZONEREVIEWITEMMAPPINGID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Zone Review Item Mapping Deleted',
			'',
			'',
			'Zone Review Item Mapping (' + [deleted].[SOURCENAME] + ')',
			'73AA9879-6784-48FA-919B-AB240AADA2B8',
			3,
			1,
			[deleted].[SOURCENAME]
			FROM	[deleted]
END