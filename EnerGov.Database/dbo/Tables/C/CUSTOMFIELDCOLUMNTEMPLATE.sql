CREATE TABLE [dbo].[CUSTOMFIELDCOLUMNTEMPLATE] (
    [CUSTOMFIELDCOLUMNTEMPLATEID]    CHAR (36)      NOT NULL,
    [FKCUSTOMFIELDLAYOUTCONTROLTYPE] INT            NOT NULL,
    [GCUSTOMFIELD]                   CHAR (36)      NOT NULL,
    [SCOLUMNNAME]                    NVARCHAR (50)  NULL,
    [SDESCRIPTION]                   NVARCHAR (50)  NULL,
    [SFIELDTIP]                      NVARCHAR (MAX) NULL,
    [LASTCHANGEDBY]                  CHAR (36)      NULL,
    [LASTCHANGEDON]                  DATETIME       CONSTRAINT [DF_CUSTOMFIELDCOLUMNTEMPLATE_LASTCHANGEDON] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                     INT            CONSTRAINT [DF_CUSTOMFIELDCOLUMNTEMPLATE_ROWVERSION] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_CUSTOMFIELDCOLUMNTEMPLATE] PRIMARY KEY CLUSTERED ([CUSTOMFIELDCOLUMNTEMPLATEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_CFCT_LCT] FOREIGN KEY ([FKCUSTOMFIELDLAYOUTCONTROLTYPE]) REFERENCES [dbo].[CUSTOMFIELDLAYOUTCONTROLTYPE] ([ICUSTOMFIELDLAYOUTCONTROLTYPE]),
    CONSTRAINT [FK_CFTO_CF] FOREIGN KEY ([GCUSTOMFIELD]) REFERENCES [dbo].[CUSTOMFIELD] ([GCUSTOMFIELD])
);


GO

CREATE TRIGGER [TG_CUSTOMFIELDCOLUMNTEMPLATE_INSERT] ON CUSTOMFIELDCOLUMNTEMPLATE
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )

	SELECT
			[inserted].[CUSTOMFIELDCOLUMNTEMPLATEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Custom Field Column Added',
			'',
			'',
			'Custom Field Column (' + ISNULL([inserted].[SCOLUMNNAME], '[none]') + ')',
			'8EEEE4B5-765C-44D1-8EC2-DC996FDA0152',
			1,
			1,
			[inserted].[SCOLUMNNAME]
	FROM	[inserted]	
END
GO

CREATE TRIGGER [TG_CUSTOMFIELDCOLUMNTEMPLATE_UPDATE] ON CUSTOMFIELDCOLUMNTEMPLATE
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END
    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	
	SELECT
			[inserted].[CUSTOMFIELDCOLUMNTEMPLATEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Name',
			ISNULL([deleted].[SCOLUMNNAME], '[none]'),
			ISNULL([inserted].[SCOLUMNNAME], '[none]'),
			'Custom Field Column (' + ISNULL([inserted].[SCOLUMNNAME], '[none]') + ')',
			'8EEEE4B5-765C-44D1-8EC2-DC996FDA0152',
			2,
			1,
			[inserted].[SCOLUMNNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CUSTOMFIELDCOLUMNTEMPLATEID] = [inserted].[CUSTOMFIELDCOLUMNTEMPLATEID]
	WHERE	ISNULL([deleted].[SCOLUMNNAME],'') <> ISNULL([inserted].[SCOLUMNNAME],'')
	UNION ALL
	SELECT
			[inserted].[CUSTOMFIELDCOLUMNTEMPLATEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Description',
			ISNULL([deleted].[SDESCRIPTION], '[none]'),
			ISNULL([inserted].[SDESCRIPTION], '[none]'),
			'Custom Field Column (' + ISNULL([inserted].[SCOLUMNNAME], '[none]') + ')',
			'8EEEE4B5-765C-44D1-8EC2-DC996FDA0152',
			2,
			1,
			[inserted].[SCOLUMNNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CUSTOMFIELDCOLUMNTEMPLATEID] = [inserted].[CUSTOMFIELDCOLUMNTEMPLATEID]
	WHERE	ISNULL([deleted].[SDESCRIPTION],'') <> ISNULL([inserted].[SDESCRIPTION],'')
	UNION ALL
	SELECT
			[inserted].[CUSTOMFIELDCOLUMNTEMPLATEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Field Tip',
			ISNULL([deleted].[SFIELDTIP], '[none]'),
			ISNULL([inserted].[SFIELDTIP], '[none]'),
			'Custom Field Column (' + ISNULL([inserted].[SCOLUMNNAME], '[none]') + ')',
			'8EEEE4B5-765C-44D1-8EC2-DC996FDA0152',
			2,
			1,
			[inserted].[SCOLUMNNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CUSTOMFIELDCOLUMNTEMPLATEID] = [inserted].[CUSTOMFIELDCOLUMNTEMPLATEID]
	WHERE	ISNULL([deleted].[SFIELDTIP],'') <> ISNULL([inserted].[SFIELDTIP],'')
END
GO


CREATE TRIGGER [TG_CUSTOMFIELDCOLUMNTEMPLATE_DELETE] ON CUSTOMFIELDCOLUMNTEMPLATE
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )

	SELECT
			[deleted].[CUSTOMFIELDCOLUMNTEMPLATEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Custom Field Column Deleted',
			'',
			'',
			'Custom Field Column (' + ISNULL([deleted].[SCOLUMNNAME], '[none]') + ')',
			'8EEEE4B5-765C-44D1-8EC2-DC996FDA0152',
			3,
			1,
			[deleted].[SCOLUMNNAME]
	FROM	[deleted]
END