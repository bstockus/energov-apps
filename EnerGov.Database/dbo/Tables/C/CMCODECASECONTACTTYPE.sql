CREATE TABLE [dbo].[CMCODECASECONTACTTYPE] (
    [CMCODECASECONTACTTYPEID] CHAR (36)     NOT NULL,
    [NAME]                    VARCHAR (50)  NOT NULL,
    [DESCRIPTION]             VARCHAR (MAX) NULL,
    [CMCONTACTTYPESYSTEMID]   INT           NULL,
    [LASTCHANGEDBY]           CHAR (36)     NULL,
    [LASTCHANGEDON]           DATETIME      CONSTRAINT [DF_CMCODECASECONTACTTYPE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]              INT           CONSTRAINT [DF_CMCODECASECONTACTTYPE_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_CodeContactType] PRIMARY KEY CLUSTERED ([CMCODECASECONTACTTYPEID] ASC) WITH (FILLFACTOR = 80),
    CONSTRAINT [FK_CMContactTypeSystem] FOREIGN KEY ([CMCONTACTTYPESYSTEMID]) REFERENCES [dbo].[CMCONTACTTYPESYSTEM] ([CMCONTACTTYPESYSTEMID])
);


GO
CREATE NONCLUSTERED INDEX [CMCODECASECONTACTTYPE_IX_QUERY]
    ON [dbo].[CMCODECASECONTACTTYPE]([CMCODECASECONTACTTYPEID] ASC, [NAME] ASC);


GO

CREATE TRIGGER [TG_CMCODECASECONTACTTYPE_UPDATE] ON CMCODECASECONTACTTYPE
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of CMCODECASECONTACTTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END	

    INSERT INTO [HISTORYSYSTEMSETUP]
		(	[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)	
	SELECT
			[inserted].[CMCODECASECONTACTTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Code Case Contact Type Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Code Management Contact Type (' + [inserted].[NAME] + ')',
			'58917D38-56A8-47D9-A083-CFAE2FD6608E',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CMCODECASECONTACTTYPEID] = [inserted].[CMCODECASECONTACTTYPEID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	
	UNION ALL
	SELECT
			[inserted].[CMCODECASECONTACTTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Description',
			ISNULL([deleted].[DESCRIPTION], '[none]'),
			ISNULL([inserted].[DESCRIPTION], '[none]'),
			'Code Management Contact Type (' + [inserted].[NAME] + ')',
			'58917D38-56A8-47D9-A083-CFAE2FD6608E',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CMCODECASECONTACTTYPEID] = [inserted].[CMCODECASECONTACTTYPEID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')

	UNION ALL
	SELECT
			[inserted].[CMCODECASECONTACTTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Contact Type',
			ISNULL([CMCONTACTTYPESYSTEM_DELETED].[NAME], '[none]'),
			ISNULL([CMCONTACTTYPESYSTEM_INSERTED].[NAME], '[none]'),
			'Code Management Contact Type (' + [inserted].[NAME] + ')',
			'58917D38-56A8-47D9-A083-CFAE2FD6608E',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[CMCODECASECONTACTTYPEID] = [inserted].[CMCODECASECONTACTTYPEID]
			LEFT JOIN CMCONTACTTYPESYSTEM CMCONTACTTYPESYSTEM_DELETED WITH (NOLOCK) ON [deleted].[CMCONTACTTYPESYSTEMID] = CMCONTACTTYPESYSTEM_DELETED.[CMCONTACTTYPESYSTEMID]
			LEFT JOIN CMCONTACTTYPESYSTEM CMCONTACTTYPESYSTEM_INSERTED WITH (NOLOCK) ON [inserted].[CMCONTACTTYPESYSTEMID] = CMCONTACTTYPESYSTEM_INSERTED.[CMCONTACTTYPESYSTEMID]
	WHERE	ISNULL([deleted].[CMCONTACTTYPESYSTEMID],'') <> ISNULL([inserted].[CMCONTACTTYPESYSTEMID],'')	
END
GO

CREATE TRIGGER [TG_CMCODECASECONTACTTYPE_INSERT] ON CMCODECASECONTACTTYPE
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of CMCODECASECONTACTTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
		(	[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)
	SELECT
			[inserted].[CMCODECASECONTACTTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Code Management Contact Type Added',
			'',
			'',
			'Code Management Contact Type (' + [inserted].[NAME] + ')',
			'58917D38-56A8-47D9-A083-CFAE2FD6608E',
			1,
			1,
			[inserted].[NAME]
	FROM	[inserted]	
END
GO

CREATE TRIGGER [TG_CMCODECASECONTACTTYPE_DELETE] ON CMCODECASECONTACTTYPE
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
		(	[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)
	SELECT
			[deleted].[CMCODECASECONTACTTYPEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Code Management Contact Type Deleted',
			'',
			'',
			'Code Management Contact Type (' + [deleted].[NAME] + ')',
			'58917D38-56A8-47D9-A083-CFAE2FD6608E',
			3,
			1,
			[deleted].[NAME]
	FROM	[deleted]
END