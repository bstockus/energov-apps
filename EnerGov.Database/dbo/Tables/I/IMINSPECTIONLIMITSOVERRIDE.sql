CREATE TABLE [dbo].[IMINSPECTIONLIMITSOVERRIDE] (
    [IMINSPECTIONLIMITSOVERRIDEID] CHAR (36) NOT NULL,
    [IMINSPECTIONTYPEGROUPID]      CHAR (36) NULL,
    [IMINSPECTIONCATEGORYID]       CHAR (36) NULL,
    [OVERRIDESTARTDATE]            DATETIME  NOT NULL,
    [OVERRIDEENDDATE]              DATETIME  NOT NULL,
    [NEWLIMITVALUE]                INT       DEFAULT ((0)) NOT NULL,
    [LASTCHANGEDBY]                CHAR (36) NULL,
    [LASTCHANGEDON]                DATETIME  CONSTRAINT [DF_IMINSPECTIONLIMITSOVERRIDE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                   INT       CONSTRAINT [DF_IMINSPECTIONLIMITSOVERRIDE_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_IMINSPLIMITSOVERRIDE] PRIMARY KEY CLUSTERED ([IMINSPECTIONLIMITSOVERRIDEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_INSPLIMITSOVER_CATEGORY] FOREIGN KEY ([IMINSPECTIONCATEGORYID]) REFERENCES [dbo].[IMINSPECTIONCATEGORY] ([IMINSPECTIONCATEGORYID]),
    CONSTRAINT [FK_INSPLIMITSOVER_TYPEGRP] FOREIGN KEY ([IMINSPECTIONTYPEGROUPID]) REFERENCES [dbo].[IMINSPECTIONTYPEGROUP] ([IMINSPECTIONTYPEGROUPID])
);


GO
CREATE NONCLUSTERED INDEX [IMINSPECTIONLIMITSOVERRIDE_IX_QUERY]
    ON [dbo].[IMINSPECTIONLIMITSOVERRIDE]([IMINSPECTIONLIMITSOVERRIDEID] ASC, [IMINSPECTIONTYPEGROUPID] ASC, [IMINSPECTIONCATEGORYID] ASC);


GO

CREATE TRIGGER [TG_IMINSPECTIONLIMITSOVERRIDE_UPDATE] ON [IMINSPECTIONLIMITSOVERRIDE]
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IMINSPECTIONLIMITSOVERRIDE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Inspection Type Group',
			ISNULL([IMINSPECTIONTYPEGROUP_DELETED].[NAME],'[none]'),
			ISNULL([IMINSPECTIONTYPEGROUP_INSERTED].[NAME],'[none]'),
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			2,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IMINSPECTIONLIMITSOVERRIDEID] = [inserted].[IMINSPECTIONLIMITSOVERRIDEID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID]= [inserted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID]= [inserted].[IMINSPECTIONTYPEGROUPID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_DELETED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_DELETED].[IMINSPECTIONTYPEGROUPID]= [deleted].[IMINSPECTIONTYPEGROUPID]
	WHERE	ISNULL([deleted].[IMINSPECTIONTYPEGROUPID], '') <> ISNULL([inserted].[IMINSPECTIONTYPEGROUPID], '')
	UNION ALL
	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Inspection Category',
			ISNULL([IMINSPECTIONCATEGORY_DELETED].[NAME],'[none]'),
			ISNULL([IMINSPECTIONCATEGORY_INSERTED].[NAME],'[none]'),
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			2,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IMINSPECTIONLIMITSOVERRIDEID] = [inserted].[IMINSPECTIONLIMITSOVERRIDEID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID]= [inserted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_DELETED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_DELETED].[IMINSPECTIONCATEGORYID]= [deleted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID]= [inserted].[IMINSPECTIONTYPEGROUPID]
	WHERE	ISNULL([deleted].[IMINSPECTIONCATEGORYID], '') <> ISNULL([inserted].[IMINSPECTIONCATEGORYID], '')
	UNION ALL
	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Start Date',
			CONVERT(NVARCHAR(MAX), [deleted].[OVERRIDESTARTDATE], 101),
			CONVERT(NVARCHAR(MAX), [inserted].[OVERRIDESTARTDATE], 101),
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			2,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IMINSPECTIONLIMITSOVERRIDEID] = [inserted].[IMINSPECTIONLIMITSOVERRIDEID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID]= [inserted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP]  IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID]= [inserted].[IMINSPECTIONTYPEGROUPID]
	WHERE	[deleted].[OVERRIDESTARTDATE] <> [inserted].[OVERRIDESTARTDATE]
	UNION ALL
	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'End Date',
			CONVERT(NVARCHAR(MAX), [deleted].[OVERRIDEENDDATE], 101),
			CONVERT(NVARCHAR(MAX), [inserted].[OVERRIDEENDDATE], 101),
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			2,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IMINSPECTIONLIMITSOVERRIDEID] = [inserted].[IMINSPECTIONLIMITSOVERRIDEID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED  WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID]= [inserted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID]= [inserted].[IMINSPECTIONTYPEGROUPID]
	WHERE	[deleted].[OVERRIDEENDDATE] <> [inserted].[OVERRIDEENDDATE]	
	UNION ALL
	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'New Limit Value',
			CONVERT(NVARCHAR(MAX),[deleted].[NEWLIMITVALUE]),
			CONVERT(NVARCHAR(MAX),[inserted].[NEWLIMITVALUE]),
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			2,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IMINSPECTIONLIMITSOVERRIDEID] = [inserted].[IMINSPECTIONLIMITSOVERRIDEID]
			LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID]= [inserted].[IMINSPECTIONCATEGORYID]
			LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID]= [inserted].[IMINSPECTIONTYPEGROUPID]
	WHERE	[deleted].[NEWLIMITVALUE] <> [inserted].[NEWLIMITVALUE]	
END
GO

CREATE TRIGGER [TG_IMINSPECTIONLIMITSOVERRIDE_INSERT] ON [IMINSPECTIONLIMITSOVERRIDE]
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IMINSPECTIONLIMITSOVERRIDE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )

	SELECT
			[inserted].[IMINSPECTIONLIMITSOVERRIDEID],
			[inserted].[ROWVERSION],			
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Inspection Limits Override Added',
			'',
			'',
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			1,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[inserted]	
	LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID] = [inserted].[IMINSPECTIONCATEGORYID]
	LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID] = [inserted].[IMINSPECTIONTYPEGROUPID]
	
END
GO
CREATE TRIGGER [TG_IMINSPECTIONLIMITSOVERRIDE_DELETE] ON [IMINSPECTIONLIMITSOVERRIDE]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )

	SELECT
			[deleted].[IMINSPECTIONLIMITSOVERRIDEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Inspection Limits Override Deleted',
			'',
			'',
			'Inspection Limits Override ' + COALESCE('Inspection Category (' + [IMINSPECTIONCATEGORY_INSERTED].[NAME], 'Inspection Type Group (' + [IMINSPECTIONTYPEGROUP_INSERTED].[NAME], '') + ')',
			'ECC1E5C7-DA25-413D-93C2-DE11C2078147',
			3,
			1,
			COALESCE( [IMINSPECTIONCATEGORY_INSERTED].[NAME], [IMINSPECTIONTYPEGROUP_INSERTED].[NAME])
	FROM	[deleted]
	LEFT JOIN [IMINSPECTIONCATEGORY] IMINSPECTIONCATEGORY_INSERTED WITH (NOLOCK) ON [IMINSPECTIONCATEGORY_INSERTED].[IMINSPECTIONCATEGORYID] = [deleted].[IMINSPECTIONCATEGORYID]
	LEFT JOIN [IMINSPECTIONTYPEGROUP] IMINSPECTIONTYPEGROUP_INSERTED WITH (NOLOCK) ON [IMINSPECTIONTYPEGROUP_INSERTED].[IMINSPECTIONTYPEGROUPID] = [deleted].[IMINSPECTIONTYPEGROUPID]
	
END