CREATE TABLE [dbo].[ILMAPPEDVALUEGROUP] (
    [MAPPEDVALUEGROUPID] CHAR (36)    NOT NULL,
    [MAPPEDVALUE]        VARCHAR (50) NULL,
    [ILLICENSEGROUPID]   CHAR (36)    NULL,
    [LASTCHANGEDBY]      CHAR (36)    NULL,
    [LASTCHANGEDON]      DATETIME     CONSTRAINT [DF_ILMAPPEDVALUEGROUP_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]         INT          CONSTRAINT [DF_ILMAPPEDVALUEGROUP_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_ILMappedValueGroup] PRIMARY KEY CLUSTERED ([MAPPEDVALUEGROUPID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_MappedValue_Group] FOREIGN KEY ([ILLICENSEGROUPID]) REFERENCES [dbo].[ILLICENSEGROUP] ([ILLICENSEGROUPID])
);


GO
CREATE TRIGGER [TG_ILMAPPEDVALUEGROUP_INSERT] ON [dbo].[ILMAPPEDVALUEGROUP]
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON;	
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of ILMAPPEDVALUEGROUP table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT
			[inserted].[MAPPEDVALUEGROUPID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Mapping Group Added',
			'',
			'',
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]'),
			'6115EBA3-71FF-4CEA-AB43-759135A83E0F',
			1,
			0,
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]')
	FROM	[inserted]
	LEFT JOIN [dbo].[ILLICENSEGROUP] ON [dbo].[ILLICENSEGROUP].[ILLICENSEGROUPID] = [inserted].[ILLICENSEGROUPID]
END
GO
CREATE TRIGGER [TG_ILMAPPEDVALUEGROUP_UPDATE] ON [dbo].[ILMAPPEDVALUEGROUP]
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of ILMAPPEDVALUEGROUP table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT
			[inserted].[MAPPEDVALUEGROUPID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Group Name',
			ISNULL([deleted_ILLICENSEGROUP].[NAME],'[none]'),
			ISNULL([inserted_ILLICENSEGROUP].[NAME],'[none]'),
			ISNULL([inserted_ILLICENSEGROUP].[NAME],'[none]'),
			'6115EBA3-71FF-4CEA-AB43-759135A83E0F',
			2,
			0,
			ISNULL([inserted_ILLICENSEGROUP].[NAME],'[none]')
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[MAPPEDVALUEGROUPID] = [inserted].[MAPPEDVALUEGROUPID]
			LEFT JOIN [dbo].[ILLICENSEGROUP] [deleted_ILLICENSEGROUP] ON [deleted_ILLICENSEGROUP].[ILLICENSEGROUPID] = [deleted].[ILLICENSEGROUPID]
			LEFT JOIN [dbo].[ILLICENSEGROUP] [inserted_ILLICENSEGROUP] ON [inserted_ILLICENSEGROUP].[ILLICENSEGROUPID] = [inserted].[ILLICENSEGROUPID]
	WHERE	ISNULL([deleted_ILLICENSEGROUP].[ILLICENSEGROUPID],'') <> ISNULL([inserted_ILLICENSEGROUP].[ILLICENSEGROUPID],'')
	UNION ALL

	SELECT
			[inserted].[MAPPEDVALUEGROUPID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Mapped Group Value',
			ISNULL([deleted].[MAPPEDVALUE],'[none]'),
			ISNULL([inserted].[MAPPEDVALUE],'[none]'),
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]'),
			'6115EBA3-71FF-4CEA-AB43-759135A83E0F',
			2,
			0,
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]')
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[MAPPEDVALUEGROUPID] = [inserted].[MAPPEDVALUEGROUPID]
			LEFT JOIN [dbo].[ILLICENSEGROUP] ON [dbo].[ILLICENSEGROUP].[ILLICENSEGROUPID] = [inserted].[ILLICENSEGROUPID]
	WHERE	ISNULL([deleted].[MAPPEDVALUE],'') <> ISNULL([inserted].[MAPPEDVALUE],'')	
END
GO
CREATE TRIGGER [TG_ILMAPPEDVALUEGROUP_DELETE] ON [dbo].[ILMAPPEDVALUEGROUP]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;
	
    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )	
	SELECT
			[deleted].[MAPPEDVALUEGROUPID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Mapping Group Deleted',
			'',
			'',
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]'),
			'6115EBA3-71FF-4CEA-AB43-759135A83E0F',
			3,
			0,
			ISNULL([dbo].[ILLICENSEGROUP].[NAME],'[none]')
	FROM	[deleted]
	LEFT JOIN [dbo].[ILLICENSEGROUP] ON [dbo].[ILLICENSEGROUP].[ILLICENSEGROUPID] = [deleted].[ILLICENSEGROUPID]
END