CREATE TABLE [dbo].[IPCONDITIONTYPE] (
    [IPCONDITIONTYPEID]     CHAR (36)      NOT NULL,
    [NAME]                  NVARCHAR (100) NOT NULL,
    [DESCRIPTION]           NVARCHAR (MAX) NULL,
    [DEFAULTSTATUSID]       CHAR (36)      NULL,
    [IPCONDITIONCATEGORYID] CHAR (36)      NOT NULL,
    [CAFEETEMPLATEID]       CHAR (36)      NULL,
    [LASTCHANGEDBY]         CHAR (36)      NULL,
    [LASTCHANGEDON]         DATETIME       CONSTRAINT [DF_IPCONDITIONTYPE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]            INT            CONSTRAINT [DF_IPCONDITIONTYPE_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_IPCONDITIONTYPE] PRIMARY KEY CLUSTERED ([IPCONDITIONTYPEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_IPCONDITIONTYPE_IPCATEGORY] FOREIGN KEY ([IPCONDITIONCATEGORYID]) REFERENCES [dbo].[IPCONDITIONCATEGORY] ([IPCONDITIONCATEGORYID]),
    CONSTRAINT [FK_IPCONDITIONTYPE_IPSTATUS] FOREIGN KEY ([DEFAULTSTATUSID]) REFERENCES [dbo].[IPCONDITIONSTATUS] ([IPCONDITIONSTATUSID]),
    CONSTRAINT [FK_IPCONDTYPE_FEETEMPLATE] FOREIGN KEY ([CAFEETEMPLATEID]) REFERENCES [dbo].[CAFEETEMPLATE] ([CAFEETEMPLATEID])
);


GO
CREATE NONCLUSTERED INDEX [IPCONDITIONTYPE_IX_QUERY]
    ON [dbo].[IPCONDITIONTYPE]([IPCONDITIONTYPEID] ASC, [NAME] ASC);


GO


CREATE TRIGGER [dbo].[TG_IPCONDITIONTYPE_INSERT] ON [dbo].[IPCONDITIONTYPE]
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IPCONDITIONTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
		(
			[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)
	SELECT 
			[inserted].[IPCONDITIONTYPEID], 
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Impact Condition Type Added',
			'',
			'',
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			1,
			1,
			[inserted].[NAME]
    FROM	[inserted] 
END
GO


CREATE TRIGGER [dbo].[TG_IPCONDITIONTYPE_UPDATE] ON  [dbo].[IPCONDITIONTYPE]
	AFTER UPDATE
AS 
BEGIN	
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IPCONDITIONTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
		(	[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)
	SELECT 
			[inserted].[IPCONDITIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IPCONDITIONTYPEID] = [inserted].[IPCONDITIONTYPEID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	UNION ALL
	SELECT 
			[inserted].[IPCONDITIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Description',			
			ISNULL([deleted].[DESCRIPTION],'[none]'),
			ISNULL([inserted].[DESCRIPTION],'[none]'),
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IPCONDITIONTYPEID] = [inserted].[IPCONDITIONTYPEID]	
	WHERE	ISNULL([deleted].[DESCRIPTION],'') <> ISNULL([inserted].[DESCRIPTION], '')
	UNION ALL
	SELECT
			[inserted].[IPCONDITIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Default Status',			
			ISNULL([IPCONDITIONSTATUS_DELETED].[NAME],'[none]'),
			ISNULL([IPCONDITIONSTATUS_INSERTED].[NAME],'[none]'),
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IPCONDITIONTYPEID] = [inserted].[IPCONDITIONTYPEID]
			LEFT JOIN IPCONDITIONSTATUS IPCONDITIONSTATUS_DELETED WITH (NOLOCK) ON [deleted].[DEFAULTSTATUSID] = [IPCONDITIONSTATUS_DELETED].[IPCONDITIONSTATUSID]
			LEFT JOIN IPCONDITIONSTATUS IPCONDITIONSTATUS_INSERTED WITH (NOLOCK) ON [inserted].[DEFAULTSTATUSID] = [IPCONDITIONSTATUS_INSERTED].[IPCONDITIONSTATUSID]	
	WHERE	ISNULL([deleted].[DEFAULTSTATUSID],'') <> ISNULL([inserted].[DEFAULTSTATUSID],'')
	UNION ALL
	SELECT
			[inserted].[IPCONDITIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Condition Category',			
			[IPCONDITIONCATEGORY_DELETED].[NAME],
			[IPCONDITIONCATEGORY_INSERTED].[NAME],
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IPCONDITIONTYPEID] = [inserted].[IPCONDITIONTYPEID]
			JOIN IPCONDITIONCATEGORY IPCONDITIONCATEGORY_DELETED WITH (NOLOCK) ON [deleted].[IPCONDITIONCATEGORYID] = [IPCONDITIONCATEGORY_DELETED].[IPCONDITIONCATEGORYID]
			JOIN IPCONDITIONCATEGORY IPCONDITIONCATEGORY_INSERTED WITH (NOLOCK) ON [inserted].[IPCONDITIONCATEGORYID] = [IPCONDITIONCATEGORY_INSERTED].[IPCONDITIONCATEGORYID]	
	WHERE	[deleted].[IPCONDITIONCATEGORYID] <> [inserted].[IPCONDITIONCATEGORYID]
	UNION ALL
	SELECT
			[inserted].[IPCONDITIONTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Fee Template',			
			ISNULL([CAFEETEMPLATE_DELETED].[CAFEETEMPLATENAME],'[none]'),
			ISNULL([CAFEETEMPLATE_INSERTED].[CAFEETEMPLATENAME],'[none]'),
			'Impact Condition Type (' + [inserted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[IPCONDITIONTYPEID] = [inserted].[IPCONDITIONTYPEID]
			LEFT JOIN CAFEETEMPLATE CAFEETEMPLATE_DELETED WITH (NOLOCK) ON [deleted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_DELETED].[CAFEETEMPLATEID]
			LEFT JOIN CAFEETEMPLATE CAFEETEMPLATE_INSERTED WITH (NOLOCK) ON [inserted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_INSERTED].[CAFEETEMPLATEID]	
	WHERE	ISNULL([deleted].[CAFEETEMPLATEID],'') <> ISNULL([inserted].[CAFEETEMPLATEID],'')
END
GO


CREATE TRIGGER [dbo].[TG_IPCONDITIONTYPE_DELETE] ON  [dbo].[IPCONDITIONTYPE]
	AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [HISTORYSYSTEMSETUP]
		(	[ID],
			[ROWVERSION],
			[CHANGEDON],
			[CHANGEDBY],
			[FIELDNAME],
			[OLDVALUE],
			[NEWVALUE],
			[ADDITIONALINFO],
			[FORMID],
			[ACTION],
			[ISROOT],
			[RECORDNAME]
		)
	SELECT
			[deleted].[IPCONDITIONTYPEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Impact Condition Type Deleted',
			'',
			'',
			'Impact Condition Type (' + [deleted].[NAME] + ')',
			'645A8EB7-98FA-4756-9F1B-8583F3612CEE',
			3,
			1,
			[deleted].[NAME]
	FROM	[deleted]
END