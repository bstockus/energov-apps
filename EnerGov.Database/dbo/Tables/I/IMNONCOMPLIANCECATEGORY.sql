CREATE TABLE [dbo].[IMNONCOMPLIANCECATEGORY] (
    [IMNONCOMPLIANCECATEGORYID] CHAR (36)       NOT NULL,
    [NAME]                      NVARCHAR (50)   NOT NULL,
    [DESCRIPTION]               NVARCHAR (2000) NULL,
    [LASTCHANGEDBY]             CHAR (36)       NULL,
    [LASTCHANGEDON]             DATETIME        CONSTRAINT [DF_IMNONCOMPLIANCECATEGORY_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                INT             CONSTRAINT [DF_IMNONCOMPLIANCECATEGORY_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_IMNONCOMPLIANCECATEGORY] PRIMARY KEY CLUSTERED ([IMNONCOMPLIANCECATEGORYID] ASC) WITH (FILLFACTOR = 90)
);


GO
CREATE NONCLUSTERED INDEX [IMNONCOMPLIANCECATEGORY_IX_QUERY]
    ON [dbo].[IMNONCOMPLIANCECATEGORY]([IMNONCOMPLIANCECATEGORYID] ASC, [NAME] ASC);


GO


CREATE TRIGGER [dbo].[TG_IMNONCOMPLIANCECATEGORY_DELETE] ON [dbo].[IMNONCOMPLIANCECATEGORY]
	AFTER DELETE
AS
BEGIN
	SET NOCOUNT ON;

	INSERT INTO [HISTORYSYSTEMSETUP]
	(
		[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
	)
	SELECT
		[deleted].[IMNONCOMPLIANCECATEGORYID],
		[deleted].[ROWVERSION],
		GETUTCDATE(),
		(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
		'Inspection Noncompliance Category Deleted',
		'',
		'',
		'Inspection Noncompliance Category (' + [deleted].[NAME] + ')',
		'D83202CE-D1BF-4F39-BAB0-0DEC6C4F6296',
		3,
		1,
		[deleted].[NAME]
	FROM [deleted]

END
GO


CREATE TRIGGER [dbo].[TG_IMNONCOMPLIANCECATEGORY_INSERT] ON [dbo].[IMNONCOMPLIANCECATEGORY]
	AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IMNONCOMPLIANCECATEGORY table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
	(
		[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
	)
	SELECT
		[inserted].[IMNONCOMPLIANCECATEGORYID],
		[inserted].[ROWVERSION],
		GETUTCDATE(),
		[inserted].[LASTCHANGEDBY],
		'Inspection Noncompliance Category Added',
		'',
		'',
		'Inspection Noncompliance Category (' + [inserted].[NAME] + ')',
		'D83202CE-D1BF-4F39-BAB0-0DEC6C4F6296',
		1,
		1,
		[inserted].[NAME]
	FROM [inserted]

END
GO


CREATE TRIGGER [dbo].[TG_IMNONCOMPLIANCECATEGORY_UPDATE] ON [dbo].[IMNONCOMPLIANCECATEGORY]
	AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON;

	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of IMNONCOMPLIANCECATEGORY table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

	INSERT INTO [HISTORYSYSTEMSETUP]
	(
		[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
	)
	SELECT
			[inserted].[IMNONCOMPLIANCECATEGORYID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Inspection Noncompliance Category (' + [inserted].[NAME] + ')',
			'D83202CE-D1BF-4F39-BAB0-0DEC6C4F6296',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted] JOIN [inserted]
	ON		[deleted].[IMNONCOMPLIANCECATEGORYID] = [inserted].[IMNONCOMPLIANCECATEGORYID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	UNION ALL
	SELECT
			[inserted].[IMNONCOMPLIANCECATEGORYID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Description',
			ISNULL([deleted].[DESCRIPTION], '[none]'),
			ISNULL([inserted].[DESCRIPTION], '[none]'),
			'Inspection Noncompliance Category (' + [inserted].[NAME] + ')',
			'D83202CE-D1BF-4F39-BAB0-0DEC6C4F6296',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted] JOIN [inserted]
	ON		[deleted].[IMNONCOMPLIANCECATEGORYID] = [inserted].[IMNONCOMPLIANCECATEGORYID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')
END