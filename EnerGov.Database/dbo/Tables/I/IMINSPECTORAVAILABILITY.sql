CREATE TABLE [dbo].[IMINSPECTORAVAILABILITY] (
    [IMINSPECTORAVAILABILITYID] CHAR (36) NOT NULL,
    [USERID]                    CHAR (36) NOT NULL,
    [STARTDATE]                 DATETIME  NULL,
    [ENDDATE]                   DATETIME  NULL,
    [DELEGATEINSPECTOR]         CHAR (36) NULL,
    CONSTRAINT [PK_IMINSPECTORAVAILABILITY] PRIMARY KEY CLUSTERED ([IMINSPECTORAVAILABILITYID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_IMINSPAVAIL_DELEG] FOREIGN KEY ([DELEGATEINSPECTOR]) REFERENCES [dbo].[USERS] ([SUSERGUID]),
    CONSTRAINT [FK_IMINSPECTORAVAILABILITY_USERS] FOREIGN KEY ([USERID]) REFERENCES [dbo].[USERS] ([SUSERGUID])
);


GO

CREATE TRIGGER TRG_IMINSPECTORAVAILABILITY_INSERT_RESOURCE
ON IMINSPECTORAVAILABILITY
AFTER INSERT  
AS
	BEGIN 
	 IF TRIGGER_NESTLEVEL() > 1
     RETURN
		INSERT INTO [RESOURCE] (RESOURCEID, USERID, UNAVAILABLESTARTDATE, UNAVAILABLEENDDATE, REASON, DELEGATEUSERID)
		SELECT NEWID(), I.USERID, I.STARTDATE, I.ENDDATE,'', I.DELEGATEINSPECTOR
		FROM INSERTED I
	END
GO

CREATE TRIGGER TRG_IMINSPECTORAVAILABILITY_DELETE_RESOURCE
ON IMINSPECTORAVAILABILITY
AFTER DELETE
AS

	BEGIN 
	 IF TRIGGER_NESTLEVEL() > 1
     RETURN
		DELETE R FROM [RESOURCE] R
		INNER JOIN DELETED D ON R.USERID = D.USERID AND R.UNAVAILABLESTARTDATE = D.STARTDATE AND R.UNAVAILABLEENDDATE = D.ENDDATE
	END
GO

CREATE TRIGGER TRG_IMINSPECTORAVAILABILITY_UPDATE_RESOURCE
ON IMINSPECTORAVAILABILITY
AFTER UPDATE  
AS

	BEGIN 
	 IF TRIGGER_NESTLEVEL() > 1
     RETURN;
		WITH UPDATES AS 
		(SELECT I.STARTDATE, I.ENDDATE, I.USERID, D.STARTDATE OLDSTARTDATE, D.ENDDATE OLDENDDATE, I.DELEGATEINSPECTOR
		FROM INSERTED I
		INNER JOIN DELETED D ON I.IMINSPECTORAVAILABILITYID = D.IMINSPECTORAVAILABILITYID
		)

		UPDATE [RESOURCE]
		SET    
			[RESOURCE].UNAVAILABLESTARTDATE = U.STARTDATE,
			[RESOURCE].UNAVAILABLEENDDATE = U.ENDDATE,			
			[RESOURCE].DELEGATEUSERID = U.DELEGATEINSPECTOR
		FROM [RESOURCE] R
		INNER JOIN UPDATES U ON R.USERID = U.USERID AND R.UNAVAILABLESTARTDATE = U.OLDSTARTDATE AND R.UNAVAILABLEENDDATE = U.OLDENDDATE
	END