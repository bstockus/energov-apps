CREATE TABLE [dbo].[WORKFLOWACTION] (
    [WORKFLOWACTIONID]     CHAR (36)      NOT NULL,
    [WORKFLOWID]           CHAR (36)      NOT NULL,
    [WORKFLOWACTIONTYPEID] INT            NOT NULL,
    [ACTIONNAME]           NVARCHAR (50)  NOT NULL,
    [CUSTOMMESSAGE]        NVARCHAR (MAX) NOT NULL,
    [ACTIONCLASSNAME]      NVARCHAR (MAX) NOT NULL,
    [RUNONLYWHENDIRTY]     BIT            NOT NULL,
    [DISABLEQUEUING]       BIT            CONSTRAINT [DF_WorkflowAction_DisableQueuing] DEFAULT ((0)) NOT NULL,
    [POSTWORKFLOW]         BIT            DEFAULT ((0)) NOT NULL,
    CONSTRAINT [PK_WorkflowAction] PRIMARY KEY CLUSTERED ([WORKFLOWACTIONID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_WFAction_WFActionType] FOREIGN KEY ([WORKFLOWACTIONTYPEID]) REFERENCES [dbo].[WORKFLOWACTIONTYPE] ([WORKFLOWACTIONTYPEID]),
    CONSTRAINT [FK_WorkflowAction_Workflow] FOREIGN KEY ([WORKFLOWID]) REFERENCES [dbo].[WORKFLOW] ([WORKFLOWID])
);


GO
CREATE NONCLUSTERED INDEX [WorkflowAction_WorkflowID]
    ON [dbo].[WORKFLOWACTION]([WORKFLOWID] ASC) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [WORKFLOWACTION_WORKFLOWACTIONTYPEID]
    ON [dbo].[WORKFLOWACTION]([WORKFLOWACTIONTYPEID] ASC);


GO

CREATE TRIGGER [dbo].[TG_WORKFLOWACTION_DELETE]  
   ON  [dbo].[WORKFLOWACTION] 
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [HISTORYSYSTEMSETUP]
	(
		[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
	)
	SELECT
        [WORKFLOW].[WORKFLOWID], 
        [WORKFLOW].[ROWVERSION],
		GETUTCDATE(),			
		(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
		'Intelligent Object Action Deleted',
        '',
        '',       
		'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [deleted].[ACTIONNAME] +')',
		'F053A756-19BE-4A42-A70D-185D5B01C31A',
		3,
		0,
		[deleted].[ACTIONNAME]
    FROM [deleted]
	INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [deleted].[WORKFLOWID]
END
GO

CREATE TRIGGER [dbo].[TG_WORKFLOWACTION_UPDATE]
   ON  [dbo].[WORKFLOWACTION]
   AFTER UPDATE
AS 
BEGIN	
	SET NOCOUNT ON;
	INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )	
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Action Name',
			[deleted].[ACTIONNAME],
			[inserted].[ACTIONNAME],
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[ACTIONNAME] <> [inserted].[ACTIONNAME]

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			CASE WHEN [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = 5 THEN 'Stored Procedure Name' ELSE 'Custom Message' END,
			[deleted].[CUSTOMMESSAGE],
			[inserted].[CUSTOMMESSAGE],
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[CUSTOMMESSAGE] <> [inserted].[CUSTOMMESSAGE] AND [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] <> 8

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Geo Rule',
			ISNULL(DELETEGEORULE.[RULENAME],'[None]'),
			ISNULL(INSERTGEORULE.[RULENAME],'[None]'),
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
			LEFT JOIN [GEORULE] AS DELETEGEORULE WITH (NOLOCK) ON DELETEGEORULE.[GEORULEID] = [deleted].[CUSTOMMESSAGE]
			LEFT JOIN [GEORULE] AS INSERTGEORULE WITH (NOLOCK) ON INSERTGEORULE.[GEORULEID] = [inserted].[CUSTOMMESSAGE]
	WHERE	[deleted].[CUSTOMMESSAGE] <> [inserted].[CUSTOMMESSAGE] AND [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = 8

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Action Class Name',
			[deleted].[ACTIONCLASSNAME],
			[inserted].[ACTIONCLASSNAME],
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[ACTIONCLASSNAME] <> [inserted].[ACTIONCLASSNAME]

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Run Only When Changed Flag',
			CASE [deleted].[RUNONLYWHENDIRTY]  WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[RUNONLYWHENDIRTY] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[RUNONLYWHENDIRTY] <> [inserted].[RUNONLYWHENDIRTY]

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Disable Client-Side Queuing Flag',
			CASE [deleted].[DISABLEQUEUING]  WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[DISABLEQUEUING] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[DISABLEQUEUING] <> [inserted].[DISABLEQUEUING]

	UNION ALL
	SELECT
			[WORKFLOW].[WORKFLOWID], 
			[WORKFLOW].[ROWVERSION],
			GETUTCDATE(),
			[WORKFLOW].[LASTCHANGEDBY],
			'Run After Save Flag',
			CASE [deleted].[POSTWORKFLOW]  WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[POSTWORKFLOW] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +'), Action Type (' + [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPENAME] + ')',
			'F053A756-19BE-4A42-A70D-185D5B01C31A',
			2,
			0,
			[inserted].[ACTIONNAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[WORKFLOWACTIONID] = [inserted].[WORKFLOWACTIONID]
			INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
			INNER JOIN [WORKFLOWACTIONTYPE] WITH (NOLOCK) ON [WORKFLOWACTIONTYPE].[WORKFLOWACTIONTYPEID] = [inserted].[WORKFLOWACTIONTYPEID]
	WHERE	[deleted].[POSTWORKFLOW] <> [inserted].[POSTWORKFLOW]
END
GO

CREATE TRIGGER [dbo].[TG_WORKFLOWACTION_INSERT]
   ON  [dbo].[WORKFLOWACTION]
   AFTER INSERT
AS 
BEGIN	
	SET NOCOUNT ON;	
	INSERT INTO [HISTORYSYSTEMSETUP]
    (
        [ID],
        [ROWVERSION],
        [CHANGEDON],
        [CHANGEDBY],
        [FIELDNAME],
        [OLDVALUE],
        [NEWVALUE],
        [ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT 
        [WORKFLOW].[WORKFLOWID], 
        [WORKFLOW].[ROWVERSION],
        GETUTCDATE(),
        [WORKFLOW].[LASTCHANGEDBY],	
        'Intelligent Object Action Added',
        '',
        '',       
		'Intelligent Object (' + [WORKFLOW].[WORKFLOWNAME] + '), Action (' + [inserted].[ACTIONNAME] +')',
		'F053A756-19BE-4A42-A70D-185D5B01C31A',
		1,
		0,
		[inserted].[ACTIONNAME]
    FROM [inserted]
	INNER JOIN [WORKFLOW] ON [WORKFLOW].[WORKFLOWID] = [inserted].[WORKFLOWID]
END