CREATE TABLE [dbo].[BLEXTCOMPANYTYPE] (
    [BLEXTCOMPANYTYPEID]        CHAR (36)      NOT NULL,
    [NAME]                      NVARCHAR (50)  NOT NULL,
    [DESCRIPTION]               NVARCHAR (MAX) NULL,
    [BLEINFORMATID]             INT            NULL,
    [CUSTOMFIELDLAYOUTID]       CHAR (36)      NULL,
    [CANAPPLYONLINE]            BIT            DEFAULT ((0)) NOT NULL,
    [DEFAULTWEBAPPLYSTATUSID]   CHAR (36)      NULL,
    [ONLINECUSTOMFIELDLAYOUTID] CHAR (36)      NULL,
    [MANAGEBUSINESSTYPECODES]   BIT            DEFAULT ((0)) NOT NULL,
    [REQUIREBUSINESSTYPECODES]  BIT            DEFAULT ((0)) NOT NULL,
    [CAPADDRESSREQUIRED]        BIT            DEFAULT ((0)) NOT NULL,
    [LASTCHANGEDBY]             CHAR (36)      NULL,
    [LASTCHANGEDON]             DATETIME       CONSTRAINT [DF_BLEXTCOMPANYTYPE_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]                INT            CONSTRAINT [DF_BLEXTCOMPANYTYPE_RowVersion] DEFAULT ((1)) NOT NULL,
    [CAFEETEMPLATEID]           CHAR (36)      NULL,
    [BLEXTCOMPANYTYPEMODULEID]  INT            NULL,
    CONSTRAINT [PK_BLExtCompanyType] PRIMARY KEY CLUSTERED ([BLEXTCOMPANYTYPEID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_BLEXTCMPNYTYP_DFLTWEBAPPSTA] FOREIGN KEY ([DEFAULTWEBAPPLYSTATUSID]) REFERENCES [dbo].[BLEXTSTATUS] ([BLEXTSTATUSID]),
    CONSTRAINT [FK_BLEXTCMPNYTYP_ONLCUSTOM] FOREIGN KEY ([ONLINECUSTOMFIELDLAYOUTID]) REFERENCES [dbo].[CUSTOMFIELDLAYOUT] ([GCUSTOMFIELDLAYOUTS]),
    CONSTRAINT [FK_BLExtCompanyType_EIN] FOREIGN KEY ([BLEINFORMATID]) REFERENCES [dbo].[BLEINFORMAT] ([BLEINFORMATID]),
    CONSTRAINT [FK_BLExtCompType_BLExtensionCompanyTypeModule] FOREIGN KEY ([BLEXTCOMPANYTYPEMODULEID]) REFERENCES [dbo].[BLEXTCOMPANYTYPEMODULE] ([BLEXTCOMPANYTYPEMODULEID]),
    CONSTRAINT [FK_BLExtCompType_CAFeeTemplate] FOREIGN KEY ([CAFEETEMPLATEID]) REFERENCES [dbo].[CAFEETEMPLATE] ([CAFEETEMPLATEID]),
    CONSTRAINT [FK_BLExtCompType_Custom] FOREIGN KEY ([CUSTOMFIELDLAYOUTID]) REFERENCES [dbo].[CUSTOMFIELDLAYOUT] ([GCUSTOMFIELDLAYOUTS])
);


GO
CREATE NONCLUSTERED INDEX [BLEXTCOMPANYTYPE_IX_QUERY]
    ON [dbo].[BLEXTCOMPANYTYPE]([BLEXTCOMPANYTYPEID] ASC, [NAME] ASC);


GO
CREATE NONCLUSTERED INDEX [IX_BLEXTCOMPANYTYPE_CAFEETEMPLATEID]
    ON [dbo].[BLEXTCOMPANYTYPE]([CAFEETEMPLATEID] ASC);


GO

CREATE TRIGGER [dbo].[TG_BLEXTCOMPANYTYPE_UPDATE] ON [dbo].[BLEXTCOMPANYTYPE] 
	AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of BLEXTCOMPANYTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END	

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )
	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Description',
			ISNULL([deleted].[DESCRIPTION],'[none]'),
			ISNULL([inserted].[DESCRIPTION],'[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type TIN Format',
			ISNULL([BLEINFORMAT_DELETED].[NAME],'[none]'),
			ISNULL([BLEINFORMAT_INSERTED].[NAME],'[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN [BLEINFORMAT] BLEINFORMAT_INSERTED WITH (NOLOCK) ON [BLEINFORMAT_INSERTED].[BLEINFORMATID] = [inserted].[BLEINFORMATID]
			LEFT JOIN [BLEINFORMAT] BLEINFORMAT_DELETED WITH (NOLOCK) ON [BLEINFORMAT_DELETED].[BLEINFORMATID] = [deleted].[BLEINFORMATID]
	WHERE	ISNULL([deleted].[BLEINFORMATID], '') <> ISNULL([inserted].[BLEINFORMATID], '')	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Custom Field',
			ISNULL([CUSTOMFIELDLAYOUT_DELETED].[SNAME], '[none]'),
			ISNULL([CUSTOMFIELDLAYOUT_INSERTED].[SNAME], '[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_DELETED WITH (NOLOCK) ON [deleted].[CUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_DELETED].[GCUSTOMFIELDLAYOUTS]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_INSERTED WITH (NOLOCK) ON [inserted].[CUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_INSERTED].[GCUSTOMFIELDLAYOUTS]
	WHERE	ISNULL([deleted].[CUSTOMFIELDLAYOUTID], '') <> ISNULL([inserted].[CUSTOMFIELDLAYOUTID], '')	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Allow Online Application Flag',
			CASE [deleted].[CANAPPLYONLINE] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[CANAPPLYONLINE] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	 WHERE	[deleted].[CANAPPLYONLINE] <> [inserted].[CANAPPLYONLINE]
	 UNION ALL

	 SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Default Online Apply Status',
			ISNULL([BLEXTSTATUS_DELETED].[NAME],'[none]'),
			ISNULL([BLEXTSTATUS_INSERTED].[NAME],'[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN [BLEXTSTATUS] BLEXTSTATUS_INSERTED WITH (NOLOCK) ON [BLEXTSTATUS_INSERTED].[BLEXTSTATUSID] = [inserted].[DEFAULTWEBAPPLYSTATUSID]
			LEFT JOIN [BLEXTSTATUS] BLEXTSTATUS_DELETED WITH (NOLOCK) ON [BLEXTSTATUS_DELETED].[BLEXTSTATUSID] = [deleted].[DEFAULTWEBAPPLYSTATUSID]
	WHERE	ISNULL([deleted].[DEFAULTWEBAPPLYSTATUSID], '') <> ISNULL([inserted].[DEFAULTWEBAPPLYSTATUSID], '')	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Online Custom Field Layout',
			ISNULL([CUSTOMFIELDLAYOUT_DELETED].[SNAME], '[none]'),
			ISNULL([CUSTOMFIELDLAYOUT_INSERTED].[SNAME], '[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_DELETED WITH (NOLOCK) ON [deleted].[ONLINECUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_DELETED].[GCUSTOMFIELDLAYOUTS]
			LEFT JOIN CUSTOMFIELDLAYOUT CUSTOMFIELDLAYOUT_INSERTED WITH (NOLOCK) ON [inserted].[ONLINECUSTOMFIELDLAYOUTID] = [CUSTOMFIELDLAYOUT_INSERTED].[GCUSTOMFIELDLAYOUTS]
	WHERE	ISNULL([deleted].[ONLINECUSTOMFIELDLAYOUTID], '') <> ISNULL([inserted].[ONLINECUSTOMFIELDLAYOUTID], '')	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Manage Business Type Codes Flag',
			CASE [deleted].[MANAGEBUSINESSTYPECODES] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[MANAGEBUSINESSTYPECODES] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	 WHERE	[deleted].[MANAGEBUSINESSTYPECODES] <> [inserted].[MANAGEBUSINESSTYPECODES]
	 UNION ALL

	 SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Require Business Type Codes Flag',
			CASE [deleted].[REQUIREBUSINESSTYPECODES] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[REQUIREBUSINESSTYPECODES] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	 WHERE	[deleted].[REQUIREBUSINESSTYPECODES] <> [inserted].[REQUIREBUSINESSTYPECODES]
	 UNION ALL

	 SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type CAP Address Required Flag',
			CASE [deleted].[CAPADDRESSREQUIRED] WHEN 1 THEN 'Yes' ELSE 'No' END,
			CASE [inserted].[CAPADDRESSREQUIRED] WHEN 1 THEN 'Yes' ELSE 'No' END,
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
	 WHERE	[deleted].[CAPADDRESSREQUIRED] <> [inserted].[CAPADDRESSREQUIRED]
	
	UNION ALL
	
	SELECT 
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Fee Template',
			ISNULL([CAFEETEMPLATE_DELETED].[CAFEETEMPLATENAME],'[none]'),
			ISNULL([CAFEETEMPLATE_INSERTED].[CAFEETEMPLATENAME],'[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN [CAFEETEMPLATE] [CAFEETEMPLATE_DELETED] WITH (NOLOCK) ON [deleted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_DELETED].[CAFEETEMPLATEID]
			LEFT JOIN [CAFEETEMPLATE] [CAFEETEMPLATE_INSERTED] WITH (NOLOCK) ON [inserted].[CAFEETEMPLATEID] = [CAFEETEMPLATE_INSERTED].[CAFEETEMPLATEID]
	WHERE	ISNULL([deleted].[CAFEETEMPLATEID],'') <> ISNULL([inserted].[CAFEETEMPLATEID],'')
	
	UNION ALL

	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Module',
            ISNULL([BLEXTCOMPANYTYPEMODULE_DELETED].[NAME],'[none]'),
            ISNULL([BLEXTCOMPANYTYPEMODULE_INSERTED].[NAME],'[none]'),
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLEXTCOMPANYTYPEID] = [inserted].[BLEXTCOMPANYTYPEID]
			LEFT JOIN [BLEXTCOMPANYTYPEMODULE] [BLEXTCOMPANYTYPEMODULE_DELETED] WITH (NOLOCK) ON [deleted].[BLEXTCOMPANYTYPEMODULEID] = [BLEXTCOMPANYTYPEMODULE_DELETED].[BLEXTCOMPANYTYPEMODULEID]
            LEFT JOIN [BLEXTCOMPANYTYPEMODULE] [BLEXTCOMPANYTYPEMODULE_INSERTED] WITH (NOLOCK) ON [inserted].[BLEXTCOMPANYTYPEMODULEID] = [BLEXTCOMPANYTYPEMODULE_INSERTED].[BLEXTCOMPANYTYPEMODULEID]
    WHERE   ISNULL([deleted].[BLEXTCOMPANYTYPEMODULEID],0) <> ISNULL([inserted].[BLEXTCOMPANYTYPEMODULEID],0)
	 
END
GO

CREATE TRIGGER [dbo].[TG_BLEXTCOMPANYTYPE_INSERT] ON [dbo].[BLEXTCOMPANYTYPE]
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of HEARINGTYPE table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )
	SELECT
			[inserted].[BLEXTCOMPANYTYPEID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Business Company Type Added',
			'',
			'',
			'Business Company Type (' + [inserted].[NAME] + ')'
	FROM	[inserted]	
END
GO

CREATE TRIGGER [dbo].[TG_BLEXTCOMPANYTYPE_DELETE] ON [dbo].[BLEXTCOMPANYTYPE]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO]
    )

	SELECT
			[deleted].[BLEXTCOMPANYTYPEID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'Business Company Type Deleted',
			'',
			'',
			'Business Company Type (' + [deleted].[NAME] + ')'
	FROM	[deleted]
END