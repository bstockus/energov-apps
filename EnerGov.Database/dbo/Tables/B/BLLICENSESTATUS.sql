CREATE TABLE [dbo].[BLLICENSESTATUS] (
    [BLLICENSESTATUSID]       CHAR (36)      NOT NULL,
    [NAME]                    NVARCHAR (50)  NOT NULL,
    [DESCRIPTION]             NVARCHAR (MAX) NULL,
    [BLLICENSESTATUSSYSTEMID] INT            DEFAULT ((1)) NOT NULL,
    [LASTCHANGEDBY]           CHAR (36)      NULL,
    [LASTCHANGEDON]           DATETIME       CONSTRAINT [DF_BLLICENSESTATUS_LastChangedOn] DEFAULT (getutcdate()) NOT NULL,
    [ROWVERSION]              INT            CONSTRAINT [DF_BLLICENSESTATUS_RowVersion] DEFAULT ((1)) NOT NULL,
    CONSTRAINT [PK_BLLicenseStatus] PRIMARY KEY CLUSTERED ([BLLICENSESTATUSID] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [FK_BLLicStatus_StatusSystem] FOREIGN KEY ([BLLICENSESTATUSSYSTEMID]) REFERENCES [dbo].[BLLICENSESTATUSSYSTEM] ([BLLICENSESTATUSSYSTEMID])
);


GO
CREATE NONCLUSTERED INDEX [BLLICENSESTATUS_IX_QUERY]
    ON [dbo].[BLLICENSESTATUS]([BLLICENSESTATUSID] ASC, [NAME] ASC);


GO

CREATE TRIGGER [dbo].[TG_BLLICENSESTATUS_DELETE] ON [dbo].[BLLICENSESTATUS]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )

	SELECT
			[deleted].[BLLICENSESTATUSID],
			[deleted].[ROWVERSION],
			GETUTCDATE(),
			(SELECT dbo.UFN_GET_USERID_FROM_CONTEXT_INFO()),
			'License Status Deleted',
			'',
			'',
			'License Status (' + [deleted].[NAME] + ')',
			'760331EE-8199-4F82-9522-72B80B96549A',
			3,
			1,
			[deleted].[NAME]
	FROM	[deleted]
END
GO

CREATE TRIGGER [dbo].[TG_BLLICENSESTATUS_UPDATE] ON [dbo].[BLLICENSESTATUS] 
	AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
		
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of BLLICENSESTATUS table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END	

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT
			[inserted].[BLLICENSESTATUSID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Name',
			[deleted].[NAME],
			[inserted].[NAME],
			'License Status (' + [inserted].[NAME] + ')',
			'760331EE-8199-4F82-9522-72B80B96549A',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLLICENSESTATUSID] = [inserted].[BLLICENSESTATUSID]
	WHERE	[deleted].[NAME] <> [inserted].[NAME]

	UNION ALL
	SELECT
			[inserted].[BLLICENSESTATUSID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'Description',
			ISNULL([deleted].[DESCRIPTION],'[none]'),
			ISNULL([inserted].[DESCRIPTION],'[none]'),
			'License Status (' + [inserted].[NAME] + ')',
			'760331EE-8199-4F82-9522-72B80B96549A',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLLICENSESTATUSID] = [inserted].[BLLICENSESTATUSID]
	WHERE	ISNULL([deleted].[DESCRIPTION], '') <> ISNULL([inserted].[DESCRIPTION], '')
	UNION ALL
	SELECT
			[inserted].[BLLICENSESTATUSID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'System Status',
			[BLLICENSESTATUSSYSTEM_DELETED].[NAME],
			[BLLICENSESTATUSSYSTEM_INSERTED].[NAME],
			'License Status (' + [inserted].[NAME] + ')',
			'760331EE-8199-4F82-9522-72B80B96549A',
			2,
			1,
			[inserted].[NAME]
	FROM	[deleted]
			JOIN [inserted] ON [deleted].[BLLICENSESTATUSID] = [inserted].[BLLICENSESTATUSID]
			JOIN BLLICENSESTATUSSYSTEM BLLICENSESTATUSSYSTEM_DELETED WITH (NOLOCK) ON [deleted].[BLLICENSESTATUSSYSTEMID] = [BLLICENSESTATUSSYSTEM_DELETED].[BLLICENSESTATUSSYSTEMID]
			JOIN BLLICENSESTATUSSYSTEM BLLICENSESTATUSSYSTEM_INSERTED WITH (NOLOCK) ON [inserted].[BLLICENSESTATUSSYSTEMID] = [BLLICENSESTATUSSYSTEM_INSERTED].[BLLICENSESTATUSSYSTEMID]
	WHERE	[deleted].[BLLICENSESTATUSSYSTEMID] <> [inserted].[BLLICENSESTATUSSYSTEMID]
END
GO

CREATE TRIGGER [dbo].[TG_BLLICENSESTATUS_INSERT] ON [dbo].[BLLICENSESTATUS]
   FOR INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	-- Check if LASTCHANGEDBY contains VALID User Id and it Exists in USERS table, this is in replacement to foreign key reference of BLLICENSESTATUS table with USERS table.
	IF EXISTS (SELECT * FROM inserted 
		LEFT OUTER JOIN USERS WITH (NOLOCK) ON USERS.SUSERGUID = inserted.LASTCHANGEDBY
		WHERE inserted.LASTCHANGEDBY IS NOT NULL AND USERS.SUSERGUID IS NULL)
	BEGIN		
		RAISERROR ('The INSERT or UPDATE statement conflicted with the FOREIGN KEY to table USERS', 16, 0);
		ROLLBACK;
		RETURN;
	END

    INSERT INTO [HISTORYSYSTEMSETUP]
    (	[ID],
		[ROWVERSION],
		[CHANGEDON],
		[CHANGEDBY],
		[FIELDNAME],
		[OLDVALUE],
		[NEWVALUE],
		[ADDITIONALINFO],
		[FORMID],
		[ACTION],
		[ISROOT],
		[RECORDNAME]
    )
	SELECT
			[inserted].[BLLICENSESTATUSID],
			[inserted].[ROWVERSION],
			GETUTCDATE(),
			[inserted].[LASTCHANGEDBY],
			'License Status Added',
			'',
			'',
			'License Status (' + [inserted].[NAME] + ')',
			'760331EE-8199-4F82-9522-72B80B96549A',
			1,
			1,
			[inserted].[NAME]
	FROM	[inserted]	
END