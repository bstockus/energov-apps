

CREATE PROCEDURE PMO_PROC_CM_DAILY_FINE
AS
BEGIN
  BEGIN TRY
      SET NOCOUNT ON;
      
	DECLARE @CMVIOLATIONID char(36)
	DECLARE @CMCODECASEID char(36)


	DECLARE CSR_UP_NUMLATE CURSOR FAST_FORWARD
	FOR

	SELECT        CMVIOLATION.CMVIOLATIONID, CMCODECASE.CMCODECASEID
	FROM            CMCODECASE INNER JOIN
							 CMCODEWFSTEP ON CMCODECASE.CMCODECASEID = CMCODEWFSTEP.CMCODECASEID INNER JOIN
							 CMCODEWFACTIONSTEP ON CMCODEWFSTEP.CMCODEWFSTEPID = CMCODEWFACTIONSTEP.CMCODEWFSTEPID INNER JOIN
							 CMVIOLATION ON CMCODEWFACTIONSTEP.CMCODEWFACTIONSTEPID = CMVIOLATION.CMCODEWFACTIONID INNER JOIN
							 CUSTOMSAVERCODEMANAGEMENT ON CMVIOLATION.CMVIOLATIONID = CUSTOMSAVERCODEMANAGEMENT.ID
	-- WHERE CMVIOLATION.RESOLVEDDATE IS NULL AND CUSTOMSAVERCODEMANAGEMENT.Subjecttodailyaccrual=1


	OPEN CSR_UP_NUMLATE
	FETCH NEXT FROM CSR_UP_NUMLATE INTO @CMVIOLATIONID, @CMCODECASEID

	WHILE(@@FETCH_STATUS = 0)


		BEGIN
   
		--UPDATE Days Unabated
		--UPDATE CUSTOMSAVERCODEMANAGEMENT
		--SET DaysUnabated = DaysUnabated + 1
		--WHERE ID = @CMVIOLATIONID

		-- Main business object rowversion must be updated. 
		UPDATE CMCODECASE
		SET ROWVERSION = ROWVERSION + 1
		WHERE CMCODECASEID = @CMCODECASEID

		FETCH NEXT FROM CSR_UP_NUMLATE INTO @CMVIOLATIONID

		END

	CLOSE CSR_UP_NUMLATE
	DEALLOCATE  CSR_UP_NUMLATE

    END TRY
	  BEGIN CATCH
		 --
		 --
		INSERT into GLOBALERRORDATABASE VALUES (newid(),'PMO_PROC_CM_DAILY_FINE', getdate(), @@ERROR, null)
		 --	
		 --
		CLOSE CSR_UP_NUMLATE
		DEALLOCATE  CSR_UP_NUMLATE
		 --
		 --
	  END CATCH

END
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
