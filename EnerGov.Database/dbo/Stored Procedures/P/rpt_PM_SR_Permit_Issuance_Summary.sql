
CREATE PROCEDURE rpt_PM_SR_Permit_Issuance_Summary
	@STARTDATE AS DATETIME,
	@ENDDATE AS DATETIME
AS

SET @STARTDATE = DATEADD(dd, DATEDIFF(dd, 0, @STARTDATE), 0)
SET @ENDDATE = DATEADD(S,-1,DATEADD(D,1,@ENDDATE))  

BEGIN
	
-- FEE PAYMENT TOTALS BY PERMIT TEMP TABLE
SELECT PF.PMPERMITID
	, SUM(TF.PAIDAMOUNT - (TF.REFUNDAMOUNT * 2)) TOTAL_TRANSACTION_AMOUNT
INTO #PAIDFEES
FROM PMPERMITFEE PF
INNER JOIN CACOMPUTEDFEE CF ON PF.CACOMPUTEDFEEID = CF.CACOMPUTEDFEEID
	AND CF.CASTATUSID NOT IN (5,10) --VOID, DELETED
INNER JOIN CATRANSACTIONFEE TF ON CF.CACOMPUTEDFEEID = TF.CACOMPUTEDFEEID
	AND TF.CASTATUSID NOT IN (5,10) --VOID, DELETED
INNER JOIN CATRANSACTION T ON TF.CATRANSACTIONID = T.CATRANSACTIONID
	AND T.CATRANSACTIONSTATUSID <> 2 --VOID
	AND T.CATRANSACTIONTYPEID <> 6 --VOID REVERSAL
GROUP BY PF.PMPERMITID;

CREATE INDEX TEMP1 ON #PAIDFEES (PMPERMITID);

SELECT P.PMPERMITID, P.PERMITNUMBER, P.SQUAREFEET, P.VALUE
	, PT.NAME PERMIT_TYPE
	, PWC.NAME PERMIT_WORK_CLASS
	, COALESCE(TTPF.TOTAL_TRANSACTION_AMOUNT, $0.00) AS TOTAL_TRANSACTION_AMOUNT
	, (SELECT CASE WHEN R.[IMAGE] IS NULL THEN 'N' ELSE 'Y' END FROM RPTIMAGELIB R
		WHERE R.IMAGENAME = 'Municipality_Logo') SHOWLOGO
	, (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Name') Municipality_Name
	, (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Page_Footer') Municipality_Page_Footer
FROM PMPERMIT P
INNER JOIN PMPERMITTYPE PT ON P.PMPERMITTYPEID = PT.PMPERMITTYPEID
INNER JOIN PMPERMITWORKCLASS PWC ON P.PMPERMITWORKCLASSID = PWC.PMPERMITWORKCLASSID
LEFT JOIN #PAIDFEES TTPF ON P.PMPERMITID = TTPF.PMPERMITID
WHERE P.ISSUEDATE BETWEEN @STARTDATE AND @ENDDATE

DROP TABLE #PAIDFEES;

END
