CREATE PROCEDURE [dbo].[USP_INTEGRATION_UPDATE_CAINVOICEFEE_PAID_STATUS]
	@UniqueIds RecordIDs READONLY,
	@ChangedBy CHAR(36)
AS
BEGIN

	--Gather info on all of the fees and misc. fees that are being updated.
	DECLARE @invoiceFeeUpdatesTable TABLE 
	(
		InvoiceId			CHAR(36) NOT NULL,
		InvoiceFeeId		CHAR(36) NOT NULL,
		OldExportStatusId	INT NOT NULL,
		NewExportStatusId	INT NOT NULL
	)

	INSERT INTO @invoiceFeeUpdatesTable 
	(InvoiceId, InvoiceFeeId, OldExportStatusId, NewExportStatusId)
	--Case fees
	SELECT CAINVOICEFEE.CAINVOICEID, FEEIDs.RECORDID, CAINVOICEFEE.CAEXPORTSTATUSID, 
		CASE 
		WHEN CACOMPUTEDFEE.AMOUNTPAIDTODATE >= CACOMPUTEDFEE.COMPUTEDAMOUNT THEN 4
		WHEN CACOMPUTEDFEE.AMOUNTPAIDTODATE < CACOMPUTEDFEE.COMPUTEDAMOUNT AND CACOMPUTEDFEE.AMOUNTPAIDTODATE > 0.00 THEN 5 
		END
	FROM CAINVOICEFEE
	JOIN @UniqueIds [FEEIDs] ON CAINVOICEFEE.CAINVOICEFEEID = [FEEIDs].[RECORDID] 
	JOIN CACOMPUTEDFEE ON CACOMPUTEDFEE.CACOMPUTEDFEEID = CAINVOICEFEE.CACOMPUTEDFEEID
	WHERE COALESCE(CAINVOICEFEE.CAEXPORTSTATUSID, 1) > 1
	AND CACOMPUTEDFEE.AMOUNTPAIDTODATE > 0.00
	UNION ALL
	--Misc. fees
	SELECT CAINVOICEMISCFEE.CAINVOICEID, FEEIDs.RECORDID, CAINVOICEMISCFEE.CAEXPORTSTATUSID, 
		CASE 
		WHEN CAMISCFEE.PAIDAMOUNT >= CAMISCFEE.AMOUNT THEN 4
		WHEN CAMISCFEE.PAIDAMOUNT < CAMISCFEE.AMOUNT AND CAMISCFEE.PAIDAMOUNT > 0.00 THEN 5 
		END
	FROM CAINVOICEMISCFEE
	JOIN @UniqueIds [FEEIDs] ON CAINVOICEMISCFEE.CAINVOICEMISCFEEID = [FEEIDs].[RECORDID] 
	JOIN CAMISCFEE ON CAMISCFEE.CAMISCFEEID = CAINVOICEMISCFEE.CAMISCFEEID
	WHERE COALESCE(CAINVOICEMISCFEE.CAEXPORTSTATUSID, 1) > 1
	AND CAMISCFEE.PAIDAMOUNT > 0.00;

	--Bump row version for affected invoices
	UPDATE CAINVOICE SET [ROWVERSION] = [ROWVERSION] + 1 
	FROM CAINVOICE
	JOIN @invoiceFeeUpdatesTable UPDATETABLE ON UPDATETABLE.InvoiceId = CAINVOICE.CAINVOICEID
	
	--Update normal case fees with new export status
	UPDATE CAINVOICEFEE SET CAEXPORTSTATUSID = UPDATETABLE.NewExportStatusId
	FROM CAINVOICEFEE
	JOIN @invoiceFeeUpdatesTable UPDATETABLE ON CAINVOICEFEE.CAINVOICEFEEID = UPDATETABLE.InvoiceFeeId 

	--Log history for normal case fees having export status changed
	INSERT INTO HISTORYSYSTEMSETUP (ID, [ROWVERSION], CHANGEDON, CHANGEDBY, FIELDNAME, 
		OLDVALUE, NEWVALUE, ADDITIONALINFO)
	SELECT CAINVOICE.CAINVOICEID, CAINVOICE.[ROWVERSION], GETDATE(), @ChangedBy, 'ExportStatus', 
		OLDEXPORTSTATUS.[NAME], NEWEXPORTSTATUS.[NAME], CACOMPUTEDFEE.FEENAME + ': Export Status changed by Windows Service.'
	FROM @invoiceFeeUpdatesTable UPDATETABLE
	JOIN CAINVOICEFEE ON UPDATETABLE.InvoiceFeeId = CAINVOICEFEE.CAINVOICEFEEID
	JOIN CACOMPUTEDFEE ON CAINVOICEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID
	JOIN CAINVOICE ON CAINVOICEFEE.CAINVOICEID = CAINVOICE.CAINVOICEID
	JOIN CAEXPORTSTATUS OLDEXPORTSTATUS ON OLDEXPORTSTATUS.CAEXPORTSTATUSID = UPDATETABLE.OldExportStatusId
	JOIN CAEXPORTSTATUS NEWEXPORTSTATUS ON NEWEXPORTSTATUS.CAEXPORTSTATUSID = UPDATETABLE.NewExportStatusId

	--Update misc. fees with new export status
	UPDATE CAINVOICEMISCFEE SET CAEXPORTSTATUSID = UPDATETABLE.NewExportStatusId
	FROM CAINVOICEMISCFEE
	JOIN @invoiceFeeUpdatesTable UPDATETABLE ON CAINVOICEMISCFEE.CAINVOICEMISCFEEID = UPDATETABLE.InvoiceFeeId 

	--Log history for misc. fees having export status changed
	INSERT INTO HISTORYSYSTEMSETUP (ID, [ROWVERSION], CHANGEDON, CHANGEDBY, FIELDNAME, 
		OLDVALUE, NEWVALUE, ADDITIONALINFO)
	SELECT CAINVOICE.CAINVOICEID, CAINVOICE.[ROWVERSION], GETDATE(), @ChangedBy, 'ExportStatus', 
		OLDEXPORTSTATUS.[NAME], NEWEXPORTSTATUS.[NAME], CAMISCFEE.FEENAME + ': Export Status changed by Windows Service.'
	FROM @invoiceFeeUpdatesTable UPDATETABLE
	JOIN CAINVOICEMISCFEE ON UPDATETABLE.InvoiceFeeId = CAINVOICEMISCFEE.CAINVOICEMISCFEEID
	JOIN CAMISCFEE ON CAINVOICEMISCFEE.CAMISCFEEID = CAMISCFEE.CAMISCFEEID
	JOIN CAINVOICE ON CAINVOICEMISCFEE.CAINVOICEID = CAINVOICE.CAINVOICEID
	JOIN CAEXPORTSTATUS OLDEXPORTSTATUS ON OLDEXPORTSTATUS.CAEXPORTSTATUSID = UPDATETABLE.OldExportStatusId
	JOIN CAEXPORTSTATUS NEWEXPORTSTATUS ON NEWEXPORTSTATUS.CAEXPORTSTATUSID = UPDATETABLE.NewExportStatusId

END