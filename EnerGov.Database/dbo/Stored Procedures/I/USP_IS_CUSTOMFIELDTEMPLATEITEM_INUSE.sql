CREATE PROCEDURE [dbo].[USP_IS_CUSTOMFIELDTEMPLATEITEM_INUSE]
(
	@GCUSTOMFIELDTEMPLATEITEMS RECORDIDS READONLY
)
AS
BEGIN	

DECLARE @CUSTOMFIELDMODULEID INT,
		@SFIELDNAME VARCHAR(100),
		@GCUSTOMFIELDPICKLISTITEM CHAR(36),
		@BALLOWMULTIPLESELECTIONS BIT,
		@DYNAMICSQLSTATEMENT NVARCHAR(MAX),
		@GETCUSTOMSAVERTABLENAME VARCHAR(1000),
		@GETCUSTOMSEAVETABLECOUNT INT,
		@TEMPTABLEROWNUMBER INT,
		@ISTEMPLATEITEMINUSE BIT=0;

DECLARE @TEM_CUSTOMFIELDTEMPLATEITEM_TABLE AS TABLE (
CUSTOMFIELDMODULEID INT,
SFIELDNAME VARCHAR(100),
GCUSTOMFIELDPICKLISTITEM CHAR(36),
BALLOWMULTIPLESELECTIONS BIT,
ROW_NUM INT)

INSERT INTO @TEM_CUSTOMFIELDTEMPLATEITEM_TABLE
SELECT CUSTOMFIELDMODULES.CUSTOMFIELDMODULEID, CUSTOMFIELD.SFIELDNAME, CUSTOMFIELDPICKLISTITEM.GCUSTOMFIELDPICKLISTITEM, CUSTOMFIELDPICKLIST.BALLOWMULTIPLESELECTIONS, ROW_NUMBER() OVER (ORDER BY CUSTOMFIELD.SFIELDNAME) ROW_NUM
    FROM  CUSTOMFIELDTEMPLATEITEM
    INNER JOIN CUSTOMFIELDPICKLISTITEM ON CUSTOMFIELDTEMPLATEITEM.GCUSTOMFIELDTEMPLATEITEM = CUSTOMFIELDPICKLISTITEM.FKCUSTOMFIELDTEMPLATEITEM
    INNER JOIN CUSTOMFIELDPICKLIST ON CUSTOMFIELDPICKLISTITEM.FKGCUSTOMFIELDPICKLIST = CUSTOMFIELDPICKLIST.GCUSTOMFIELDPICKLIST
    INNER JOIN CUSTOMFIELD ON CUSTOMFIELDPICKLIST.FKGCUSTOMFIELD = CUSTOMFIELD.GCUSTOMFIELD
    INNER JOIN CUSTOMFIELDOBJECT ON CUSTOMFIELD.GCUSTOMFIELD = CUSTOMFIELDOBJECT.GCUSTOMFIELD
    INNER JOIN CUSTOMFIELDLAYOUT ON CUSTOMFIELDOBJECT.FKGCUSTOMFIELDLAYOUT = CUSTOMFIELDLAYOUT.GCUSTOMFIELDLAYOUTS
    INNER JOIN CUSTOMFIELDMODULES ON CUSTOMFIELDLAYOUT.CUSTOMFIELDMODULEID = CUSTOMFIELDMODULES.CUSTOMFIELDMODULEID
	WHERE CUSTOMFIELDTEMPLATEITEM.GCUSTOMFIELDTEMPLATEITEM IN (SELECT RECORDID FROM @GCUSTOMFIELDTEMPLATEITEMS)

SELECT @TEMPTABLEROWNUMBER = MAX(ROW_NUM) FROM @TEM_CUSTOMFIELDTEMPLATEITEM_TABLE
   WHILE (@TEMPTABLEROWNUMBER>0)
	BEGIN
		SELECT @CUSTOMFIELDMODULEID=CUSTOMFIELDMODULEID,@SFIELDNAME =SFIELDNAME ,@GCUSTOMFIELDPICKLISTITEM =GCUSTOMFIELDPICKLISTITEM, @BALLOWMULTIPLESELECTIONS =BALLOWMULTIPLESELECTIONS
			FROM @TEM_CUSTOMFIELDTEMPLATEITEM_TABLE WHERE ROW_NUM=@TEMPTABLEROWNUMBER
		
		SET @GETCUSTOMSAVERTABLENAME
					  = CASE @CUSTOMFIELDMODULEID
								WHEN 1 THEN 'CUSTOMSAVERSYSTEMSETUP'
								WHEN 2 THEN 'CUSTOMSAVERPERMITMANAGEMENT'
								WHEN 3 THEN 'CUSTOMSAVERPLANMANAGEMENT'
								WHEN 4 THEN 'CUSTOMSAVERINSPECTIONS'
								WHEN 5 THEN 'CUSTOMSAVERCODEMANAGEMENT'
								WHEN 6 THEN 'CUSTOMSAVERINDLICENSE'
								WHEN 7 THEN 'CUSTOMSAVERLICENSEMANAGEMENT'
								WHEN 11 THEN 'CUSTOMSAVERCRMMANAGEMENT'
								WHEN 12 THEN 'CUSTOMSAVERASSETMANAGEMENT'
								WHEN 14 THEN 'CUSTOMSAVERINVMANAGEMENT'
								WHEN 16 THEN 'CUSTOMSAVERPURMANAGEMENT'
								WHEN 55 THEN 'CUSTOMSAVERPROJMANAGEMENT'
								WHEN 75 THEN 'CUSTOMSAVERDECISIONENGINE'
								WHEN 20 THEN 'CUSTOMSAVERPROPMANAGEMENT'
								WHEN 21 THEN 'CUSTOMSAVERTAXREMMANAGEMENT'
								WHEN 23 THEN 'CUSTOMSAVEROBJECTMANAGEMENT'
								WHEN 65 THEN 'CUSTOMSAVERIMPACTMANAGEMENT'
						END

               IF (@BALLOWMULTIPLESELECTIONS = 1)
					   BEGIN
						  SET @DYNAMICSQLSTATEMENT = N'SELECT @GETCUSTOMSEAVETABLECOUNT=COUNT(1) FROM ' + @GETCUSTOMSAVERTABLENAME + 'MS WITH (NOLOCK) WHERE CUSTOMFIELDPICKLISTITEMID = @GCUSTOMFIELDPICKLISTITEM';
						  EXEC SP_EXECUTESQL @DYNAMICSQLSTATEMENT
						      , N'@GETCUSTOMSAVERTABLENAME VARCHAR(1000), @GCUSTOMFIELDPICKLISTITEM CHAR(36),  @GETCUSTOMSEAVETABLECOUNT INT OUTPUT'
						      , @GETCUSTOMSAVERTABLENAME=@GETCUSTOMSAVERTABLENAME, @GCUSTOMFIELDPICKLISTITEM=@GCUSTOMFIELDPICKLISTITEM, @GETCUSTOMSEAVETABLECOUNT=@GETCUSTOMSEAVETABLECOUNT OUTPUT;
			
							IF(@GETCUSTOMSEAVETABLECOUNT>0)
							BEGIN
							   SET @ISTEMPLATEITEMINUSE = 1
							   BREAK;
							END
					   END
					ELSE
					   BEGIN
					        DECLARE @TEMP_SYSTEM_ENTITY_TABLE AS TABLE (TABLENAME VARCHAR(200),COLUMNNAME VARCHAR(200),ROW_NUM INT)
							DECLARE @TEMPTABLESYSTEMENTITYROWNUMBER INT =0

							INSERT INTO @TEMP_SYSTEM_ENTITY_TABLE
							SELECT SYSTABLE.NAME AS TABLENAME,SYSCOLUMN.NAME AS COLUMNNAME, ROW_NUMBER() OVER (ORDER BY SYSTABLE.NAME) ROW_NUM FROM  SYS.TABLES  SYSTABLE 
													INNER JOIN  SYS.COLUMNS  SYSCOLUMN ON SYSTABLE.OBJECT_ID=SYSCOLUMN.OBJECT_ID
								   GROUP BY SYSTABLE.NAME,SYSCOLUMN.NAME
								   HAVING SYSTABLE.NAME LIKE N''+@GETCUSTOMSAVERTABLENAME+'%' AND SYSCOLUMN.NAME = N''+@SFIELDNAME+''
									  AND SYSTABLE.NAME NOT LIKE N'%MS' AND SYSTABLE.NAME NOT LIKE N'%WS' 
			
							 SELECT @TEMPTABLESYSTEMENTITYROWNUMBER = MAX(ROW_NUM) FROM @TEMP_SYSTEM_ENTITY_TABLE
							    WHILE (@TEMPTABLESYSTEMENTITYROWNUMBER>0)
									BEGIN
									      SELECT @GETCUSTOMSAVERTABLENAME=TABLENAME
		                                        	FROM @TEMP_SYSTEM_ENTITY_TABLE WHERE ROW_NUM=@TEMPTABLESYSTEMENTITYROWNUMBER
									      SET @DYNAMICSQLSTATEMENT = N'SELECT @GETCUSTOMSEAVETABLECOUNT=COUNT(1) FROM ' + @GETCUSTOMSAVERTABLENAME + ' WITH (NOLOCK) WHERE '+ @SFIELDNAME +' =  @GCUSTOMFIELDPICKLISTITEM ';
										  EXEC SP_EXECUTESQL @DYNAMICSQLSTATEMENT
											  , N'@GETCUSTOMSAVERTABLENAME VARCHAR(1000),@SFIELDNAME VARCHAR(100),  @GCUSTOMFIELDPICKLISTITEM CHAR(36),  @GETCUSTOMSEAVETABLECOUNT INT OUTPUT'
											  , @GETCUSTOMSAVERTABLENAME=@GETCUSTOMSAVERTABLENAME, @SFIELDNAME=@SFIELDNAME, @GCUSTOMFIELDPICKLISTITEM=@GCUSTOMFIELDPICKLISTITEM, @GETCUSTOMSEAVETABLECOUNT=@GETCUSTOMSEAVETABLECOUNT OUTPUT;
           
											IF(@GETCUSTOMSEAVETABLECOUNT>0)
											BEGIN
												SET @ISTEMPLATEITEMINUSE = 1
											   BREAK;
											END
								      SET @TEMPTABLESYSTEMENTITYROWNUMBER=@TEMPTABLESYSTEMENTITYROWNUMBER-1;
									END
					   END

		IF(@ISTEMPLATEITEMINUSE=1)
		BEGIN
			BREAK;
		END
	SET @TEMPTABLEROWNUMBER=@TEMPTABLEROWNUMBER-1;
	END
  SELECT @ISTEMPLATEITEMINUSE
END