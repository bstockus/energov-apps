CREATE PROCEDURE [dbo].[SP_WORKFLOWACTION_DATA]
	@ACTIONS WORKFLOW_ACTION_FETCH_TYPE READONLY
AS
BEGIN

	SET NOCOUNT ON;	  
	  
	  if exists (select * from @ACTIONS where ActionTypeId = 6)
	  BEGIN
	  SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, ins.IMINSPECTIONID AS InspectionId, ins.INSPECTIONNUMBER AS InspectionNumber, ins.REQUESTEDDATE AS RequestedDate, ins.SCHEDULEDSTARTDATE AS ScheduleDate, insstatus.STATUSNAME AS Status, 
	  instype.IMINSPECTIONTYPEID AS InspectionTypeId, 
	  instype.NAME AS Type, u.FNAME AS AssignedInspectorFirstName, u.LNAME AS AssignedInspectorLastName, ins.PARENTINSPECTIONNUMBER AS ParentInspectionNumber, contactuser.FIRSTNAME AS ContactFirstName, contactuser.LASTNAME AS ContactLastName, 
	  contactuser.MIDDLENAME AS ContactMiddleName, parcel.PARCELNUMBER AS MainParcelNumber, inslink.NAME AS LinkTypeName, address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
      address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
      address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
	  address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province, 
	  contactuser.BUSINESSPHONE AS ContactBusinesPhone, contactuser.HOMEPHONE AS ContactPhoneHome, contactuser.MOBILEPHONE AS ContactMobilePhone, contactuser.OTHERPHONE AS ContactOtherPhone,
	  contactuser.PREFCOMM as PreferredCommunicationId, inspNote.TEXT as RecentInspectionNote, inspNote.CreatedBy, inspNote.CREATEDDATE,
	  ins.ACTUALSTARTDATE AS ActualDate
	  
	  
	  FROM @ACTIONS
	  INNER JOIN IMINSPECTIONACTREF on IMINSPECTIONACTREF.OBJECTID = [@ACTIONS].ActionId
	  INNER JOIN IMINSPECTION AS INS on INS.IMINSPECTIONID = IMINSPECTIONACTREF.IMINSPECTIONID
      INNER JOIN dbo.IMINSPECTIONSTATUS AS insstatus ON insstatus.IMINSPECTIONSTATUSID = ins.IMINSPECTIONSTATUSID
	  LEFT OUTER JOIN dbo.IMINSPECTIONTYPE AS instype ON instype.IMINSPECTIONTYPEID = ins.IMINSPECTIONTYPEID
	  LEFT OUTER JOIN dbo.IMINSPECTORREF AS insinspref ON insinspref.INSPECTIONID = ins.IMINSPECTIONID AND insinspref.BPRIMARY = 1
	  LEFT OUTER JOIN dbo.USERS AS u ON u.SUSERGUID = insinspref.USERID
	  LEFT OUTER JOIN dbo.IMINSPECTIONPARCEL AS insparcel ON insparcel.IMINSPECTIONID = ins.IMINSPECTIONID AND insparcel.MAIN = 1
	  LEFT OUTER JOIN dbo.IMINSPECTIONLINK AS inslink ON inslink.IMINSPECTIONLINKID = ins.IMINSPECTIONLINKID
	  LEFT OUTER JOIN dbo.PARCEL AS parcel ON parcel.PARCELID = insparcel.PARCELID
	  LEFT OUTER JOIN dbo.IMINSPECTIONADDRESS AS insaddress ON insaddress.IMINSPECTIONID = ins.IMINSPECTIONID AND insaddress.MAIN = 1 
	  LEFT OUTER JOIN dbo.MAILINGADDRESS AS address ON address.MAILINGADDRESSID = insaddress.MAILINGADDRESSID outer apply
			
			(SELECT TOP (1) IMINSPECTIONCONTACTID, IMINSPECTIONID, GLOBALENTITYID, CONTACTTYPEID, ISBILLING
			FROM dbo.IMINSPECTIONCONTACT where iminspectionid = INS.IMINSPECTIONID AND IMINSPECTIONCONTACT.ISBILLING = 1) AS inscont 
	  LEFT OUTER JOIN dbo.GLOBALENTITY AS contactuser ON contactuser.GLOBALENTITYID = inscont.GLOBALENTITYID
	  OUTER APPLY (SELECT TOP 1 dbo.IMINSPECTIONNOTE.TEXT, dbo.IMINSPECTIONNOTE.CREATEDDATE, (dbo.USERS.FNAME + ' ' + dbo.USERS.LNAME) as CreatedBy 
				  FROM dbo.IMINSPECTION
	              LEFT JOIN dbo.IMINSPECTIONNOTE ON 
						dbo.IMINSPECTIONNOTE.IMINSPECTIONID = dbo.IMINSPECTION.IMINSPECTIONID 
						LEFT JOIN dbo.USERS ON dbo.IMINSPECTIONNOTE.CREATEDBY = dbo.USERS.SUSERGUID
				  WHERE dbo.IMINSPECTIONNOTE.IMINSPECTIONID = INS.IMINSPECTIONID 
				  ORDER BY dbo.IMINSPECTIONNOTE.CREATEDDATE DESC) inspNote
	  END

	  if exists (select * from @ACTIONS where ActionTypeId = 8)
	  BEGIN
	 SELECT act.ActionTypeId AS ActionTypeId, act.ActionId AS WorkflowActionId, PT.PMPERMITID as PermitId, PT.PERMITNUMBER as PermitNumber, 
	  PMPERMITTYPE.NAME AS PermitType,PMPERMITTYPE.PMPERMITTYPEID AS PermitTypeId, PR.NAME AS Project, PT.APPLYDATE as ApplyDate, WC.NAME as Workclass, PT.DESCRIPTION as Description,
	  PTSTATUS.NAME AS Status, PARCEL.PARCELNUMBER as MainParcelNumber, DIS.NAME as District, pt.ISSUEDATE as IssueDate, pt.EXPIREDATE as ExpireDate, pt.SQUAREFEET as SquareFeet,
	  pt.VALUE as Valuation, pt.FINALIZEDATE as FinalDate, pt.LASTINSPECTIONDATE as LastInspectionDate,
	  address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
      address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
      address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
	  address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province,

	  (select c.FIRSTNAME + ' ' + c.LASTNAME + ',' from PMPERMITCONTACT
		join GLOBALENTITY c on PMPERMITCONTACT.GLOBALENTITYID = c.GLOBALENTITYID
		where PMPERMITCONTACT.PMPERMITID = PT.PMPERMITID AND PMPERMITCONTACT.ISBILLING = 1
		for xml PATH('')) as BillingContacts  
	  
	  FROM  (
	  SELECT ISNULL(permitRef.PMPERMITID, actions.SubRecordId) as PermitId, actions.ActionId, actions.ActionTypeId FROM @ACTIONS actions 
	  LEFT JOIN PMPERMITACTIONREF permitRef on actions.ActionId = permitRef.OBJECTID WHERE ISNULL(permitRef.PMPERMITID, actions.SubRecordId) IS NOT NULL AND ISNULL(permitRef.PMPERMITID, actions.SubRecordId) != ''
	  ) act
	  INNER JOIN PMPERMIT AS PT on PT.PMPERMITID = act.PermitId
	  INNER JOIN PMPERMITTYPE ON PMPERMITTYPE.PMPERMITTYPEID = PT.PMPERMITTYPEID 
	  INNER JOIN dbo.PMPERMITSTATUS AS PTSTATUS ON PTSTATUS.PMPERMITSTATUSID = PT.PMPERMITSTATUSID
	  INNER JOIN dbo.DISTRICT AS DIS ON DIS.DISTRICTID = PT.DISTRICTID
	  LEFT OUTER JOIN dbo.PMPERMITWORKCLASS AS WC ON WC.PMPERMITWORKCLASSID = PT.PMPERMITWORKCLASSID
	  LEFT OUTER JOIN dbo.PRPROJECTPERMIT ON PRPROJECTPERMIT.PMPERMITID = PT.PMPERMITID
	  LEFT OUTER JOIN dbo.PRPROJECT AS PR ON PR.PRPROJECTID = PRPROJECTPERMIT.PRPROJECTID
	  LEFT OUTER JOIN dbo.PMPERMITPARCEL AS PTPARCEL ON PTPARCEL.PMPERMITID = PT.PMPERMITID AND PTPARCEL.MAIN = 1
	  LEFT OUTER JOIN dbo.PARCEL ON PARCEL.PARCELID = PTPARCEL.PARCELID
	  LEFT OUTER JOIN dbo.PMPERMITADDRESS AS PTADDRESS ON PTADDRESS.PMPERMITID = PT.PMPERMITID AND PTADDRESS.MAIN = 1 
	  LEFT OUTER JOIN dbo.MAILINGADDRESS AS address ON address.MAILINGADDRESSID = PTADDRESS.MAILINGADDRESSID
	  END

	  if exists (select * from @ACTIONS where ActionTypeId = 7)
	  BEGIN
	 SELECT act.ActionTypeId AS ActionTypeId, act.ActionId AS WorkflowActionId, PL.PLPLANID as PlanId, PL.PLANNUMBER as PlanNumber, 
	  PLPLANTYPE.PLANNAME AS PlanType,PLPLANTYPE.PLPLANTYPEID AS PlanTypeId, PR.NAME AS Project, PL.APPLICATIONDATE as ApplyDate, WC.NAME as Workclass, PL.DESCRIPTION as Description,
	  PLSTATUS.NAME AS Status, PARCEL.PARCELNUMBER as MainParcelNumber, DIS.NAME as District, PL.APPROVALEXPIREDATE as ApprovalExpireDate, 
	  PL.EXPIREDATE as ExpireDate, PL.COMPLETEDATE as CompleteDate, PL.SQUAREFEET as SquareFeet, PL.VALUE as Valuation, u.FNAME + ', ' + u.LNAME as AssignedTo,
	  address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
      address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
      address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
	  address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province,

	  (select c.FIRSTNAME + ' ' + c.LASTNAME + ',' from PLPLANCONTACT
		join GLOBALENTITY c on PLPLANCONTACT.GLOBALENTITYID = c.GLOBALENTITYID
		where PLPLANCONTACT.PLPLANID = PL.PLPLANID AND PLPLANCONTACT.ISBILLING = 1
		for xml PATH('')) as BillingContacts  
	  
	  FROM (
	  SELECT ISNULL(planRef.PLPLANID, actions.SubRecordId) as PlanId, actions.ActionId, actions.ActionTypeId FROM @ACTIONS actions 
	  LEFT JOIN PLPLANACTIONREF planRef on actions.ActionId = planRef.OBJECTID WHERE ISNULL(planRef.PLPLANID, actions.SubRecordId) IS NOT NULL AND ISNULL(planRef.PLPLANID, actions.SubRecordId) != ''
	  ) act
	  INNER JOIN PLPLAN AS PL on PL.PLPLANID = act.PlanId
	  INNER JOIN PLPLANTYPE ON PLPLANTYPE.PLPLANTYPEID = PL.PLPLANTYPEID 
	  INNER JOIN dbo.PLPLANSTATUS AS PLSTATUS ON PLSTATUS.PLPLANSTATUSID = PL.PLPLANSTATUSID
	  INNER JOIN dbo.DISTRICT AS DIS ON DIS.DISTRICTID = PL.DISTRICTID
	  LEFT OUTER JOIN dbo.PLPLANWORKCLASS AS WC ON WC.PLPLANWORKCLASSID = PL.PLPLANWORKCLASSID
	  LEFT OUTER JOIN dbo.PRPROJECTPLAN ON PRPROJECTPLAN.PLPLANID = PL.PLPLANID
	  LEFT OUTER JOIN dbo.PRPROJECT AS PR ON PR.PRPROJECTID = PRPROJECTPLAN.PRPROJECTID
	  LEFT OUTER JOIN dbo.PLPLANPARCEL AS PLPARCEL ON PLPARCEL.PLPLANID = PL.PLPLANID AND PLPARCEL.MAIN = 1
	  LEFT OUTER JOIN dbo.PARCEL ON PARCEL.PARCELID = PLPARCEL.PARCELID
	  LEFT OUTER JOIN dbo.PLPLANADDRESS AS PLADDRESS ON PLADDRESS.PLPLANID = PL.PLPLANID AND PLADDRESS.MAIN = 1 
	  LEFT OUTER JOIN dbo.MAILINGADDRESS AS address ON address.MAILINGADDRESSID = PLADDRESS.MAILINGADDRESSID
	  LEFT OUTER JOIN dbo.USERS as U on U.SUSERGUID = PL.ASSIGNEDTO
	  END
	
	if exists (select * from @ACTIONS where ActionTypeId = 2)
	BEGIN
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, MT.MEETINGID as MeetingId, 
	  MT.SUBJECT AS Subject, MT.LOCATION as Location, MT.STARTDATE as StartDate, MT.ENDDATE AS EndDate, MT.COMMENTS AS Comments,
	  
	  ISNULL((select 
	  case when c.ISCONTACT = 1 and c.ISCOMPANY = 0 then c.FIRSTNAME + ' ' + c.LASTNAME + case when c.TITLE is null or c.TITLE = '' then '' else ' (' + c.TITLE + ')' end 
	       when c.ISCONTACT = 0 and c.ISCOMPANY = 1 then c.GLOBALENTITYNAME
		   when c.ISCONTACT = 1 and c.ISCOMPANY = 1 then c.FIRSTNAME + ' ' + c.LASTNAME + case when c.TITLE is null or c.TITLE = '' then '' else ' (' + c.TITLE + ')' end + ' ' + c.GLOBALENTITYNAME  
	  else c.GLOBALENTITYNAME end + ',' 
	  from MEETINGATTENDEE
		join GLOBALENTITY c on MEETINGATTENDEE.ATTENDEEID = c.GLOBALENTITYID
		where MEETINGATTENDEE.HEARINGID = MT.MEETINGID AND MEETINGATTENDEE.ISGLOBALENTITY = 1
		for xml PATH('')), '') +

	   ISNULL((select u.FNAME + ' ' + u.LNAME + case when u.TITLE is null or u.TITLE = '' then '' else ' (' + u.TITLE + ')' end + ',' from MEETINGATTENDEE
		join USERS u on MEETINGATTENDEE.ATTENDEEID = u.SUSERGUID
		where MEETINGATTENDEE.HEARINGID = MT.MEETINGID AND MEETINGATTENDEE.ISUSER = 1
		for xml PATH('')), '') as Attendees

	  FROM @ACTIONS
	  INNER JOIN MEETINGXREF on MEETINGXREF.OBJECTID = [@ACTIONS].ActionId
	  INNER JOIN MEETING AS MT on MT.MEETINGID = MEETINGXREF.MEETINGID
    END

	if exists (select * from @ACTIONS where ActionTypeId = 3)
	BEGIN
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, HR.HEARINGID as HearingId, 
	  HR.SUBJECT AS Subject, HR.LOCATION as Location, HR.STARTDATE as StartDate, HR.ENDDATE AS EndDate, HR.COMMENTS AS Comments, HEARINGSTATUS.NAME AS Status,
	  
	  ISNULL((select 
	  case when c.ISCONTACT = 1 and c.ISCOMPANY = 0 then c.FIRSTNAME + ' ' + c.LASTNAME + case when c.TITLE is null or c.TITLE = '' then '' else ' (' + c.TITLE + ')' end 
	       when c.ISCONTACT = 0 and c.ISCOMPANY = 1 then c.GLOBALENTITYNAME
		   when c.ISCONTACT = 1 and c.ISCOMPANY = 1 then c.FIRSTNAME + ' ' + c.LASTNAME + case when c.TITLE is null or c.TITLE = '' then '' else ' (' + c.TITLE + ')' end + ' ' + c.GLOBALENTITYNAME  
	  else c.GLOBALENTITYNAME end + ',' 
	  from HEARINGATTENDEE
		join GLOBALENTITY c on HEARINGATTENDEE.ATTENDEEID = c.GLOBALENTITYID
		where HEARINGATTENDEE.HEARINGID = HR.HEARINGID AND HEARINGATTENDEE.ISGLOBALENTITY = 1
		for xml PATH('')), '') +

	   ISNULL((select u.FNAME + ' ' + u.LNAME + case when u.TITLE is null or u.TITLE = '' then '' else ' (' + u.TITLE + ')' end + ',' from HEARINGATTENDEE
		join USERS u on HEARINGATTENDEE.ATTENDEEID = u.SUSERGUID
		where HEARINGATTENDEE.HEARINGID = HR.HEARINGID AND HEARINGATTENDEE.ISUSER = 1
		for xml PATH('')), '') as Attendees

	  FROM @ACTIONS
	  INNER JOIN HEARINGXREF on HEARINGXREF.OBJECTID = [@ACTIONS].ActionId
	  INNER JOIN HEARING AS HR on HR.HEARINGID = HEARINGXREF.HEARINGID
	  LEFT OUTER JOIN HEARINGSTATUS ON HEARINGSTATUS.HEARINGSTATUSID = HR.HEARINGSTATUSID
	END

	if exists (select * from @ACTIONS where ActionTypeId = 11)
	BEGIN
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, PA.PMPERMITACTIVITYID AS ActivityId, PA.PERMITACTIVITYNUMBER AS ActivityNumber, PT.NAME AS ActivityType,
	  PA.PERMITACTIVITYNAME AS ActivityName, PA.CREATEDON AS CreateDate, USERS.FNAME + ' ' + USERS.LNAME AS CreatedBy, PA.PERMITACTIVITYCOMMENTS AS Comments

	  FROM @ACTIONS
	  INNER JOIN PMPERMITACTIVITY AS PA on PA.PMPERMITWFACTIONSTEPID = [@ACTIONS].ActionId
	  INNER JOIN PMPERMITACTIVITYTYPE PT on PT.PMPERMITACTIVITYTYPEID = PA.PMPERMITACTIVITYTYPEID
	  LEFT JOIN USERS on USERS.SUSERGUID = PA.SUSERGUID
    END

	if exists (select * from @ACTIONS where ActionTypeId = 10)
	BEGIN
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, PA.PLPLANACTIVITYID AS ActivityId, PA.PLANACTIVITYNUMBER AS ActivityNumber, PT.NAME AS ActivityType,
	  PA.PLANACTIVITYNAME AS ActivityName, PA.CREATEDON AS CreateDate, USERS.FNAME + ' ' + USERS.LNAME AS CreatedBy, PA.PLANACTIVITYCOMMENTS AS Comments

	  FROM @ACTIONS
	  INNER JOIN PLPLANACTIVITY AS PA on PA.PLPLANWFACTIONSTEPID = [@ACTIONS].ActionId
	  INNER JOIN PLPLANACTIVITYTYPE PT on PT.PLPLANACTIVITYTYPEID = PA.PLPLANACTIVITYTYPEID
	  LEFT JOIN USERS on USERS.SUSERGUID = PA.SUSERGUID
    END

	if exists (select * from @ACTIONS where ActionTypeId = 15)
	BEGIN
    SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, TA.TASKID as TaskId, TA.SUBJECT as Subject, TA.STARTDATE as StartDate,
	  TA.DUEDATE as DueDate, TA.COMPLETEDDATE as CompleteDate, TT.NAME as TaskType, TA.TASKTEXT as TaskBody, TR.TASKPRIORITYNAME as Priority, TS.TASKSTATUSNAME as Status,

	  (select u.FNAME + ' ' + u.LNAME + case when u.TITLE is null or u.TITLE = '' then '' else ' (' + u.TITLE + ')' end + ',' from TASKUSER
		join USERS u on TASKUSER.USERID = u.SUSERGUID
		where TASKUSER.TASKID = TA.TASKID
		for xml PATH('')) as AssignedUsers

	  FROM @ACTIONS
	  INNER JOIN TASKWFREF on TASKWFREF.TASKWFREFID = [@ACTIONS].ActionId
	  INNER JOIN TASK AS TA on TA.TASKID = TASKWFREF.TASKID
	  LEFT JOIN TASKTYPE AS TT on TT.TASKTYPEID = TA.TASKTYPEID
      LEFT JOIN TASKPRIORITY TR on TR.TASKPRIORITYID = TA.TASKPRIORITYID
	  LEFT JOIN TASKSTATUS TS on TS.TASKSTATUSID = TA.TASKSTATUSID
    END


   if exists (select * from @ACTIONS where ActionTypeId = 20)
	BEGIN
    SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId,  CF.CACOMPUTEDFEEID as FeeId, CF.FEEDESCRIPTION as Name,
	  CF.INPUTVALUE as InputValue, CF.COMPUTEDAMOUNT as ComputedAmount, CF.AMOUNTPAIDTODATE as PaidAmount, CF.NOTES as Notes
	  FROM @ACTIONS
	  INNER JOIN CACOMPUTEDFEE as CF on CF.WFACTIONID = [@ACTIONS].ActionId
	  WHERE CF.CASTATUSID != 5 AND CF.CASTATUSID != 10
    END


   if exists (select * from @ACTIONS where ActionTypeId = 1)
	BEGIN
    SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, SB.PLSUBMITTALID as SubmittalId, PS.NAME as SubmittalStatus, SB.DUEDATE as SubmittalDueDate, SB.RECEIVEDDATE as SubmittalReceivedDate,
	  ERENTITYSESSION.ERENTITYSESSIONID as SubmittalSessionId, RE.PLITEMREVIEWID as ItemReviewId, PLITEMREVIEWTYPE.NAME as ItemReviewName, DEPARTMENT.NAME as DepartmentName, U.FNAME + ' ' + U.LNAME as AssignedUser,
	  RS.NAME as ItemReviewStatus, RE.ASSIGNEDDATE as ItemReviewAssignedDate, RE.DUEDATE as ItemReviewDueDate, RE.COMPLETEDATE as ItemReviewCompleteDate, RE.PRIORITYORDER as ItemReviewPriority,
	  RE.NOTREQUIRED as ItemReviewNotRequired, RE.COMMENTS as ItemReviewComments, RE.COMPLETED as ItemReviewCompleted
	  FROM @ACTIONS
	  INNER JOIN PLSUBMITTAL as SB on SB.PMPERMITWFACTIONSTEPID = [@ACTIONS].ActionId or SB.PLPLANWFACTIONSTEPID = [@ACTIONS].ActionId or SB.BLLICENSEWFACTIONSTEPID = [@ACTIONS].ActionId or SB.ILLICENSEWFACTIONSTEPID = [@ACTIONS].ActionId
	  LEFT JOIN PLSUBMITTALSTATUS as PS on PS.PLSUBMITTALSTATUSID = SB.PLSUBMITTALSTATUSID
	  LEFT JOIN ERENTITYSESSION on ERENTITYSESSION.PLSUBMITTALID = SB.PLSUBMITTALID
	  LEFT JOIN PLITEMREVIEW as RE on RE.PLSUBMITTALID = SB.PLSUBMITTALID
	  LEFT JOIN PLITEMREVIEWSTATUS as RS on RS.PLITEMREVIEWSTATUSID = RE.PLITEMREVIEWSTATUSID
	  LEFT JOIN PLITEMREVIEWTYPE on PLITEMREVIEWTYPE.PLITEMREVIEWTYPEID = RE.PLITEMREVIEWTYPEID
	  LEFT JOIN DEPARTMENT on DEPARTMENT.DEPARTMENTID = PLITEMREVIEWTYPE.DEPARTMENTID
	  LEFT JOIN USERS as U on U.SUSERGUID = RE.ASSIGNEDUSERID
    END
	
	if exists (select * from @ACTIONS where ActionTypeId = 12)
	BEGIN
    SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, CMCODEACTIVITY.CMCODEACTIVITYID AS ActivityId, CMCODEACTIVITY.CODEACTIVITYNUMBER AS ActivityNumber,
	  CMCODEACTIVITYTYPE.NAME AS ActivityType, CMCODEACTIVITY.CODEACTIVITYNAME AS ActivityName, CMCODEACTIVITY.CREATEDON AS CreateDate,
	  USERS.FNAME AS CreatedByFirstName, USERS.LNAME AS CreatedByLastName, CMCODEACTIVITY.CODEACTIVITYCOMMENTS AS Comment
	  FROM @ACTIONS
	  INNER JOIN CMCODEACTIVITY on CMCODEACTIVITY.CMCODEWFACTIONSTEPID = [@ACTIONS].ActionId
	  INNER JOIN CMCODEACTIVITYTYPE on CMCODEACTIVITYTYPE.CMCODEACTIVITYTYPEID = CMCODEACTIVITY.CMCODEACTIVITYTYPEID
	  INNER JOIN USERS on USERS.SUSERGUID = CMCODEACTIVITY.SUSERGUID
	  WHERE [@ACTIONS].ActionTypeId = 12
    END
	
	if exists (select * from @ACTIONS where ActionTypeId = 9)
	BEGIN
    SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, CMVIOLATION.CMVIOLATIONID AS ViolationId, CMCODE.CODENUMBER AS Code, CMCODECATEGORY.NAME AS Category,
	  CMCODEREVISION.CODETEXT AS RevisionText, CMVIOLATION.COMPLIANCEDATE AS ComplianceDate, CMVIOLATION.CORRECTIVEACTION AS CorrectiveAction,
	  CMVIOLATION.CITATIONISSUEDATE AS CitationIssueDate, CMVIOLATIONSTATUS.NAME AS Status, CMCODEVIOLATIONPRIORITY.NAME AS Priority
	  FROM @ACTIONS
	  INNER JOIN CMVIOLATION on CMVIOLATION.CMCODEWFACTIONID = [@ACTIONS].ActionId
	  INNER JOIN CMCODE on CMCODE.CMCODEID = CMVIOLATION.CMCODEID
	  INNER JOIN CMCODEREVISION on CMCODEREVISION.CMCODEREVISIONID = CMVIOLATION.CMCODEREVISIONID
	  INNER JOIN CMVIOLATIONSTATUS on CMVIOLATIONSTATUS.CMVIOLATIONSTATUSID = CMVIOLATION.CMVIOLATIONSTATUSID
	  LEFT JOIN CMCODECATEGORY on CMVIOLATION.CMCODECATEGORYID = CMCODECATEGORY.CMCODECATEGORYID
	  LEFT JOIN CMCODEVIOLATIONPRIORITY on CMCODEVIOLATIONPRIORITY.CMCODEVIOLATIONPRIORITYID = CMVIOLATION.CMCODEVIOLATIONPRIORITYID
	  WHERE [@ACTIONS].ActionTypeId = 9
    END
	
	if exists (select * from @ACTIONS where ActionTypeId = 22)
	BEGIN
    SELECT act.ActionTypeId AS ActionTypeId, act.ActionId AS WorkflowActionId, CC.CMCODECASEID as CodeCaseId, CC.CASENUMBER as CodeCaseNumber, 
	  CMCASETYPE.NAME AS CodeCaseType,CMCASETYPE.CMCASETYPEID AS CodeCaseTypeId, CC.DESCRIPTION as Description, CC.OPENEDDATE as OpenedDate, CC.CLOSEDDATE as ClosedDate, CMCODECASESTATUS.NAME as Status,
	  PARCEL.PARCELNUMBER as MainParcelNumber, USERS.FNAME as AssignedToFirstName, USERS.LNAME as AssignedToLastName,
	  address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
      address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
      address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
	  address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province,

	  (select count(*) from CMCODEWFSTEP
		inner join CMVIOLATION on CMVIOLATION.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
		where CMCODECASEID = CC.CMCODECASEID) as ViolationCount,

	  Violator.FIRSTNAME as ViolatorFirstName, Violator.LASTNAME as ViolatorLastName,	
	  Violator.ADDRESSLINE1 AS ViolatorAddressLine1, Violator.ADDRESSLINE2 AS ViolatorAddressLine2, 
	  Violator.ADDRESSLINE3 AS ViolatorAddressLine3, Violator.CITY AS ViolatorCity, Violator.STATE AS ViolatorState, Violator.COUNTY AS ViolatorCounty, Violator.COUNTRY AS ViolatorCountry, Violator.COUNTRYTYPE AS ViolatorCountryTypeId, 
	  Violator.PREDIRECTION AS ViolatorPreDirection, Violator.POSTDIRECTION AS ViolatorPostDirection, Violator.UNITORSUITE AS ViolatorUnitOrSuite, Violator.STREETTYPE AS ViolatorStreetType, Violator.POSTALCODE AS ViolatorPostalCode, 
	  Violator.COMPSITE AS ViolatorCompSite, Violator.POBOX AS ViolatorPoBox, Violator.RURALROUTE AS ViolatorRuralRoute, Violator.STATION AS ViolatorStation, Violator.PROVINCE as ViolatorProvince
	  
	  FROM (
	  SELECT ISNULL(codeCaseRef.CMCODECASEID, actions.SubRecordId) as CodeCaseId, actions.ActionId, actions.ActionTypeId FROM @ACTIONS actions 
	  LEFT JOIN CMCODECASEACTIONREF codeCaseRef on actions.ActionId = codeCaseRef.CMCODECASEACTIONREFID WHERE ISNULL(codeCaseRef.CMCODECASEID, actions.SubRecordId) IS NOT NULL AND ISNULL(codeCaseRef.CMCODECASEID, actions.SubRecordId) != ''
	  ) act
	  INNER JOIN CMCODECASE AS CC on CC.CMCODECASEID = act.CodeCaseId
	  INNER JOIN CMCASETYPE ON CMCASETYPE.CMCASETYPEID = CC.CMCASETYPEID 
	  INNER JOIN CMCODECASESTATUS ON CMCODECASESTATUS.CMCODECASESTATUSID = CC.CMCODECASESTATUSID
	  LEFT OUTER JOIN dbo.USERS ON USERS.SUSERGUID = CC.ASSIGNEDTO
	  LEFT OUTER JOIN dbo.CMCODECASEPARCEL ON CMCODECASEPARCEL.CMCODECASEID = CC.CMCODECASEID AND CMCODECASEPARCEL.[PRIMARY] = 1
	  LEFT OUTER JOIN dbo.PARCEL ON PARCEL.PARCELID = CMCODECASEPARCEL.PARCELID
	  LEFT OUTER JOIN dbo.CMCODECASEADDRESS ON CMCODECASEADDRESS.CMCODECASEID = CC.CMCODECASEID AND CMCODECASEADDRESS.MAIN = 1 
	  LEFT OUTER JOIN dbo.MAILINGADDRESS AS address ON address.MAILINGADDRESSID = CMCODECASEADDRESS.MAILINGADDRESSID
	  outer apply 
	  (select top 1 c.FIRSTNAME, c.LASTNAME, vaddress.ADDRESSLINE1, vaddress.ADDRESSLINE2, 
        vaddress.ADDRESSLINE3, vaddress.CITY, vaddress.STATE, vaddress.COUNTY, vaddress.COUNTRY, vaddress.COUNTRYTYPE, 
        vaddress.PREDIRECTION, vaddress.POSTDIRECTION, vaddress.UNITORSUITE, vaddress.STREETTYPE, vaddress.POSTALCODE, 
	    vaddress.COMPSITE, vaddress.POBOX, vaddress.RURALROUTE, vaddress.STATION, vaddress.PROVINCE
	    from CMCODECASECONTACT 
		inner join GLOBALENTITY c on CMCODECASECONTACT.GLOBALENTITYID = c.GLOBALENTITYID
		inner join CMCODECASECONTACTTYPE on CMCODECASECONTACTTYPE.CMCODECASECONTACTTYPEID = CMCODECASECONTACT.CMCODECASECONTACTTYPEID		
		left join GLOBALENTITYMAILINGADDRESS on GLOBALENTITYMAILINGADDRESS.GLOBALENTITYID = c.GLOBALENTITYID
		left join MAILINGADDRESS as vaddress on vaddress.MAILINGADDRESSID = GLOBALENTITYMAILINGADDRESS.MAILINGADDRESSID
		
		where CMCODECASECONTACTTYPE.CMCONTACTTYPESYSTEMID = 2 and CMCODECASECONTACT.CMCODECASEID = CC.CMCODECASEID
		order by CMCODECASECONTACT.ISBILLING, c.FIRSTNAME, c.LASTNAME, c.GLOBALENTITYNAME desc) as Violator

	  WHERE act.ActionTypeId = 22
    END

	if exists (select * from @ACTIONS where ActionTypeId = 23)
	BEGIN
    -- permit workorders
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, permitWko.PMPERMITWORKORDERID AS EntityWorkOrderId, permitWko.WORKORDERID AS WorkOrderId, 
		permitWko.WORKORDERNUMBER AS WorkOrderNumber, permitWko.WORKORDERSTATUSNAME AS WorkOrderStatus, 
		permitWko.WORKORDERTYPENAME AS WorkOrderType, permitWko.WORKORDERTYPECLASSNAME  AS WorkOrderTypeClass, permitWko.DESCRIPTION AS Description,
		permitWko.CREATEDATE as CreateDate,
		(SELECT TOP 1 INTEGRATION_LOG.INTEGRATION_LOG_ID  from INTEGRATION_LOG WHERE permitWko.PMPERMITWORKORDERID = INTEGRATION_LOG.RECORDWORKORDERID order by INTEGRATION_LOG.LOG_DATE desc) as IntegrationErrorLogId
	  FROM @ACTIONS
	  INNER JOIN PMPERMITWORKORDER permitWko on permitWko.PMPERMITWFACTIONSTEPID = [@ACTIONS].ActionId
	  WHERE [@ACTIONS].ActionTypeId = 23
	UNION
	-- plan workorders
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, planWko.PLPLANWORKORDERID AS EntityWorkOrderId, planWko.WORKORDERID AS WorkOrderId, 
		planWko.WORKORDERNUMBER AS WorkOrderNumber, planWko.WORKORDERSTATUSNAME AS WorkOrderStatus, 
		planWko.WORKORDERTYPENAME AS WorkOrderType, planWko.WORKORDERTYPECLASSNAME  AS WorkOrderTypeClass, planWko.DESCRIPTION AS Description,
		planWko.CREATEDATE as CreateDate,
		(SELECT TOP 1 INTEGRATION_LOG.INTEGRATION_LOG_ID  from INTEGRATION_LOG WHERE planWko.PLPLANWORKORDERID = INTEGRATION_LOG.RECORDWORKORDERID order by INTEGRATION_LOG.LOG_DATE desc) as IntegrationErrorLogId
	  FROM @ACTIONS
	  INNER JOIN PLPLANWORKORDER planWko on planWko.PLPLANWFACTIONSTEPID = [@ACTIONS].ActionId
	  WHERE [@ACTIONS].ActionTypeId = 23
	UNION
	-- code case workorders
	SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, codeCaseWko.CMCODECASEWORKORDERID AS EntityWorkOrderId, codeCaseWko.WORKORDERID AS WorkOrderId, 
		codeCaseWko.WORKORDERNUMBER AS WorkOrderNumber, codeCaseWko.WORKORDERSTATUSNAME AS WorkOrderStatus, 
		codeCaseWko.WORKORDERTYPENAME AS WorkOrderType, codeCaseWko.WORKORDERTYPECLASSNAME  AS WorkOrderTypeClass, codeCaseWko.DESCRIPTION AS Description,
		codeCaseWko.CREATEDATE as CreateDate,
		(SELECT TOP 1 INTEGRATION_LOG.INTEGRATION_LOG_ID  from INTEGRATION_LOG WHERE codeCaseWko.CMCODECASEWORKORDERID = INTEGRATION_LOG.RECORDWORKORDERID order by INTEGRATION_LOG.LOG_DATE desc) as IntegrationErrorLogId
	  FROM @ACTIONS
	  INNER JOIN CMCODECASEWORKORDER codeCaseWko on codeCaseWko.CMCODEWFACTIONSTEPID = [@ACTIONS].ActionId
	  WHERE [@ACTIONS].ActionTypeId = 23
    END

	if exists (select * from @ACTIONS where ActionTypeId = 24) --Create Business License
	  BEGIN
		 SELECT	  act.ActionTypeId AS ActionTypeId, 
			  act.ActionId AS WorkflowActionId, 
			  BL.BLLICENSEID as LicenseId, 
			  BL.LICENSENUMBER as LicenseNumber, 
			  Business.COMPANYNAME as BusinessName,
			  Business.DBA as DBA,
			  BL.APPLIEDDATE as ApplyDate, 
			  BLType.BLLICENSETYPEID AS LicenseTypeId,
			  BLType.NAME AS LicenseType,
			  blClass.NAME AS LicenseClass,
			  BusTypes.NAME AS IndustryClassification,
			  BLSatatus.NAME AS LicenseStatus,
			  BL.EXPIRATIONDATE AS ExpirationDate,
			  BL.LASTRENEWALDATE AS LastRenewalDate,
			  BL.REPORTEDRECEIPTS - BL.ALLOWEDDEDUCTIONAMOUNT AS GrossReceipt,
			  Contact.NAME AS BillingContact,
			  Contact.TITLE AS Title,
			  Contact.GLOBALENTITYNAME as CompanyName,
		  
			  address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
			  address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
			  address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
			  address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province,
			  BLType.BLLICENSETYPEMODULEID AS BusinessLicenseTypeModuleId
	  
			  FROM (
			   SELECT ISNULL(blRef.BLLICENSEID, actions.SubRecordId) as BlId, actions.ActionId, actions.ActionTypeId 
			    FROM @ACTIONS actions 
			    LEFT JOIN BLLICENSEACTIONREF blRef on actions.ActionId = blRef.OBJECTID 
			    WHERE  actions.ActionTypeId = 24 AND ISNULL(blRef.BLLICENSEID, actions.SubRecordId) IS NOT NULL AND ISNULL(blRef.BLLICENSEID, actions.SubRecordId) != ''
			  ) act
			  INNER JOIN BLLICENSE AS BL on BL.BLLICENSEID = act.BlId
			  INNER JOIN BLLICENSETYPE AS BLType ON BLType.BLLICENSETYPEID = BL.BLLICENSETYPEID 
			  INNER JOIN BLLICENSESTATUS AS BLSatatus ON BLSatatus.BLLICENSESTATUSID = BL.BLLICENSESTATUSID
			  INNER JOIN dbo.DISTRICT AS DIS ON DIS.DISTRICTID = BL.DISTRICTID
			  LEFT OUTER JOIN BLGLOBALENTITYEXTENSION AS Business ON Business.BLEXTCOMPANYTYPEID=BL.BLGLOBALENTITYEXTENSIONID
			  LEFT OUTER JOIN BLLICENSECLASS AS blClass ON blClass.BLLICENSECLASSID = BL.BLLICENSECLASSID
			  OUTER APPLY(
				 SELECT TOP 1 XT.CODENUMBER+' - '+ XT.NAME AS NAME FROM BLLICENSEEXTBUSINESSTYPE X
				 INNER JOIN BLEXTBUSINESSTYPE XT ON XT.BLEXTBUSINESSTYPEID = X.BLEXTBUSINESSTYPEID
				 WHERE X.BLLICENSEID=BL.BLLICENSEID AND X.MAIN=1
			   ) BusTypes
			   OUTER APPLY(
				 SELECT TOP 1 GC.FIRSTNAME +' '+ GC.LASTNAME AS NAME, GC.TITLE, GC.GLOBALENTITYNAME, LC.ISBILLING 
				 FROM BLLICENSECONTACT LC
				 INNER JOIN GLOBALENTITY GC ON GC.GLOBALENTITYID = LC.GLOBALENTITYID
				 WHERE LC.BLLICENSEID=BL.BLLICENSEID ORDER BY LC.ISBILLING DESC
			   ) Contact
			  OUTER APPLY(
			     SELECT TOP 1 A.MAILINGADDRESSID FROM BLLICENSEADDRESS  A WHERE A.BLLICENSEID = BL.BLLICENSEID AND A.MAIN = 1 
			  ) BLA
			  LEFT OUTER JOIN MAILINGADDRESS AS address ON address.MAILINGADDRESSID = BLA.MAILINGADDRESSID
	  END

	if exists (select * from @ACTIONS where ActionTypeId = 14)
	BEGIN	
		SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, BA.BLLICENSEACTIVITYID AS ActivityId, BA.LICENSEACTIVITYNUMBER AS ActivityNumber, BT.NAME AS ActivityType,
			BA.LICENSEACTIVITYNAME AS ActivityName, BA.CREATEDON AS CreateDate, USERS.FNAME + ' ' + USERS.LNAME AS CreatedBy, BA.LICENSEACTIVITYCOMMENTS AS Comments
			FROM @ACTIONS
			INNER JOIN BLLICENSEACTIVITY AS BA on BA.BLLICENSEWFACTIONSTEPID = [@ACTIONS].ActionId
			INNER JOIN BLLICENSEACTIVITYTYPE BT on BT.BLLICENSEACTIVITYTYPEID = BA.BLLICENSEACTIVITYTYPEID
			LEFT JOIN USERS on USERS.SUSERGUID = BA.SUSERGUID
	END

	if exists (select * from @ACTIONS where ActionTypeId = 17)
	BEGIN	
		SELECT [@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId, IL.ILLICENSEACTIVITYID AS ActivityId, IL.ACTIVITYNUMBER AS ActivityNumber, IT.NAME AS ActivityType,
			IL.ACTIVITYNAME AS ActivityName, IL.CREATEDON AS CreateDate, USERS.FNAME + ' ' + USERS.LNAME AS CreatedBy, IL.ACTIVITYCOMMENTS AS Comments
			FROM @ACTIONS
			INNER JOIN ILLICENSEACTIVITY AS IL on IL.ILLICENSEWFACTIONSTEPID = [@ACTIONS].ActionId
			INNER JOIN ILLICENSEACTIVITYTYPE IT on IT.ILLICENSEACTIVITYTYPEID = IL.ILLICENSEACTIVITYTYPEID
			LEFT JOIN USERS on USERS.SUSERGUID = IL.SUSERID
	END

	if exists (select * from @ACTIONS where ActionTypeId = 18)
	BEGIN	
			SELECT  
			[@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId,
			ER.EXAMREQUESTID AS ExamRequestId, ER.REQUESTNUMBER AS RequestNumber, ER.REQUESTDATE AS RequestDate,
			ER.LOCATIONDETAILS AS LocationDetails, ER.SPECIALSITTING AS SpecialSitting, ET.NAME AS ExamTypeName, 
			EF.NAME AS ExamFormatName, ETS.NAME AS ExamTimeSlotName, 
			EL.NAME AS ExamLocationName
			FROM @ACTIONS
            INNER JOIN EXAMREQUESTWFXREF AS ERX  on ERX.EXAMREQUESTWFXREFID = [@ACTIONS].ActionId
            INNER JOIN EXAMREQUEST AS ER on ER.EXAMREQUESTID = ERX.EXAMREQUESTID
            INNER JOIN EXAMTYPE AS ET on ET.EXAMTYPEID = ER.EXAMTYPEID
            INNER JOIN EXAMTIMESLOT ETS on ETS.EXAMTIMESLOTID = ER.EXAMTIMESLOTID
            INNER JOIN EXAMLOCATION AS EL on EL.EXAMLOCATIONID = ER.EXAMLOCATIONID
			LEFT JOIN EXAMFORMATTYPE AS EF on EF.EXAMFORMATTYPEID = ER.EXAMFORMATTYPEID
	END

	if exists (select * from @ACTIONS where ActionTypeId = 19)
	BEGIN	
			SELECT  
			[@ACTIONS].ActionTypeId AS ActionTypeId, [@ACTIONS].ActionId AS WorkflowActionId,
			ES.EXAMSITTINGID AS ExamSittingId, ES.SITTINGNUMBER AS ExamSittingNumber,
			ES.SCHEDULEDDATE AS ScheduledDate, ES.EXPIRATIONDATE AS ExpirationDate,
			ES.LOCATIONDETAILS AS LocationDetails, ES.SPECIALSITTING AS SpecialSitting, ES.SCORE AS Score,
            ET.NAME AS ExamTypeName, EF.NAME AS ExamFormatName, ETS.NAME AS ExamTimeSlotName, 
			EL.NAME AS ExamLocationName, EST.NAME AS ExamStatusName, EV.NAME AS ExamVersionName,
			CONCAT(US.FNAME,' ',US.LNAME)  AS AdministeredByName
			FROM @ACTIONS
            INNER JOIN EXAMSITTINGWFXREF AS ESX  on ESX.EXAMSITTINGWFXREFID = [@ACTIONS].ActionId
            INNER JOIN EXAMSITTING AS ES on ES.EXAMSITTINGID = ESX.EXAMSITTINGID
            INNER JOIN EXAMTYPE AS ET on ET.EXAMTYPEID = ES.EXAMTYPEID
            INNER JOIN EXAMTIMESLOT ETS on ETS.EXAMTIMESLOTID = ES.EXAMTIMESLOTID
            INNER JOIN EXAMLOCATION AS EL on EL.EXAMLOCATIONID = ES.EXAMLOCATIONID
			INNER JOIN EXAMSTATUS AS EST on EST.EXAMSTATUSID = ES.EXAMSTATUSID
			LEFT JOIN EXAMVERSION AS EV on EV.EXAMVERSIONID = ES.EXAMVERSIONID
			LEFT JOIN USERS AS US on US.SUSERGUID = ES.ADMINISTEREDBYID
			LEFT JOIN EXAMFORMATTYPE AS EF on EF.EXAMFORMATTYPEID = ES.EXAMFORMATTYPEID
	END

	IF EXISTS (SELECT * FROM @ACTIONS WHERE ActionTypeId = 21)
	BEGIN
		SELECT act.ActionTypeId AS ActionTypeId, act.ActionId AS WorkflowActionId, 
			OMOBJECT.OMOBJECTID AS ObjectId, OMOBJECT.OBJECTNUMBER as ObjectNumber,
			OMOBJECT.OMOBJECTTYPEID AS ObjectTypeId, OMOBJECTTYPE.NAME AS ObjectType,PARCEL.PARCELNUMBER AS MainParcelNumber,
		OMOBJECT.INSTALLDATE,OMOBJECTCLASSIFICATION.NAME AS ObjectClassification,
		OMOBJECTSTATUS.NAME AS OBJECTSTATUS, PRPROJECT.NAME AS PROJECTNAME,
		OMOBJECT.OPERATIONSTARTDATE, OMOBJECT.OPERATIONENDDATE, OMOBJECT.LASTCHANGEDON,
		OMOBJECT.OMOBJECTPARENTID,PARENTOBJECT.OBJECTNUMBER AS PARENTOBJECTNUMBER,OMOBJECT.DESCRIPTION,
		address.ADDRESSLINE1 AS AddressLine1, address.ADDRESSLINE2 AS AddressLine2, 
		address.ADDRESSLINE3 AS AddressLine3, address.CITY AS City, address.STATE AS State, address.COUNTY AS County, address.COUNTRY AS Country, address.COUNTRYTYPE AS CountryTypeId, 
		address.PREDIRECTION AS PreDirection, address.POSTDIRECTION AS PostDirection, address.UNITORSUITE AS UnitOrSuite, address.STREETTYPE AS StreetType, address.POSTALCODE AS PostalCode, 
		address.COMPSITE AS CompSite, address.POBOX AS PoBox, address.RURALROUTE AS RuralRoute, address.STATION AS Station, address.PROVINCE as Province  
		FROM  (
		SELECT ISNULL(objectRef.OMOBJECTID, actions.SubRecordId) as ObjectId, actions.ActionId, actions.ActionTypeId FROM @ACTIONS actions 
		LEFT JOIN OMOBJECTACTIONREF objectRef on actions.ActionId = objectRef.CASEID WHERE ISNULL(objectRef.OMOBJECTID, actions.SubRecordId) IS NOT NULL AND ISNULL(objectRef.OMOBJECTID, actions.SubRecordId) != ''
		) act
		INNER JOIN OMOBJECT on OMOBJECTID = act.ObjectId
		INNER JOIN OMOBJECTTYPE ON OMOBJECTTYPE.OMOBJECTTYPEID = OMOBJECT.OMOBJECTTYPEID
		INNER JOIN OMOBJECTSTATUS ON OMOBJECTSTATUS.OMOBJECTSTATUSID = OMOBJECT.OMOBJECTSTATUSID
		INNER JOIN OMOBJECTCLASSIFICATION ON OMOBJECTCLASSIFICATION.OMOBJECTCLASSIFICATIONID = OMOBJECT.OMOBJECTCLASSIFICATIONID
		LEFT OUTER JOIN OMOBJECT AS PARENTOBJECT ON PARENTOBJECT.OMOBJECTID = OMOBJECT.OMOBJECTPARENTID
		LEFT OUTER JOIN PRPROJECTOBJECT ON PRPROJECTOBJECT.OMOBJECTID = OMOBJECT.OMOBJECTID
		LEFT OUTER JOIN PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTOBJECT.PRPROJECTID
		LEFT OUTER JOIN OMOBJECTPARCEL ON OMOBJECTPARCEL.OMOBJECTID = OMOBJECT.OMOBJECTID AND OMOBJECTPARCEL.MAIN = 1
		LEFT OUTER JOIN PARCEL ON PARCEL.PARCELID = OMOBJECTPARCEL.PARCELID
		LEFT OUTER JOIN OMOBJECTADDRESS ON OMOBJECTADDRESS.OMOBJECTID = OMOBJECT.OMOBJECTID AND OMOBJECTADDRESS.MAIN = 1 
		LEFT OUTER JOIN MAILINGADDRESS AS address ON address.MAILINGADDRESSID = OMOBJECTADDRESS.MAILINGADDRESSID
	  END
END