CREATE PROCEDURE [dbo].[LINKED_APPLICATIONS]
@ENTITY_ID char(36),
@MODULE_TYPE char(36),
@FROM INT = 0,
@TO INT,
@PAGE_SIZE INT = 20,
@SORT_FIELD VARCHAR(36),
@IS_ASC BIT = 1,
@USER_ID as char(36)
AS
SET NOCOUNT ON;
declare @DATA TABLE 
(
	APPLICATIONID char(36)
)
	IF (@MODULE_TYPE = 'PermitManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDAPPLICATIONFROMPERMITPLAN(@ENTITY_ID,@USER_ID)
	END
	IF (@MODULE_TYPE = 'PlanManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDAPPLICATIONFROMPERMITPLAN(@ENTITY_ID,@USER_ID)
	END
	IF (@MODULE_TYPE = 'ContactManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDAPPLICATIONFROMCONTACT(@ENTITY_ID,@USER_ID)
	END
	IF (@MODULE_TYPE = 'ProjectManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDAPPLICATIONFROMPROJECT(@ENTITY_ID,@USER_ID)
	END
	IF (@MODULE_TYPE = 'PropertyManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDAPPLICATIONFROMPROPERTYMANAGEMENT(@ENTITY_ID,@USER_ID)
	END
BEGIN
with APLICATIONDETAILS as (
SELECT DISTINCT PLAPPLICATION.PLAPPLICATIONID, PLAPPLICATION.APPNUMBER, PLAPPLICATION.APPLICATIONDATE, PLAPPLICATIONSTATUS.STATUS, PLAPPLICATIONTYPE.APPLICATIONTYPENAME 
		FROM PLAPPLICATION INNER JOIN 
		PLAPPLICATIONSTATUS ON PLAPPLICATION.PLAPPLICATIONSTATUSID = PLAPPLICATIONSTATUS.PLAPPLICATIONSTATUSID INNER JOIN 
		PLAPPLICATIONTYPE ON PLAPPLICATION.PLAPPLICATIONTYPEID = PLAPPLICATIONTYPE.PLAPPLICATIONTYPEID 
		WHERE PLAPPLICATION.PLAPPLICATIONID in (select APPLICATIONID from @DATA)), 
		NUMBEREDDATA as (SELECT PLAPPLICATIONID, APPNUMBER, APPLICATIONDATE, STATUS, APPLICATIONTYPENAME, ROW_NUMBER() OVER(ORDER BY 
		case when @IS_ASC = 1 AND @SORT_FIELD = 'APPNUMBER' then APPNUMBER END ASC, 
		case when @IS_ASC = 0 AND @SORT_FIELD = 'APPNUMBER' then APPNUMBER END DESC, 
		case when @IS_ASC = 1 AND @SORT_FIELD = 'APPLICATIONDATE' then APPLICATIONDATE END ASC, 
		case when @IS_ASC = 0 AND @SORT_FIELD = 'APPLICATIONDATE' then APPLICATIONDATE END DESC, 
		case when @IS_ASC = 1 AND @SORT_FIELD = 'STATUS' then STATUS END ASC, 
		case when @IS_ASC = 0 AND @SORT_FIELD = 'STATUS' then STATUS END DESC, 
		case when @IS_ASC = 1 AND @SORT_FIELD = 'APPLICATIONTYPENAME' then APPLICATIONTYPENAME END ASC, 
		case when @IS_ASC = 0 AND @SORT_FIELD = 'APPLICATIONTYPENAME' then APPLICATIONTYPENAME END DESC) 
		AS ROWNUMBER, COUNT(1) OVER() AS TOTAL_ROWS from APLICATIONDETAILS) 
		select * from NUMBEREDDATA WHERE ROWNUMBER > @FROM AND ROWNUMBER <= @TO
END