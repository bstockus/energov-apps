CREATE PROCEDURE [dbo].[LINKED_BUSINESS_LICENSES_DETAIL]
	@ENTITY_ID as char(36),
	@MODULE_TYPE as char(36),
	@FROM INT = 1,
	@TO INT,
	@PAGE_SIZE INT = 20,
	@SORT_FIELD char(36),
	@IS_ASC BIT = 1,
	@USER_ID as char(36),
	@SUB_MODULE_TYPE INT=1
AS
declare @DATA TABLE 
(
	BLLICENSEID char(36)
)

declare @UseFreeFormForCompanyName bit = 0
select @UseFreeFormForCompanyName =  BITVALUE from SETTINGS where name = 'UseFreeformTextForCompanyName'

	IF (@MODULE_TYPE = 'PermitManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMPERMIT(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'PlanManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMPLAN(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'CodeManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMCODECASE(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'BusinessLicenseManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMBUSINESSLICENSE(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'BusinessLicenseEntity')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMBUSINESS(@ENTITY_ID, @USER_ID,@SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'ContactManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMCONTACT(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END
	IF (@MODULE_TYPE = 'PropertyManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDBUSINESSLICENSEFROMPROPERTYMANAGEMENT(@ENTITY_ID, @USER_ID, @SUB_MODULE_TYPE)
	END

BEGIN
		
		with LINKEDLICENSES AS( select BLLICENSEID FROM @DATA), 
		ALLBUSINESSLICENSES as (select BLLICENSEID, LICENSENUMBER,typeNAME.NAME as TYPENAME, classify.NAME AS CLASSIFICATION, lStatus.NAME as STATUS, case @UseFreeFormForCompanyName when 1 then holder.COMPANYNAME else glEntity.GLOBALENTITYNAME END as BUSINESS, TAXYEAR as LICENSEYEAR, APPLIEDDATE,
		LASTINSPECTIONDATE, NUMBEROFUNITS, EXPIRATIONDATE, bl.DESCRIPTION, bl.ISSUEDDATE from BLLICENSE bl  
		INNER JOIN BLLICENSETYPE typeNAME on bl.BLLICENSETYPEID = typeNAME.BLLICENSETYPEID  
		INNER JOIN BLLICENSESTATUS lStatus on bl.BLLICENSESTATUSID = lStatus.BLLICENSESTATUSID  
		INNER JOIN BLLICENSECLASS classify on bl.BLLICENSECLASSID = classify.BLLICENSECLASSID  
		INNER JOIN BLGLOBALENTITYEXTENSION holder on bl.BLGLOBALENTITYEXTENSIONID = holder.BLGLOBALENTITYEXTENSIONID  
		LEFT JOIN GLOBALENTITY glEntity on holder.GLOBALENTITYID = glEntity.GLOBALENTITYID
		where bl.BLLICENSEID in (SELECT BLLICENSEID from LINKEDLICENSES)),  
		NUMBEREDDATA as (select ALLBUSINESSLICENSES.BLLICENSEID, LICENSENUMBER,TYPENAME, CLASSIFICATION, STATUS, BUSINESS, LICENSEYEAR, APPLIEDDATE,
		LASTINSPECTIONDATE, NUMBEROFUNITS, EXPIRATIONDATE, DESCRIPTION, ISSUEDDATE,
		ROW_NUMBER() OVER(ORDER BY  
		case when @is_asc = 1 AND @Sort_Field = 'LICENSENUMBER' then LICENSENUMBER END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'LICENSENUMBER' then LICENSENUMBER END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'TYPENAME' then TYPENAME END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'TYPENAME' then TYPENAME END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'CLASSIFICATION' then CLASSIFICATION END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'CLASSIFICATION' then CLASSIFICATION END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'STATUS' then STATUS END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'STATUS' then STATUS END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'BUSINESS' then BUSINESS END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'BUSINESS' then BUSINESS END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'LICENSEYEAR' then LICENSEYEAR END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'LICENSEYEAR' then LICENSEYEAR END DESC,  
		case when @is_asc = 1 AND @Sort_Field = 'LASTINSPECTIONDATE' then LASTINSPECTIONDATE END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'LASTINSPECTIONDATE' then LASTINSPECTIONDATE END DESC,
		case when @is_asc = 1 AND @Sort_Field = 'NUMBEROFUNITS' then NUMBEROFUNITS END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'NUMBEROFUNITS' then NUMBEROFUNITS END DESC,
		case when @is_asc = 1 AND @Sort_Field = 'EXPIRATIONDATE' then EXPIRATIONDATE END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'EXPIRATIONDATE' then EXPIRATIONDATE END DESC,
		case when @is_asc = 1 AND @Sort_Field = 'DESCRIPTION' then DESCRIPTION END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'DESCRIPTION' then DESCRIPTION END DESC,
		case when @is_asc = 1 AND @Sort_Field = 'ISSUEDDATE' then ISSUEDDATE END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'ISSUEDDATE' then ISSUEDDATE END DESC,
		case when @is_asc = 1 AND @Sort_Field = 'APPLIEDDATE' then APPLIEDDATE END ASC,  
		case when @is_asc = 0 AND @Sort_Field = 'APPLIEDDATE' then APPLIEDDATE END DESC)  
		AS ROWNUMBER, COUNT(1) OVER() AS TOTAL_ROWS from ALLBUSINESSLICENSES  
		INNER JOIN LINKEDLICENSES on ALLBUSINESSLICENSES.BLLICENSEID = LINKEDLICENSES.BLLICENSEID)  
		select * from NUMBEREDDATA WHERE ROWNUMBER > @From AND ROWNUMBER <= @To 
END