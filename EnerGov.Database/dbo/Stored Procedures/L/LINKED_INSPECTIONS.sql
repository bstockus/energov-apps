CREATE PROCEDURE [dbo].[LINKED_INSPECTIONS]
	@ENTITY_ID char(36),
	@FROM INT = 0,
	@TO INT,
	@PAGE_SIZE INT = 20,
	@SORT_FIELD VARCHAR(36),
	@IS_ASC BIT = 1,
	@MODULE_TYPE char(36),
	@USER_ID as char(36)
AS

declare @DATA TABLE 
(
	IMINSPECTIONID char(36)
)
	IF (@MODULE_TYPE = 'PermitManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'PlanManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'CodeManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'BusinessLicenseManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'ContactManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMCONTACT(@ENTITY_ID, @USER_ID)
	END	
	IF (@MODULE_TYPE = 'ProjectManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPROJECT(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'BusinessLicenseEntity')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'PropertyManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPROPERTYMANAGEMENT(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'IndividualLicense')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMPARENTRECORD(@ENTITY_ID, @USER_ID)
	END
	IF (@MODULE_TYPE = 'ObjectManagement')
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDINSPECTIONFROMOBJECTCASE(@ENTITY_ID, @USER_ID)
	END

BEGIN

with INSPECTIONDETAILS as (
SELECT IMINSPECTION.IMINSPECTIONID, IMINSPECTION.INSPECTIONNUMBER, IMINSPECTIONTYPE.NAME as InspectionTypeName, IMINSPECTIONSTATUS.STATUSNAME, IMINSPECTION.SCHEDULEDSTARTDATE, IMINSPECTION.ACTUALENDDATE, IMINSPECTION.COMMENTS, IMINSPECTION.LINKID, USERS.FNAME, USERS.LNAME, CONCAT(USERS.LNAME, USERS.FNAME) AS INSPECTORNAME
FROM IMINSPECTION INNER JOIN
                  IMINSPECTIONTYPE ON IMINSPECTION.IMINSPECTIONTYPEID = IMINSPECTIONTYPE.IMINSPECTIONTYPEID INNER JOIN
                  IMINSPECTIONSTATUS ON IMINSPECTION.IMINSPECTIONSTATUSID = IMINSPECTIONSTATUS.IMINSPECTIONSTATUSID LEFT OUTER JOIN
                  IMINSPECTORREF ON IMINSPECTION.IMINSPECTIONID = IMINSPECTORREF.INSPECTIONID LEFT OUTER JOIN
                  USERS ON IMINSPECTORREF.USERID = USERS.SUSERGUID
                  WHERE IMINSPECTION.IMINSPECTIONID in (select IMINSPECTIONID from @DATA) AND (IMINSPECTORREF.BPRIMARY IS NULL OR IMINSPECTORREF.BPRIMARY =1)), 
                  NUMBEREDDATA as (SELECT IMINSPECTIONID, INSPECTIONNUMBER, INSPECTIONTYPENAME, STATUSNAME, 
				  SCHEDULEDSTARTDATE, ACTUALENDDATE, COMMENTS, FNAME, LNAME,INSPECTORNAME, ROW_NUMBER() OVER(ORDER BY 
                        case when @is_asc = 1 AND @SORT_FIELD = 'INSPECTIONNUMBER' then INSPECTIONNUMBER END ASC, 
                        case when @is_asc = 0 AND @SORT_FIELD = 'INSPECTIONNUMBER' then INSPECTIONNUMBER END DESC, 
                        case when @is_asc = 1 AND @SORT_FIELD = 'INSPECTIONTYPENAME' then INSPECTIONTYPENAME END ASC, 
                        case when @is_asc = 0 AND @SORT_FIELD = 'INSPECTIONTYPENAME' then INSPECTIONTYPENAME END DESC, 
                        case when @is_asc = 1 AND @SORT_FIELD = 'STATUSNAME' then STATUSNAME END ASC, 
                        case when @is_asc = 0 AND @SORT_FIELD = 'STATUSNAME' then STATUSNAME END DESC, 
                        case when @is_asc = 1 AND @Sort_Field = 'SCHEDULEDSTARTDATE' then SCHEDULEDSTARTDATE END ASC, 
                        case when @is_asc = 0 AND @Sort_Field = 'SCHEDULEDSTARTDATE' then SCHEDULEDSTARTDATE END DESC, 
                        case when @is_asc = 1 AND @Sort_Field = 'ACTUALENDDATE' then ACTUALENDDATE END ASC, 
                        case when @is_asc = 0 AND @Sort_Field = 'ACTUALENDDATE' then ACTUALENDDATE END DESC, 
                        case when @is_asc = 1 AND @Sort_Field = 'COMMENTS' then COMMENTS END ASC, 
                        case when @is_asc = 0 AND @Sort_Field = 'COMMENTS' then COMMENTS END DESC, 
                        case when @is_asc = 1 AND @Sort_Field = 'INSPECTORNAME' then INSPECTORNAME END ASC, 
                        case when @is_asc = 0 AND @Sort_Field = 'INSPECTORNAME' then INSPECTORNAME END DESC) 
                        AS ROWNUMBER, COUNT(1) OVER() AS TOTAL_ROWS from INSPECTIONDETAILS) 
                        select * from NUMBEREDDATA WHERE ROWNUMBER > @FROM AND ROWNUMBER <= @TO
END