CREATE PROCEDURE [dbo].[LINKED_VIOLATIONS_DETAIL]
	@ENTITY_ID AS CHAR(36),
	@FROM INT = 1,
	@TO INT,
	@PAGE_SIZE INT = 20,
	@SORT_FIELD VARCHAR(36),
	@IS_ASC BIT = 1
AS
declare @DATA TABLE 
(
	CMVIOLATIONID char(36)
)	
	BEGIN
		INSERT INTO @DATA
		SELECT * FROM DBO.LINKEDVIOLATIONFROMCODECASE(@ENTITY_ID)
	END	
BEGIN
WITH LINKEDVIOLATIONS AS(select CMVIOLATIONID FROM @DATA), 
ALLVIOLATIONDETAILS AS (
select violation.CMVIOLATIONID, code.CODENUMBER, category.NAME CATEGORY, status.NAME STATUS, violation.CORRECTIVEACTION, violation.CITATIONISSUEDATE, violation.COMPLIANCEDATE, violation.RESOLVEDDATE from CMVIOLATION violation INNER JOIN CMCODE code on violation.CMCODEID = code.CMCODEID
INNER JOIN CMCODECATEGORY category on violation.CMCODECATEGORYID = category.CMCODECATEGORYID
INNER JOIN CMVIOLATIONSTATUS status on violation.CMVIOLATIONSTATUSID = status.CMVIOLATIONSTATUSID where 
violation.CMVIOLATIONID in (SELECT CMVIOLATIONID FROM LINKEDVIOLATIONS)),
 NUMBEREDDATA AS
 (SELECT ALLVIOLATIONDETAILS.CMVIOLATIONID, CODENUMBER, CATEGORY, STATUS, CORRECTIVEACTION, CITATIONISSUEDATE, COMPLIANCEDATE, RESOLVEDDATE, ROW_NUMBER() OVER(ORDER BY
 case when @is_asc = 1 AND @Sort_Field = 'CODENUMBER' then CODENUMBER END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'CODENUMBER' then CODENUMBER END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'CATEGORY' then CATEGORY END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'CATEGORY' then CATEGORY END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'STATUS' then STATUS END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'STATUS' then STATUS END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'CORRECTIVEACTION' then CORRECTIVEACTION END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'CORRECTIVEACTION' then CORRECTIVEACTION END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'CITATIONISSUEDATE' then CITATIONISSUEDATE END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'CITATIONISSUEDATE' then CITATIONISSUEDATE END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'COMPLIANCEDATE' then COMPLIANCEDATE END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'COMPLIANCEDATE' then COMPLIANCEDATE END DESC,
 case when @is_asc = 1 AND @Sort_Field = 'RESOLVEDDATE' then RESOLVEDDATE END ASC,
 case when @is_asc = 0 AND @Sort_Field = 'RESOLVEDDATE' then RESOLVEDDATE END DESC)
 AS ROWNUMBER, COUNT(1) OVER() AS TOTAL_ROWS from ALLVIOLATIONDETAILS 
 INNER JOIN LINKEDVIOLATIONS on ALLVIOLATIONDETAILS.CMVIOLATIONID = LINKEDVIOLATIONS.CMVIOLATIONID)
 select * from NUMBEREDDATA WHERE ROWNUMBER > @From AND ROWNUMBER <= @To
 END