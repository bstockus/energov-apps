

CREATE PROCEDURE rpt_CM_SR_Code_Case_KPI_Report 

-- Add the parameters for the stored procedure here

--@MODULEID varchar(36)
@STARTDATE datetime,
@ENDDATE datetime

AS

BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;
SET @STARTDATE=dateadd(dd,datediff(dd,0,@STARTDATE),0)
SET @ENDDATE=dateadd(ss,-1,datediff(dd,0,@ENDDATE) + 1)

-- Insert statements for procedure here
SELECT	'Opened' as KPIType,
		CMCODECASE.CMCODECASEID, CMCODECASE.OPENEDDATE, CMCODECASE.CLOSEDDATE,
		CMCASETYPE.NAME CODECASETYPE,
		CMCODECASESTATUS.NAME CODECASESTATUS,
		DISTRICT.NAME CODECASEDISTRICT,
		0 AS CODECASEFEE,
	 --  (SELECT R.[IMAGE] FROM RPTIMAGELIB R
		--WHERE R.IMAGENAME = 'Municipality_Logo') LOGO,
	   (SELECT CASE WHEN R.[IMAGE] IS NULL THEN 'N' ELSE 'Y' END FROM RPTIMAGELIB R
		WHERE R.IMAGENAME = 'Municipality_Logo') SHOWLOGO,
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Name') Municipality_Name,	   
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Page_Footer') Municipality_Page_Footer


FROM	CMCODECASE
		INNER JOIN CMCASETYPE ON CMCODECASE.CMCASETYPEID = CMCASETYPE.CMCASETYPEID

		INNER JOIN CMCODECASESTATUS ON CMCODECASE.CMCODECASESTATUSID  = CMCODECASESTATUS.CMCODECASESTATUSID
		LEFT OUTER JOIN DISTRICT ON CMCODECASE.DISTRICTID = DISTRICT.DISTRICTID

WHERE	CMCODECASE.OPENEDDATE BETWEEN @STARTDATE AND @ENDDATE

UNION

SELECT	'Closed' as KPIType,
		CMCODECASE.CMCODECASEID, CMCODECASE.OPENEDDATE, CMCODECASE.CLOSEDDATE,
		CMCASETYPE.NAME CODECASETYPE,
		CMCODECASESTATUS.NAME CODECASESTATUS,
		DISTRICT.NAME CODECASEDISTRICT,
		0 AS CODECASEFEE,
		--(SELECT R.[IMAGE] FROM RPTIMAGELIB R
		--WHERE R.IMAGENAME = 'Municipality_Logo') LOGO,
	   (SELECT CASE WHEN R.[IMAGE] IS NULL THEN 'N' ELSE 'Y' END FROM RPTIMAGELIB R
		WHERE R.IMAGENAME = 'Municipality_Logo') SHOWLOGO,
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Name') Municipality_Name,	   
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Page_Footer') Municipality_Page_Footer

FROM	CMCODECASE
		INNER JOIN CMCASETYPE ON CMCODECASE.CMCASETYPEID = CMCASETYPE.CMCASETYPEID
		INNER JOIN CMCODECASESTATUS ON CMCODECASE.CMCODECASESTATUSID  = CMCODECASESTATUS.CMCODECASESTATUSID
		LEFT OUTER JOIN DISTRICT ON CMCODECASE.DISTRICTID = DISTRICT.DISTRICTID

WHERE	CMCODECASE.CLOSEDDATE BETWEEN @STARTDATE AND @ENDDATE

UNION

SELECT	'Fees' as KPIType,
		CMCODECASE.CMCODECASEID, CMCODECASE.OPENEDDATE, CMCODECASE.CLOSEDDATE,
		CMCASETYPE.NAME CODECASETYPE,
		CMCODECASESTATUS.NAME CODECASESTATUS,
		DISTRICT.NAME CODECASEDISTRICT,
		COALESCE(CODECASEFEES.CODECASEFEE,0) AS CODECASEFEE,
		--(SELECT R.[IMAGE] FROM RPTIMAGELIB R
		--WHERE R.IMAGENAME = 'Municipality_Logo') LOGO,
	   (SELECT CASE WHEN R.[IMAGE] IS NULL THEN 'N' ELSE 'Y' END FROM RPTIMAGELIB R
		WHERE R.IMAGENAME = 'Municipality_Logo') SHOWLOGO,
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Name') Municipality_Name,	   
	   (SELECT R.REPORTTEXT FROM RPTTEXTLIB R
		WHERE R.TEXTNAME = 'Municipality_Page_Footer') Municipality_Page_Footer

FROM	CMCODECASE
		INNER JOIN CMCASETYPE ON CMCODECASE.CMCASETYPEID = CMCASETYPE.CMCASETYPEID
		INNER JOIN CMCODECASESTATUS ON CMCODECASE.CMCODECASESTATUSID  = CMCODECASESTATUS.CMCODECASESTATUSID
		LEFT OUTER JOIN DISTRICT ON CMCODECASE.DISTRICTID = DISTRICT.DISTRICTID
		LEFT OUTER JOIN (
			SELECT X.CMCODECASEID, X.INVOICEDATE, SUM(X.CODECASEFEE) AS CODECASEFEE
			FROM (
			SELECT	CMCODECASEFEE.CMCODECASEID, CAINVOICE.INVOICEDATE, SUM(CACOMPUTEDFEE.COMPUTEDAMOUNT) AS CODECASEFEE
			FROM	CMCODECASEFEE
					INNER JOIN CACOMPUTEDFEE ON CMCODECASEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID
					INNER JOIN CAINVOICEFEE ON CACOMPUTEDFEE.CACOMPUTEDFEEID = CAINVOICEFEE.CACOMPUTEDFEEID
					INNER JOIN CAINVOICE ON CAINVOICEFEE.CAINVOICEID = CAINVOICE.CAINVOICEID
			WHERE	CACOMPUTEDFEE.ISDELETED = 0
					AND NOT CAINVOICE.CASTATUSID IN (5,9,10)	-- Exclude fees from Void, Refunded and Deleted invoices
					AND CAINVOICE.INVOICEDATE BETWEEN @STARTDATE AND @ENDDATE
			GROUP BY CMCODECASEFEE.CMCODECASEID, CAINVOICE.INVOICEDATE

			UNION ALL

			SELECT	CMCODEWFSTEP.CMCODECASEID, CAINVOICE.INVOICEDATE, SUM(CACOMPUTEDFEE.COMPUTEDAMOUNT) AS CODECASEFEE
			FROM	CMVIOLATIONFEE
					INNER JOIN CMVIOLATION ON CMVIOLATIONFEE.CMVIOLATIONID = CMVIOLATION.CMVIOLATIONID
					INNER JOIN CMCODEWFSTEP ON CMVIOLATION.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
					INNER JOIN CMCODECASE CODEVIO ON CMCODEWFSTEP.CMCODECASEID = CODEVIO.CMCODECASEID 
					INNER JOIN CACOMPUTEDFEE ON CMVIOLATIONFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID
					INNER JOIN CAINVOICEFEE ON CACOMPUTEDFEE.CACOMPUTEDFEEID = CAINVOICEFEE.CACOMPUTEDFEEID
					INNER JOIN CAINVOICE ON CAINVOICEFEE.CAINVOICEID = CAINVOICE.CAINVOICEID
			WHERE	CACOMPUTEDFEE.ISDELETED = 0
					AND NOT CAINVOICE.CASTATUSID IN (5,9,10)	-- Exclude fees from Void, Refunded and Deleted invoices
					AND CAINVOICE.INVOICEDATE BETWEEN @STARTDATE AND @ENDDATE
			GROUP BY CMCODEWFSTEP.CMCODECASEID, CAINVOICE.INVOICEDATE
			) X
			GROUP BY  X.CMCODECASEID, X.INVOICEDATE
		) AS CODECASEFEES ON CMCODECASE.CMCODECASEID = CODECASEFEES.CMCODECASEID

WHERE	CODECASEFEES.INVOICEDATE BETWEEN @STARTDATE AND @ENDDATE
		
END
