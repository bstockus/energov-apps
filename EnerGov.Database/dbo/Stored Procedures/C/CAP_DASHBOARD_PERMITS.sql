
CREATE PROCEDURE [dbo].[CAP_DASHBOARD_PERMITS]
(
	@GLOBAL_ENTITY_ID CHAR(36),
	@APPLY_DATE_CUTOFF DATETIME,
	@USE_WORK_CLASS BIT
)
AS
BEGIN
	SELECT 

		PMPERMITTYPE.PMPERMITTYPEID TypeId,
		PMPERMITTYPE.NAME TypeName,
		PMPERMITTYPE.FRIENDLYNAME TypeDescription,
		PMPERMITWORKCLASS.PMPERMITWORKCLASSID WorkClassId,
		PMPERMITWORKCLASS.NAME WorkClassName,
		SUM(CASE WHEN PMPERMIT.ISSUEDATE IS NULL AND PMPERMIT.FINALIZEDATE IS NULL AND PMPERMIT.EXPIREDATE IS NULL THEN 1 ELSE 0 END)  Pending,
		SUM(CASE WHEN PMPERMITSTATUS.ISSUEDFLAG = 1 OR PMPERMIT.ISSUEDATE IS NOT NULL THEN 1 ELSE 0 END) Active, 
		SUM(CASE WHEN PMPERMITSTATUS.FAILUREFLAG = 1 OR PMPERMITSTATUS.HOLDFLAG = 1 OR dbo.PERMIT_HAS_UNPAID_FEES(PMPERMIT.PMPERMITID) = 1 OR dbo.PERMIT_HAS_FAILED_INSPECTIONS(PMPERMIT.PMPERMITID) = 1 THEN 1 ELSE 0	END) Attention,
		SUM(CASE WHEN PMPERMIT.APPLYDATE >= @APPLY_DATE_CUTOFF THEN 1 ELSE 0 END) Recent
	FROM PMPERMIT
	INNER JOIN PMPERMITTYPE ON PMPERMITTYPE.PMPERMITTYPEID = PMPERMIT.PMPERMITTYPEID
	INNER JOIN PMPERMITSTATUS ON PMPERMITSTATUS.PMPERMITSTATUSID = PMPERMIT.PMPERMITSTATUSID
	INNER JOIN PMPERMITWORKCLASS ON PMPERMITWORKCLASS.PMPERMITWORKCLASSID = PMPERMIT.PMPERMITWORKCLASSID
	WHERE 
		EXISTS(SELECT * FROM PMPERMITCONTACT WHERE PMPERMITCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID and PMPERMITCONTACT.PMPERMITID = PMPERMIT.PMPERMITID)
	GROUP BY 
		PMPERMITTYPE.PMPERMITTYPEID,
		PMPERMITTYPE.NAME,
		PMPERMITTYPE.FRIENDLYNAME,
		PMPERMITWORKCLASS.PMPERMITWORKCLASSID,
		PMPERMITWORKCLASS.NAME
	ORDER BY 
		PMPERMITTYPE.PMPERMITTYPEID,
		PMPERMITTYPE.NAME,
		PMPERMITTYPE.FRIENDLYNAME,
		PMPERMITWORKCLASS.PMPERMITWORKCLASSID,
		PMPERMITWORKCLASS.NAME

END

