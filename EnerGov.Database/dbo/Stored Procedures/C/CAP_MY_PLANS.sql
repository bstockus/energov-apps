
CREATE PROCEDURE [dbo].[CAP_MY_PLANS]
(
	@GLOBAL_ENTITY_ID CHAR(36),
	@APPLY_DATE_CUTOFF DATETIME,
	@PAGE_SIZE INT,
	@PAGE_NUMBER INT,
	@SORT_INDEX INT,
	@FILTER_INDEX INT
)
AS
BEGIN

	DECLARE @QUERY_START INT = (@PAGE_NUMBER - 1) * @PAGE_SIZE;
	DECLARE @QUERY_END INT = @QUERY_START + @PAGE_SIZE;

	SELECT * FROM ( SELECT  ROW_NUMBER() OVER(
    ORDER BY
	CASE WHEN @SORT_INDEX = 1 THEN PLPLAN.PLANNUMBER
         WHEN @SORT_INDEX = 2 THEN PRPROJECT.NAME
         WHEN @SORT_INDEX = 3 THEN 
          PLPLANADDRESS.ADDRESSLINE1 + ' ' + PLPLANADDRESS.PREDIRECTION + ' ' + PLPLANADDRESS.ADDRESSLINE2 + ' ' + PLPLANADDRESS.STREETTYPE + ' ' +
          PLPLANADDRESS.POSTDIRECTION + ' ' + PLPLANADDRESS.UNITORSUITE + ' ' + PLPLANADDRESS.ADDRESSLINE3 + ' ' + PLPLANADDRESS.CITY + ' ' + 
          CASE WHEN PLPLANADDRESS.COUNTRYTYPE = 1 THEN PLPLANADDRESS.PROVINCE ELSE PLPLANADDRESS.STATE END + ' ' + PLPLANADDRESS.POSTALCODE
         WHEN @SORT_INDEX = 4 THEN PLPLANTYPE.PLANNAME         
         WHEN @SORT_INDEX = 5 THEN PLPLANWORKCLASS.NAME
         WHEN @SORT_INDEX = 6 THEN 
		  COALESCE(
			CASE WHEN (
				CASE WHEN PLPLANSTATUS.SUCCESSFLAG = 1 THEN 'Approved, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Denied, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 OR PLPLANSTATUS.HOLDFLAG = 1 OR dbo.PLAN_HAS_UNPAID_FEES(PLPLAN.PLPLANID) = 1 OR dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Attention, ' ELSE '' END +
				CASE WHEN PLPLAN.APPLICATIONDATE >= @APPLY_DATE_CUTOFF THEN 'Recent, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.SUCCESSFLAG <> 1 AND PLPLANSTATUS.HOLDFLAG <> 1 AND PLPLANSTATUS.FAILUREFLAG <> 1 THEN 'Pending, ' ELSE '' END) = '' THEN NULL 
			ELSE 
				CASE WHEN PLPLANSTATUS.SUCCESSFLAG = 1 THEN 'Approved, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Denied, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 OR PLPLANSTATUS.HOLDFLAG = 1 OR dbo.PLAN_HAS_UNPAID_FEES(PLPLAN.PLPLANID) = 1 OR dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Attention, ' ELSE '' END +
				CASE WHEN PLPLAN.APPLICATIONDATE >= @APPLY_DATE_CUTOFF THEN 'Recent, ' ELSE '' END +
				CASE WHEN PLPLANSTATUS.SUCCESSFLAG <> 1 AND PLPLANSTATUS.HOLDFLAG <> 1 AND PLPLANSTATUS.FAILUREFLAG <> 1 THEN 'Pending, ' ELSE '' END 
			END ,'Others')

		 WHEN @SORT_INDEX = 7 THEN
			CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Fail, ' ELSE '' END +
            CASE WHEN PLPLANSTATUS.HOLDFLAG = 1 THEN 'On Hold, ' ELSE '' END +
            CASE WHEN dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Unpaid Fees, ' ELSE '' END +
            CASE WHEN dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Failed Inspections' ELSE '' END

    END, PLPLAN.PLPLANID
  ) ROWNUMBER,
	COUNT(*) OVER() TOTALFOUND, 
	PLPLAN.PLPLANID PLANID, 
	PLPLAN.PLANNUMBER PLANNUMBER,
	PLPLAN.PLPLANTYPEID,
	PLPLAN.PLPLANWORKCLASSID,
	PLPLANTYPE.PLANNAME PLANTYPE, 
	PLPLANWORKCLASS.NAME PLANWORKCLASS, 
	PRPROJECT.NAME PROJECTNAME,
    
	COALESCE(
	CASE WHEN (
		CASE WHEN PLPLANSTATUS.SUCCESSFLAG = 1 THEN 'Approved, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Denied, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 OR PLPLANSTATUS.HOLDFLAG = 1 OR dbo.PLAN_HAS_UNPAID_FEES(PLPLAN.PLPLANID) = 1 OR dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Attention, ' ELSE '' END +
		CASE WHEN PLPLAN.APPLICATIONDATE >= @APPLY_DATE_CUTOFF THEN 'Recent, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.SUCCESSFLAG <> 1 AND PLPLANSTATUS.HOLDFLAG <> 1 AND PLPLANSTATUS.FAILUREFLAG <> 1 THEN 'Pending, ' ELSE '' END) = '' THEN NULL 
	ELSE 
		CASE WHEN PLPLANSTATUS.SUCCESSFLAG = 1 THEN 'Approved, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Denied, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 OR PLPLANSTATUS.HOLDFLAG = 1 OR dbo.PLAN_HAS_UNPAID_FEES(PLPLAN.PLPLANID) = 1 OR dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Attention, ' ELSE '' END +
		CASE WHEN PLPLAN.APPLICATIONDATE >= @APPLY_DATE_CUTOFF THEN 'Recent, ' ELSE '' END +
		CASE WHEN PLPLANSTATUS.SUCCESSFLAG <> 1 AND PLPLANSTATUS.HOLDFLAG <> 1 AND PLPLANSTATUS.FAILUREFLAG <> 1 THEN 'Pending, ' ELSE '' END 
	END ,'Others') STATUS,

	(CASE WHEN PLPLANSTATUS.FAILUREFLAG = 1 THEN 'Fail, ' ELSE '' END +
    CASE WHEN PLPLANSTATUS.HOLDFLAG = 1 THEN 'On Hold, ' ELSE '' END +
    CASE WHEN dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Unpaid Fees, ' ELSE '' END +
    CASE WHEN dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1 THEN 'Failed Inspections' ELSE '' END) REASON,

	PLPLANADDRESS.*  
	FROM  PLPLAN 
	INNER JOIN  PLPLANTYPE ON PLPLANTYPE.PLPLANTYPEID = PLPLAN.PLPLANTYPEID 
	INNER JOIN  PLPLANWORKCLASS ON PLPLANWORKCLASS.PLPLANWORKCLASSID = PLPLAN.PLPLANWORKCLASSID
	INNER JOIN PLPLANSTATUS on PLPLANSTATUS.PLPLANSTATUSID = PLPLAN.PLPLANSTATUSID 
	LEFT OUTER JOIN  PRPROJECTPLAN ON PRPROJECTPLAN.PLPLANID = PLPLAN.PLPLANID 
	LEFT OUTER JOIN  PRPROJECT ON PRPROJECT.PRPROJECTID = PRPROJECTPLAN.PRPROJECTID 
	
	LEFT OUTER JOIN
	  ( SELECT  PLPLANADDRESS.PLPLANID ModuleAddressId, MailingAddress.*  
	 FROM  PLPLANADDRESS  PLPLANADDRESS 
	  INNER JOIN  MailingAddress  MailingAddress ON MailingAddress.MailingAddressID = PLPLANADDRESS.MailingAddressID 
	   WHERE PLPLANADDRESS.MAIN = 1  
	 )
	   PLPLANADDRESS   ON PLPLANADDRESS.ModuleAddressId = PLPLAN.PLPLANID 
	  
	 WHERE EXISTS(SELECT * FROM PLPLANCONTACT WHERE PLPLANCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND PLPLANCONTACT.PLPLANID = PLPLAN.PLPLANID) AND  
	 (@FILTER_INDEX = 6 OR 
(
        (@FILTER_INDEX = 2 AND PLPLANSTATUS.SUCCESSFLAG = 1) OR --Approved
        (@FILTER_INDEX = 3 AND PLPLANSTATUS.FAILUREFLAG = 1) OR --Denied
        (@FILTER_INDEX = 0 AND (PLPLANSTATUS.FAILUREFLAG = 1 OR PLPLANSTATUS.HOLDFLAG = 1 OR dbo.PLAN_HAS_UNPAID_FEES(PLPLAN.PLPLANID) = 1 OR dbo.PLAN_HAS_FAILED_INSPECTIONS(PLPLAN.PLPLANID) = 1)) OR --Attention
        (@FILTER_INDEX = 5 AND PLPLAN.APPLICATIONDATE >= @APPLY_DATE_CUTOFF) OR --Recent
        (@FILTER_INDEX = 1 AND PLPLANSTATUS.SUCCESSFLAG <> 1 AND PLPLANSTATUS.HOLDFLAG <> 1 AND PLPLANSTATUS.FAILUREFLAG <> 1 ) --Pending
)
     )	 
	) NUMBERDDATA WHERE ROWNUMBER > @QUERY_START AND ROWNUMBER <= @QUERY_END;
END
