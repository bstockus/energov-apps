
CREATE PROCEDURE [dbo].[CSS_TOTAL_CALENDAR_EVENT]
(	
	@START_DATE DATETIME,
	@END_DATE DATETIME,
	@GLOBAL_ENTITY_ID CHAR(36) = NULL,
	@INVOICEOPTION BIT = 0,
	@LICENSEOPTION BIT = 0,
	@NUMOFEVENTS INT OUTPUT	
)
AS
BEGIN	
    SET @NUMOFEVENTS = 0
	SELECT @NUMOFEVENTS = COUNT(EVENTID)
	FROM 
	(SELECT 
	HEARING.HEARINGID AS EVENTID    						
    FROM HEARING
	INNER JOIN HEARINGSTATUS ON HEARINGSTATUS.HEARINGSTATUSID = HEARING.HEARINGSTATUSID
	INNER JOIN HEARINGTYPE ON HEARINGTYPE.HEARINGTYPEID = HEARING.HEARINGTYPEID
	LEFT OUTER JOIN HEARINGATTENDEE ON HEARING.HEARINGID = HEARINGATTENDEE.HEARINGID AND HEARINGATTENDEE.ISUSER = 0 AND HEARINGATTENDEE.ISGLOBALENTITY = 1
	LEFT OUTER JOIN HEARINGXREF ON HEARINGXREF.HEARINGID = HEARING.HEARINGID		
	WHERE   (((@GLOBAL_ENTITY_ID IS NULL OR @GLOBAL_ENTITY_ID = '') AND HEARINGTYPE.AVAILINCAP = 1) OR 
		    (@GLOBAL_ENTITY_ID IS NOT NULL AND @GLOBAL_ENTITY_ID <> '' AND HEARINGTYPE.AVAILINCAP = 1) OR
			(@GLOBAL_ENTITY_ID IS NOT NULL AND @GLOBAL_ENTITY_ID <> '' AND HEARINGTYPE.AVAILINCAPCONTACTS = 1 AND HEARINGATTENDEE.ATTENDEEID = @GLOBAL_ENTITY_ID)) AND
			((HEARING.STARTDATE >= @START_DATE AND HEARING.STARTDATE < @END_DATE))			 		 
	UNION
	SELECT 
	MEETING.MEETINGID AS EVENTID    					
    FROM MEETING		
	INNER JOIN MEETINGTYPE ON MEETINGTYPE.MEETINGTYPEID = MEETING.MEETINGTYPEID
	LEFT OUTER JOIN MEETINGATTENDEE ON MEETING.MEETINGID = MEETINGATTENDEE.HEARINGID AND MEETINGATTENDEE.ISUSER = 0 AND MEETINGATTENDEE.ISGLOBALENTITY = 1
	LEFT OUTER JOIN MEETINGXREF ON MEETINGXREF.MEETINGID = MEETING.MEETINGID
	WHERE   (((@GLOBAL_ENTITY_ID IS NULL OR @GLOBAL_ENTITY_ID = '') AND MEETINGTYPE.AVAILINCAP = 1) OR 
		    (@GLOBAL_ENTITY_ID IS NOT NULL AND @GLOBAL_ENTITY_ID <> '' AND MEETINGTYPE.AVAILINCAP = 1) OR
			(@GLOBAL_ENTITY_ID IS NOT NULL AND @GLOBAL_ENTITY_ID <> '' AND MEETINGTYPE.AVAILINCAPCONTACTS = 1 AND MEETINGATTENDEE.ATTENDEEID = @GLOBAL_ENTITY_ID)) AND
			((MEETING.STARTDATE >= @START_DATE AND MEETING.STARTDATE < @END_DATE))						
	UNION
	SELECT 	 PLPLAN.PLPLANID  AS EVENTID
	FROM PLPLAN
	WHERE EXISTS(SELECT * FROM PLPLANCONTACT WHERE PLPLANCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND PLPLANCONTACT.PLPLANID = PLPLAN.PLPLANID)
	AND PLPLAN.EXPIREDATE  >= @START_DATE AND PLPLAN.EXPIREDATE < @END_DATE
	UNION
	--Getting records with Approval Expiry date as expiry date
	SELECT 	PLPLAN.PLPLANID AS EVENTID
    FROM PLPLAN
	WHERE EXISTS(SELECT * FROM PLPLANCONTACT WHERE PLPLANCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND PLPLANCONTACT.PLPLANID = PLPLAN.PLPLANID)
	AND PLPLAN.APPROVALEXPIREDATE  >= @START_DATE AND PLPLAN.APPROVALEXPIREDATE < @END_DATE
	UNION
	
	SELECT PMPERMIT.PMPERMITID AS EVENTID
    FROM PMPERMIT
	WHERE EXISTS(SELECT * FROM PMPERMITCONTACT WHERE PMPERMITCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND PMPERMITCONTACT.PMPERMITID = PMPERMIT.PMPERMITID)
	AND PMPERMIT.EXPIREDATE  >= @START_DATE AND PMPERMIT.EXPIREDATE < @END_DATE

	UNION
	SELECT IMINSPECTIONID  AS EVENTID
    FROM IMINSPECTION
	INNER JOIN  IMINSPECTIONTYPE ON IMINSPECTIONTYPE.IMINSPECTIONTYPEID = IMINSPECTION.IMINSPECTIONTYPEID
	WHERE EXISTS(SELECT 1 FROM IMINSPECTIONCONTACT WHERE IMINSPECTIONCONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID 
				AND IMINSPECTIONCONTACT.IMINSPECTIONID = IMINSPECTION.IMINSPECTIONID) 
				 AND (@LICENSEOPTION=1 OR (@LICENSEOPTION=0 AND IMINSPECTION.IMINSPECTIONLINKID NOT IN (6,7)))
	AND IMINSPECTION.SCHEDULEDSTARTDATE >= @START_DATE AND IMINSPECTION.SCHEDULEDENDDATE < @END_DATE 
	UNION
	SELECT CAINVOICE.CAINVOICEID AS EVENTID
	FROM CAINVOICE 
	INNER JOIN CAINVOICECONTACT ON CAINVOICECONTACT.CAINVOICEID = CAINVOICE.CAINVOICEID
	WHERE @INVOICEOPTION=1 AND (CAINVOICECONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID  AND CAINVOICE.CASTATUSID NOT IN (4,5,9,10) 	
	AND [dbo].[CSS_INVOICE_DUE_AMOUNT](CAINVOICE.CAINVOICEID, CAINVOICE.CASTATUSID, CAINVOICE.INVOICETOTAL) > 0 
	--AND (CAINVOICE.CASTATUSID in (1,3,6) ) OR CAINVOICE.CASTATUSID in (2,7,8))
	AND CAINVOICE.INVOICEDUEDATE >= @START_DATE AND CAINVOICE.INVOICEDUEDATE < @END_DATE )
	
	UNION
	SELECT BLLICENSE.BLLICENSEID AS EVENTID
    FROM BLLICENSE
	WHERE @LICENSEOPTION=1 AND EXISTS(SELECT 1 FROM BLLICENSECONTACT WHERE BLLICENSECONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND BLLICENSECONTACT.BLLICENSEID = BLLICENSE.BLLICENSEID)
	AND BLLICENSE.EXPIRATIONDATE  >= @START_DATE AND BLLICENSE.EXPIRATIONDATE < @END_DATE

	UNION
	SELECT ILLICENSE.ILLICENSEID AS EVENTID
    FROM ILLICENSE
	WHERE @LICENSEOPTION=1 
	AND (ILLICENSE.GLOBALENTITYID = @GLOBAL_ENTITY_ID 
		 OR EXISTS(SELECT 1 FROM ILLICENSECONTACT WHERE ILLICENSECONTACT.GLOBALENTITYID = @GLOBAL_ENTITY_ID AND ILLICENSECONTACT.ILLICENSEID = ILLICENSE.ILLICENSEID))
	AND ILLICENSE.EXPIRATIONDATE  >= @START_DATE AND ILLICENSE.EXPIRATIONDATE < @END_DATE
	) AS EVENTCALENDAR
	RETURN
END