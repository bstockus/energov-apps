
CREATE PROCEDURE MG_CODECASEINSPECTIONTYPE
	@codeCaseId char(36)
AS
BEGIN
-- =============================================
-- Author:		<Author,,Saaed Bhatti>
-- Description:	Expects a plan id and returns a list of ActionName and ActionId for inspections that have not been created.
-- for the lowest wf step priority and the lowest action with in that step
-- =============================================

--get the lowest step order priority
DECLARE @MinPriorityWFStepOrder INT
SET @MinPriorityWFStepOrder = 
(SELECT MIN(CMCODEWFSTEP.PRIORITYORDER)
FROM    CMCODEWFACTIONSTEP 
			INNER JOIN CMCODEWFSTEP ON CMCODEWFACTIONSTEP.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
WHERE  CMCODEWFSTEP.CMCODECASEID = @CodeCaseId 
			AND CMCODEWFSTEP.NOPRIORITY = 0
			AND (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 0 OR CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 5))

--get the lowest step order priority
DECLARE @MinWFStepOrder INT
SET @MinWFStepOrder = ISNull(@MinPriorityWFStepOrder, (SELECT MIN(CMCODEWFSTEP.PRIORITYORDER)
FROM    CMCODEWFACTIONSTEP 
			INNER JOIN CMCODEWFSTEP ON CMCODEWFACTIONSTEP.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
WHERE  CMCODEWFSTEP.CMCODECASEID = @CodeCaseId 
			AND (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 0 OR CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 5)))


--get the lowest action priorty
DECLARE @MinPriorityWFActionOrder INT
SET @MinPriorityWFActionOrder =
(SELECT MIN(CMCODEWFACTIONSTEP.PRIORITYORDER)
FROM	CMCODEWFACTIONSTEP 
			INNER JOIN CMCODEWFSTEP ON CMCODEWFACTIONSTEP.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
WHERE	CMCODEWFSTEP.CMCODECASEID = @CodeCaseId
			AND CMCODEWFSTEP.PRIORITYORDER = @MinWFStepOrder
			AND CMCODEWFACTIONSTEP.NOPRIORITY = 0			
			AND (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 0 OR CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 5))
	
--get the lowest action priorty
DECLARE @MinWFActionOrder INT
SET @MinWFActionOrder = ISNULL(@MinPriorityWFActionOrder, (SELECT MIN(CMCODEWFACTIONSTEP.PRIORITYORDER)
FROM	CMCODEWFACTIONSTEP 
			INNER JOIN CMCODEWFSTEP ON CMCODEWFACTIONSTEP.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
WHERE	CMCODEWFSTEP.CMCODECASEID = @CodeCaseId
			AND CMCODEWFSTEP.PRIORITYORDER = @MinWFStepOrder
			AND (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 0 OR CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 5))) 


--select the available inspection types for the permit with the above priority orders
SELECT	CMCODEWFSTEP.CMCODECASEID, IMINSPECTIONTYPE.NAME, CMCODEWFACTIONSTEP.IMINSPECTIONTYPEID, CMCODEWFACTIONSTEP.CMCODEWFACTIONSTEPID
FROM	CMCODEWFACTIONSTEP
			INNER JOIN CMCODEWFSTEP ON CMCODEWFACTIONSTEP.CMCODEWFSTEPID = CMCODEWFSTEP.CMCODEWFSTEPID
            INNER JOIN IMINSPECTIONTYPE ON CMCODEWFACTIONSTEP.IMINSPECTIONTYPEID = IMINSPECTIONTYPE.IMINSPECTIONTYPEID
            LEFT JOIN IMINSPECTIONACTREF ON CMCODEWFACTIONSTEP.CMCODEWFACTIONSTEPID = IMINSPECTIONACTREF.OBJECTID
			LEFT JOIN IMINSPECTION ON IMINSPECTIONACTREF.IMINSPECTIONID = IMINSPECTION.IMINSPECTIONID
WHERE	CMCODEWFSTEP.CMCODECASEID = @CodeCaseId
			AND CMCODEWFACTIONSTEP.WFACTIONTYPEID = 6
			AND (((CMCODEWFSTEP.PRIORITYORDER = @MinWFStepOrder OR CMCODEWFSTEP.NOPRIORITY = 1) AND CMCODEWFACTIONSTEP.PRIORITYORDER = @MinWFActionOrder) OR CMCODEWFACTIONSTEP.NOPRIORITY = 1)				 
			AND (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 0 OR (CMCODEWFACTIONSTEP.WORKFLOWSTATUSID = 5 AND IMINSPECTION.SCHEDULEDSTARTDATE IS NULL ))
END