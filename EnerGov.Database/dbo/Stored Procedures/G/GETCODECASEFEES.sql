
CREATE PROCEDURE [dbo].[GETCODECASEFEES]
(
	@IsRemainingFees bit = 0,
	@CodeCaseId nvarchar(255),
	@FirstRow int,
	@LastRow int,
	@SortingString nvarchar(255)	
)
AS
BEGIN	
	DECLARE @PaidInFull int = 4;
	DECLARE @Void int = 5;
	DECLARE @Refunded int = 9;
	DECLARE @Deleted int = 10;
	IF @IsRemainingFees = 1
	BEGIN
		SELECT * from (SELECT ROW_NUMBER() OVER(ORDER BY @SortingString ) AS ROWNUMBER,
        COUNT(*) OVER() TOTALFOUND, CodeCase.FeeName, CodeCase.Computed, CodeCase.InvoiceNumber, CodeCase.AmountDue, CodeCase.CAInvoiceID FROM (SELECT
		DISTINCT CACOMPUTEDFEE.FEENAME FeeName, CACOMPUTEDFEE.COMPUTEDAMOUNT Computed, (CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) AmountDue, CAINVOICE.INVOICENUMBER InvoiceNumber, CAINVOICE.CAINVOICEID CAInvoiceID, CACOMPUTEDFEE.CACOMPUTEDFEEID
		FROM  CACOMPUTEDFEE AS CACOMPUTEDFEE
		INNER JOIN  CMCODECASEFEE AS CMCODECASEFEE ON CMCODECASEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICEFEE AS CAINVOICEFEE ON CAINVOICEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICE AS CAINVOICE ON CAINVOICE.CAINVOICEID = CAINVOICEFEE.CAINVOICEID 
		WHERE CACOMPUTEDFEE.CASTATUSID NOT IN (@PaidInFull,@Refunded,@Deleted,@Void) AND CMCODECASEFEE.CMCODECASEID = @CodeCaseId
		UNION ALL SELECT DISTINCT CACOMPUTEDFEE.FEENAME FeeName, CACOMPUTEDFEE.COMPUTEDAMOUNT Computed, (CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) AmountDue, CAINVOICE.INVOICENUMBER InvoiceNumber, CAINVOICE.CAINVOICEID CAInvoiceID, CACOMPUTEDFEE.CACOMPUTEDFEEID  FROM CMCODECASE CM 
		INNER JOIN CMCODEWFSTEP CWFS ON CM.CMCODECASEID = CWFS.CMCODECASEID 
		INNER JOIN CMVIOLATION CMV ON CWFS.CMCODEWFSTEPID = CMV.CMCODEWFSTEPID 
		INNER JOIN CMVIOLATIONFEE CMVF ON CMV.CMVIOLATIONID = CMVF.CMVIOLATIONID 
		INNER JOIN CACOMPUTEDFEE CACOMPUTEDFEE ON CMVF.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICEFEE AS CAINVOICEFEE ON CAINVOICEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICE AS CAINVOICE ON CAINVOICE.CAINVOICEID = CAINVOICEFEE.CAINVOICEID 
		WHERE CACOMPUTEDFEE.CASTATUSID NOT IN (@PaidInFull,@Refunded,@Deleted,@Void) AND CM.CMCODECASEID = @CodeCaseId) as CodeCase) NUMBERDDATA 
		WHERE ROWNUMBER > @FirstRow AND ROWNUMBER <= @LastRow;
	END
	ELSE
	BEGIN
	SELECT * from (SELECT ROW_NUMBER() OVER(ORDER BY @SortingString ) AS ROWNUMBER,
        COUNT(*) OVER() TOTALFOUND, CodeCase.FeeName, CodeCase.Computed, CodeCase.InvoiceNumber, CodeCase.AmountDue, CodeCase.CAInvoiceID FROM (SELECT
		DISTINCT CACOMPUTEDFEE.FEENAME FeeName, CACOMPUTEDFEE.COMPUTEDAMOUNT Computed, (CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) AmountDue, CAINVOICE.INVOICENUMBER InvoiceNumber, CAINVOICE.CAINVOICEID CAInvoiceID, CACOMPUTEDFEE.CACOMPUTEDFEEID
		FROM  CACOMPUTEDFEE AS CACOMPUTEDFEE
		INNER JOIN  CMCODECASEFEE AS CMCODECASEFEE ON CMCODECASEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICEFEE AS CAINVOICEFEE ON CAINVOICEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICE AS CAINVOICE ON CAINVOICE.CAINVOICEID = CAINVOICEFEE.CAINVOICEID 
		WHERE CACOMPUTEDFEE.CASTATUSID = @PaidInFull AND CMCODECASEFEE.CMCODECASEID = @CodeCaseId
		UNION ALL SELECT DISTINCT CACOMPUTEDFEE.FEENAME FeeName, CACOMPUTEDFEE.COMPUTEDAMOUNT Computed, (CACOMPUTEDFEE.COMPUTEDAMOUNT - CACOMPUTEDFEE.AMOUNTPAIDTODATE) AmountDue, CAINVOICE.INVOICENUMBER InvoiceNumber, CAINVOICE.CAINVOICEID CAInvoiceID, CACOMPUTEDFEE.CACOMPUTEDFEEID  FROM CMCODECASE CM 
		INNER JOIN CMCODEWFSTEP CWFS ON CM.CMCODECASEID = CWFS.CMCODECASEID 
		INNER JOIN CMVIOLATION CMV ON CWFS.CMCODEWFSTEPID = CMV.CMCODEWFSTEPID 
		INNER JOIN CMVIOLATIONFEE CMVF ON CMV.CMVIOLATIONID = CMVF.CMVIOLATIONID 
		INNER JOIN CACOMPUTEDFEE CACOMPUTEDFEE ON CMVF.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICEFEE AS CAINVOICEFEE ON CAINVOICEFEE.CACOMPUTEDFEEID = CACOMPUTEDFEE.CACOMPUTEDFEEID 
		INNER JOIN  CAINVOICE AS CAINVOICE ON CAINVOICE.CAINVOICEID = CAINVOICEFEE.CAINVOICEID  
		WHERE CACOMPUTEDFEE.CASTATUSID = @PaidInFull AND CM.CMCODECASEID = @CodeCaseId) as CodeCase) NUMBERDDATA 
		WHERE ROWNUMBER > @FirstRow AND ROWNUMBER <= @LastRow;
	END       
END
