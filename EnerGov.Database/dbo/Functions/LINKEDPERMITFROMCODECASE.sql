CREATE FUNCTION DBO.LINKEDPERMITFROMCODECASE
(	
	@ENTITY_ID char(36),
	@USER_ID char(36)
)
RETURNS TABLE 
AS
RETURN 
(
	Select PMPERMIT.PMPERMITID, 1 AS ISCHILD, 0 AS ISPARENT FROM CMCODEWFSTEP  
	INNER JOIN CMCODEWFACTIONSTEP ON CMCODEWFSTEP.CMCODEWFSTEPID = CMCODEWFACTIONSTEP.CMCODEWFSTEPID  
	INNER JOIN CMCODECASE ON CMCODEWFSTEP.CMCODECASEID = CMCODECASE.CMCODECASEID  
	INNER JOIN PMPERMITACTIONREF ON  CMCODEWFACTIONSTEP.CMCODEWFACTIONSTEPID = PMPERMITACTIONREF.OBJECTID  
	INNER JOIN PMPERMIT ON PMPERMITACTIONREF.PMPERMITID = PMPERMIT.PMPERMITID 
	INNER JOIN GETUSERVISIBLERECORDTYPES(@USER_ID) u on PMPERMIT.PMPERMITTYPEID = u.RECORDTYPEID
	WHERE(CMCODECASE.CMCODECASEID  = @ENTITY_ID)  
	UNION ALL SELECT PMPERMIT.PMPERMITID, 0 AS ISCHILD, 1 AS ISPARENT FROM CMCODECASEACTIONREF  
	INNER JOIN CMCODECASE on CMCODECASEACTIONREF.CMCODECASEID = CMCODECASE.CMCODECASEID  
	INNER JOIN PMPERMITWFACTIONSTEP ON CMCODECASEACTIONREF.CMCODECASEACTIONREFID = PMPERMITWFACTIONSTEP.PMPERMITWFACTIONSTEPID  
	INNER JOIN PMPERMITWFSTEP ON PMPERMITWFACTIONSTEP.PMPERMITWFSTEPID = PMPERMITWFSTEP.PMPERMITWFSTEPID  
	INNER JOIN PMPERMIT ON PMPERMITWFSTEP.PMPERMITID = PMPERMIT.PMPERMITID  
	INNER JOIN GETUSERVISIBLERECORDTYPES(@USER_ID) u on PMPERMIT.PMPERMITTYPEID = u.RECORDTYPEID
	WHERE(CMCODECASE.CMCODECASEID = @ENTITY_ID)
	 
)


